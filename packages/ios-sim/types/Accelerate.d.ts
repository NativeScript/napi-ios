/// <reference types="@nativescript/objc-node-api" />

declare const kvImageBufferTypeCode_ColorSpaceChannel6: number;

declare const kRotate180DegreesCounterClockwise: number;

declare const kvImageMatrixType_ARGBToYpCbCrMatrix: number;

declare const kvImageMatrixType_None: number;

declare const kvImageCVImageFormat_ChromaSiting: number;

declare const kvImageBufferTypeCode_LAB_B: number;

declare const kvImageBufferTypeCode_LAB_A: number;

declare const kvImageBufferTypeCode_XYZ_Y: number;

declare const kvImageBufferTypeCode_CMYK_Black: number;

declare const kvImageBufferTypeCode_CMYK_Magenta: number;

declare const kvImageBufferTypeCode_UniqueFormatCount: number;

declare const kvImageBufferTypeCode_Cr: number;

declare const kvImageBufferTypeCode_Cb: number;

declare const kvImageBufferTypeCode_CVPixelBuffer_YCbCr: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel16: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel13: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel12: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel11: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel4: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel2: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel1: number;

declare const kvImageBufferTypeCode_EndOfList: number;

declare const kvImageDecodeArray_16Q12Format: interop.Pointer;

declare const kvImageGamma_BT709_forward_half_precision: number;

declare const kvImageGamma_9_over_11_half_precision: number;

declare const kvImageGamma_11_over_9_half_precision: number;

declare const kvImageGamma_5_over_11_half_precision: number;

declare const kvImage_PNG_FILTER_VALUE_NONE: number;

declare const kRotate0DegreesCounterClockwise: number;

declare const kRotate270DegreesClockwise: number;

declare const kRotate90DegreesClockwise: number;

declare const kvImageConvert_OrderedNoiseShapeMask: number;

declare const kvImageConvert_DitherOrderedReproducible: number;

declare const kvImageConvert_DitherOrdered: number;

declare const kvImage_ARGBToYpCbCrMatrix_ITU_R_601_4: interop.Pointer;

declare const kvImage_YpCbCrToARGBMatrix_ITU_R_601_4: interop.Pointer;

declare const kvImageHDRContent: number;

declare const kvImageNoAllocate: number;

declare const kvImageDoNotTile: number;

declare const kvImageEdgeExtend: number;

declare const kvImageInvalidImageObject: number;

declare const kvImageColorSyncIsAbsent: number;

declare const kvImageInvalidRowBytes: number;

declare const kvImageUnknownFlagsBit: number;

declare const kvImageInvalidParameter: number;

declare const kvImageNullPointerArgument: number;

declare const kvImageInvalidKernelSize: number;

declare const kvImageRoiLargerThanInputBuffer: number;

declare const kvImageNoError: number;

declare const kvImageInterpolationLinear: number;

declare const _SparseNullMatrix_Complex_Float: SparseMatrix_Complex_Float;

declare const _SparseDefaultSymbolicFactorOptions: SparseSymbolicFactorOptions;

declare const FFT_FORWARD: number;

declare const kFFTDirection_Forward: number;

declare const kvImageCVImageFormat_AlphaIsOneHint: number;

declare const kFFTDirection_Inverse: number;

declare const kvImageGamma_sRGB_forward_half_precision: number;

declare const FFT_RADIX5: number;

declare const kvImageBufferTypeCode_Chroma: number;

declare const kvImageGetTempBufferSize: number;

declare const kvImageBufferTypeCode_RGB_Blue: number;

declare const kFFTRadix2: number;

declare const _SparseDefaultNumericFactorOptions_Complex_Double: SparseNumericFactorOptions;

declare const kvImageBufferTypeCode_ColorSpaceChannel8: number;

declare const kvImageCVImageFormat_NoError: number;

declare const kvImageCVImageFormat_ColorSpace: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel9: number;

declare const kvImageMemoryAllocationError: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel14: number;

declare const kvImageUseFP16Accumulator: number;

declare const _SparseNullMatrix_Complex_Double: SparseMatrix_Complex_Double;

declare const kvImageCVImageFormat_VideoChannelDescription: number;

declare const kvImageBufferTypeCode_Monochrome: number;

declare const kvImageBufferTypeCode_Alpha: number;

declare const kvImageBufferTypeCode_XYZ_Z: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel15: number;

declare const kvImage_PNG_FILTER_VALUE_AVG: number;

declare const FFT_INVERSE: number;

declare const _SparseNullMatrix_Double: SparseMatrix_Double;

declare const _SparseDefaultNumericFactorOptions_Double: SparseNumericFactorOptions;

declare const kvImageGamma_UseGammaValue_half_precision: number;

declare const kvImage_PNG_FILTER_VALUE_UP: number;

declare const kFFTRadix3: number;

declare const kvImageCVImageFormat_ConversionMatrix: number;

declare const kvImageBackgroundColorFill: number;

declare const kvImage_PNG_FILTER_VALUE_PAETH: number;

declare const kvImageBufferTypeCode_CMYK_Yellow: number;

declare const kvImageGamma_9_over_5_half_precision: number;

declare const kvImageGamma_5_over_9_half_precision: number;

declare const kvImageConvert_DitherNone: number;

declare const FFT_RADIX3: number;

declare const kvImagePrintDiagnosticsToConsole: number;

declare const kvImageBufferTypeCode_Luminance: number;

declare const kvImageInvalidOffset_Y: number;

declare const kvImageDoNotClamp: number;

declare const kvImage_ARGBToYpCbCrMatrix_ITU_R_709_2: interop.Pointer;

declare const kvImageConvert_DitherFloydSteinberg: number;

declare const vDSP_HALF_WINDOW: number;

declare const kvImageConvert_DitherAtkinson: number;

declare const kvImageInternalError: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel3: number;

declare const vDSP_HANN_NORM: number;

declare const kvImageLeaveAlphaUnchanged: number;

declare const kRotate270DegreesCounterClockwise: number;

declare const kvImageBufferTypeCode_Indexed: number;

declare const kvImage_PNG_FILTER_VALUE_SUB: number;

declare const kvImageBufferSizeMismatch: number;

declare const _SparseNullMatrix_Float: SparseMatrix_Float;

declare const kvImageBufferTypeCode_XYZ_X: number;

declare const kvImageConvert_OrderedUniformBlue: number;

declare const kvImageBufferTypeCode_CMYK_Cyan: number;

declare const kvImageGamma_BT709_reverse_half_precision: number;

declare const vDSP_HANN_DENORM: number;

declare const kvImageConvert_OrderedGaussianBlue: number;

declare const kRotate90DegreesCounterClockwise: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel7: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel10: number;

declare const kFFTRadix5: number;

declare const kRotate0DegreesClockwise: number;

declare const kvImageGamma_11_over_5_half_precision: number;

declare const kvImageBufferTypeCode_ColorSpaceChannel5: number;

declare const kvImageBufferTypeCode_RGB_Green: number;

declare const _SparseDefaultNumericFactorOptions_Complex_Float: SparseNumericFactorOptions;

declare const kvImageInvalidEdgeStyle: number;

declare const kvImageUnsupportedConversion: number;

declare const kvImageInvalidCVImageFormat: number;

declare const _SparseDefaultNumericFactorOptions_Float: SparseNumericFactorOptions;

declare const kvImage_YpCbCrToARGBMatrix_ITU_R_709_2: interop.Pointer;

declare const kvImageOutOfPlaceOperationRequired: number;

declare const kvImageInterpolationNearest: number;

declare const kvImageCopyInPlace: number;

declare const kvImageGamma_UseGammaValue: number;

declare const kvImageInvalidImageFormat: number;

declare const kvImageNoFlags: number;

declare const kvImageInvalidOffset_X: number;

declare const kvImageBufferTypeCode_CGFormat: number;

declare const kvImageTruncateKernel: number;

declare const kvImageCoreVideoIsAbsent: number;

declare const kRotate180DegreesClockwise: number;

declare const kvImageHighQualityResampling: number;

declare const FFT_RADIX2: number;

declare const kvImageBufferTypeCode_Chunky: number;

declare const kvImageBufferTypeCode_RGB_Red: number;

declare const kvImageGamma_sRGB_reverse_half_precision: number;

declare const kvImageBufferTypeCode_LAB_L: number;

declare const vImage_InterpolationMethod: {
  No: 0,
  Full: 1,
  Half: 2,
};

declare const vImageYpCbCrType: {
  Image422CbYpCrYp8: 0,
  Image422YpCbYpCr8: 1,
  Image422CbYpCrYp8_AA8: 2,
  Image420Yp8_Cb8_Cr8: 3,
  Image420Yp8_CbCr8: 4,
  Image444AYpCbCr8: 5,
  Image444CrYpCb8: 6,
  Image444CbYpCrA8: 7,
  Image444CrYpCb10: 8,
  Image422CrYpCbYpCbYpCbYpCrYpCrYp10: 9,
  Image422CbYpCrYp16: 13,
  Image444AYpCbCr16: 14,
};

declare const BNNSGraphOptimizationPreference: {
  Performance: 0,
  IRSize: 1,
};

declare const BNNSTargetSystem: {
  BNNSTargetSystemGeneric: 0,
};

declare const BNNSSparsityType: {
  BNNSSparsityTypeUnstructured: 0,
};

declare const BNNSRandomGeneratorMethod: {
  BNNSRandomGeneratorMethodAES_CTR: 0,
};

declare const BNNSQuantizerFunction: {
  Quantize: 0,
  Dequantize: 1,
};

declare const BNNSEmbeddingFlags: {
  BNNSEmbeddingFlagScaleGradientByFrequency: 1,
};

declare const BNNSPointerSpecifier: {
  Alpha: 0,
  Beta: 1,
};

declare const BNNSDataLayout: {
  LayoutVector: 65536,
  Layout1DLastMajor: 98304,
  Layout1DFirstMajor: 98305,
  LayoutRowMajorMatrix: 131072,
  LayoutColumnMajorMatrix: 131073,
  Layout2DLastMajor: 163840,
  Layout2DFirstMajor: 163841,
  LayoutFullyConnectedSparse: 135169,
  LayoutImageCHW: 196608,
  LayoutSNE: 196609,
  LayoutNSE: 196610,
  LayoutMHA_DHK: 196611,
  Layout3DLastMajor: 229376,
  Layout3DFirstMajor: 229377,
  LayoutConvolutionWeightsOIHW: 262144,
  LayoutConvolutionWeightsOIHrWr: 262145,
  LayoutConvolutionWeightsIOHrWr: 262146,
  LayoutConvolutionWeightsOIHW_Pack32: 262160,
  Layout4DLastMajor: 294912,
  Layout4DFirstMajor: 294913,
  Layout5DLastMajor: 360448,
  Layout5DFirstMajor: 360449,
  Layout6DLastMajor: 425984,
  Layout6DFirstMajor: 425985,
  Layout7DLastMajor: 491520,
  Layout7DFirstMajor: 491521,
  Layout8DLastMajor: 557056,
  Layout8DFirstMajor: 557057,
};

declare const BNNSReduceFunction: {
  Max: 0,
  Min: 1,
  ArgMax: 2,
  ArgMin: 3,
  Mean: 4,
  MeanNonZero: 5,
  Sum: 6,
  SumSquare: 7,
  SumLog: 8,
  L1Norm: 9,
  LogicalOr: 10,
  LogicalAnd: 11,
  L2Norm: 12,
  LogSumExp: 13,
  Product: 14,
  None: 15,
  LogSum: 16,
  Any: 10,
  All: 11,
};

declare const BNNSFilterType: {
  Convolution: 0,
  FullyConnected: 1,
  BatchNorm: 2,
  InstanceNorm: 3,
  LayerNorm: 4,
  GroupNorm: 5,
  TransposedConvolution: 6,
  Quantization: 7,
  Arithmetic: 8,
};

declare const BNNSNormType: {
  BNNSL2Norm: 1,
};

declare const BNNSOptimizerRegularizationFunction: {
  None: 0,
  L1: 1,
  L2: 2,
};

declare const BNNSArithmeticFunction: {
  Add: 0,
  Subtract: 1,
  Multiply: 2,
  Divide: 3,
  SquareRoot: 4,
  ReciprocalSquareRoot: 5,
  Ceil: 6,
  Floor: 7,
  Round: 8,
  Sin: 9,
  Cos: 10,
  Tan: 11,
  Asin: 12,
  Acos: 13,
  Atan: 14,
  Sinh: 15,
  Cosh: 16,
  Tanh: 17,
  Asinh: 18,
  Acosh: 19,
  Atanh: 20,
  Pow: 21,
  Exp: 22,
  Exp2: 23,
  Log: 24,
  Log2: 25,
  MultiplyNoNaN: 26,
  DivideNoNaN: 27,
  MultiplyAdd: 28,
  Minimum: 29,
  Maximum: 30,
  Select: 31,
  Abs: 32,
  Sign: 33,
  Negate: 34,
  Reciprocal: 35,
  Square: 36,
  FloorDivide: 37,
  TruncDivide: 38,
  TruncRemainder: 39,
  Erf: 40,
};

declare const BNNSLossFunction: {
  SoftmaxCrossEntropy: 1,
  SigmoidCrossEntropy: 2,
  MeanSquareError: 3,
  Huber: 4,
  Yolo: 5,
  Log: 6,
  CosineDistance: 7,
  Hinge: 8,
  MeanAbsoluteError: 9,
  CategoricalCrossEntropy: 10,
};

declare const BNNSActivationFunction: {
  Identity: 0,
  RectifiedLinear: 1,
  LeakyRectifiedLinear: 2,
  Sigmoid: 3,
  Tanh: 4,
  ScaledTanh: 5,
  Abs: 6,
  Linear: 7,
  Clamp: 8,
  IntegerLinearSaturate: 9,
  IntegerLinearSaturatePerChannel: 10,
  Softmax: 11,
  GELUApproximation: 12,
  Gumbel: 13,
  GumbelMax: 14,
  HardSigmoid: 15,
  Softplus: 16,
  Softsign: 17,
  ELU: 18,
  ClampedLeakyRectifiedLinear: 19,
  LinearWithBias: 20,
  LogSoftmax: 21,
  LogSigmoid: 22,
  SELU: 23,
  CELU: 24,
  HardShrink: 25,
  SoftShrink: 26,
  TanhShrink: 27,
  Threshold: 28,
  PReLUPerChannel: 29,
  GELUApproximation2: 30,
  HardSwish: 30,
  SiLU: 31,
  ReLU6: 32,
  Erf: 33,
  GELU: 34,
  GELUApproximationSigmoid: 35,
};

declare const quadrature_integrator: {
  NG: 0,
  AG: 1,
  AGS: 2,
};

declare const SparseSubfactor_t: {
  Invalid: 0,
  P: 1,
  S: 2,
  L: 3,
  D: 4,
  PLPS: 5,
  Q: 6,
  R: 7,
  RP: 8,
  Sr: 9,
  Sc: 10,
};

declare const SparseOrder_t: {
  Default: 0,
  User: 1,
  AMD: 2,
  Metis: 3,
  COLAMD: 4,
};

declare const SparseFactorization_t: {
  Cholesky: 0,
  LDLT: 1,
  LDLTUnpivoted: 2,
  LDLTSBK: 3,
  LDLTTPP: 4,
  QR: 40,
  CholeskyAtA: 41,
  LU: 80,
  LUUnpivoted: 81,
  LUSPP: 82,
  LUTPP: 83,
};

declare const sparse_norm: {
  ONE: 171,
  TWO: 173,
  INF: 175,
  R1: 179,
};

declare const sparse_matrix_property: {
  UPPER_TRIANGULAR: 1,
  LOWER_TRIANGULAR: 2,
  UPPER_SYMMETRIC: 4,
  LOWER_SYMMETRIC: 8,
};

declare const CBLAS_ORDER: {
  Row: 101,
  Col: 102,
};

declare const vDSP_DFT_RealtoComplex: {
  Complexto: 0,
  Realto: -1,
};

declare const vDSP_DFT_Direction: {
  FORWARD: 1,
  INVERSE: -1,
};

declare const SparseLSMRConvergenceTest_t: {
  Default: 0,
  FongSaunders: 1,
};

declare const _SparseIterativeMethod_t: {
  CG: 0,
  GMRES: 1,
  LSMR: 2,
};

declare const BNNSOptimizerFunction: {
  SGDMomentum: 1,
  Adam: 2,
  RMSProp: 3,
  AdamW: 4,
  AdamAMSGrad: 5,
  AdamWAMSGrad: 6,
  SGDMomentumWithClipping: 7,
  AdamWithClipping: 8,
  RMSPropWithClipping: 9,
  AdamWWithClipping: 10,
  AdamAMSGradWithClipping: 11,
  AdamWAMSGradWithClipping: 12,
};

declare const CBLAS_UPLO: {
  Upper: 121,
  Lower: 122,
};

declare const BNNSGraphArgumentType: {
  Pointer: 0,
  Tensor: 2,
};

declare const CBLAS_TRANSPOSE: {
  CblasNoTrans: 111,
  CblasTrans: 112,
  CblasConjTrans: 113,
  AtlasConj: 114,
};

declare const BNNSPaddingMode: {
  Constant: 0,
  Reflect: 1,
  Symmetric: 2,
};

declare const BNNSLossReductionFunction: {
  None: 0,
  Sum: 1,
  WeightedMean: 2,
  Mean: 3,
  NonZeroWeightMean: 4,
};

declare const SparseIterativeStatus_t: {
  Converged: 0,
  MaxIterations: 1,
  ParameterError: -1,
  IllConditioned: -2,
  InternalError: -99,
};

declare const SparseUpdate_t: {
  SparseUpdatePartialRefactor: 0,
};

declare const CBLAS_SIDE: {
  Left: 141,
  Right: 142,
};

declare const SparseControl_t: {
  SparseDefaultControl: 0,
};

declare const BNNSGraphArgumentIntent: {
  In: 1,
  Out: 2,
  InOut: 3,
};

declare const BNNSLinearSamplingMode: {
  Default: 0,
  AlignCorners: 1,
  UnalignCorners: 2,
  StrictAlignCorners: 3,
  OffsetCorners: 4,
};

declare const SparseKind_t: {
  Ordinary: 0,
  Triangular: 1,
  UnitTriangular: 2,
  Symmetric: 3,
  Hermitian: 7,
};

declare const BNNSOptimizerSGDMomentumVariant: {
  Variant0: 0,
  Variant1: 1,
  Variant2: 2,
};

declare const SparsePreconditioner_t: {
  None: 0,
  User: 1,
  Diagonal: 2,
  DiagScaling: 3,
};

declare const BNNSNDArrayFlags: {
  Set: 0,
  Accumulate: 1,
};

declare const SparseStatus_t: {
  StatusOK: 0,
  FactorizationFailed: -1,
  MatrixIsSingular: -2,
  InternalError: -3,
  ParameterError: -4,
  StatusReleased: -2147483647,
};

declare const BNNSFlags: {
  BNNSFlagsUseClientPtr: 1,
};

declare const BLAS_THREADING: {
  MULTI_THREADED: 0,
  SINGLE_THREADED: 1,
  MAX_OPTIONS: 2,
};

declare const CBLAS_DIAG: {
  Non: 131,
  CblasUnit: 132,
};

declare const BNNSInterpolationMethod: {
  Nearest: 0,
  Linear: 1,
};

declare const sparse_status: {
  SUCCESS: 0,
  ILLEGAL_PARAMETER: -1000,
  CANNOT_SET_PROPERTY: -1001,
  SYSTEM_ERROR: -1002,
};

declare const BNNSGraphMessageLevel: {
  Info: 1,
  Unsupported: 2,
  Warning: 4,
  Error: 8,
};

declare const BNNSLayerFlags: {
  Bidirectional: 1,
  DefaultActivations: 2,
};

declare const BNNSShuffleType: {
  PixelShuffle: 0,
  PixelUnshuffle: 1,
  DepthToSpace: 2,
  SpaceToDepth: 3,
};

declare const vImageMDTableUsageHint: {
  Hint_16Q12: 1,
  Hint_Float: 2,
};

declare const SparseTriangle_t: {
  Upper: 0,
  Lower: 1,
};

declare const vImageARGBType: {
  B8888: 0,
  B16U: 1,
  B16Q12: 2,
};

declare const SparseScaling_t: {
  Default: 0,
  User: 1,
  EquilibriationInf: 2,
};

declare const vDSP_DCT_Type: {
  I: 2,
  II: 3,
  V: 4,
};

declare const BNNSOptimizerClippingFunction: {
  None: 0,
  ByValue: 1,
  ByNorm: 2,
  ByGlobalNorm: 3,
};

declare const BNNSDataType: {
  FloatBit: 65536,
  Float16: 65552,
  Float32: 65568,
  BFloat16: 98320,
  IntBit: 131072,
  Int1: 131073,
  Int2: 131074,
  Int4: 131076,
  Int8: 131080,
  Int16: 131088,
  Int32: 131104,
  Int64: 131136,
  UIntBit: 262144,
  UInt1: 262145,
  UInt2: 262146,
  UInt3: 262147,
  UInt4: 262148,
  UInt6: 262150,
  UInt8: 262152,
  UInt16: 262160,
  UInt32: 262176,
  UInt64: 262208,
  IndexedBit: 524288,
  Indexed1: 524289,
  Indexed2: 524290,
  Indexed4: 524292,
  Indexed8: 524296,
  MiscellaneousBit: 1048576,
  Boolean: 1048584,
};

declare const BNNSPoolingFunction: {
  Max: 0,
  AverageCountIncludePadding: 1,
  AverageCountExcludePadding: 2,
  UnMax: 3,
  L2Norm: 4,
  Average: 1,
};

declare const BNNSBoxCoordinateMode: {
  CornersHeight: 0,
  CornersWidth: 1,
  CenterSizeHeight: 2,
  CenterSizeWidth: 3,
};

declare const SparseGMRESVariant_t: {
  DQ: 0,
  SparseVariantGMRES: 1,
  F: 2,
};

declare const BNNSRelationalOperator: {
  Equal: 0,
  Less: 1,
  LessEqual: 2,
  Greater: 3,
  GreaterEqual: 4,
  NotEqual: 5,
  LogicalAND: 6,
  LogicalOR: 7,
  LogicalNOT: 8,
  LogicalNAND: 9,
  LogicalNOR: 10,
  LogicalXOR: 11,
};

declare const BNNSDescriptorType: {
  Constant: 0,
  Sample: 1,
  Parameter: 2,
};

declare const quadrature_status: {
  SUCCESS: 0,
  ERROR: -1,
  INVALID_ARG_ERROR: -2,
  ALLOC_ERROR: -3,
  INTERNAL_ERROR: -99,
  INTEGRATE_MAX_EVAL_ERROR: -101,
  INTEGRATE_BAD_BEHAVIOUR_ERROR: -102,
};

declare class vImageWhitePoint {
  constructor(init?: vImageWhitePoint);
  white_x: number;
  white_y: number;
}

declare class vImageChannelDescription {
  constructor(init?: vImageChannelDescription);
  min: number;
  zero: number;
  full: number;
  max: number;
}

declare class vImage_CGImageFormat {
  constructor(init?: vImage_CGImageFormat);
  bitsPerComponent: number;
  bitsPerPixel: number;
  colorSpace: interop.Object | null;
  bitmapInfo: interop.Enum<typeof CGBitmapInfo>;
  version: number;
  decode: interop.Pointer;
  renderingIntent: interop.Enum<typeof CGColorRenderingIntent>;
}

declare class vImage_YpCbCrPixelRange {
  constructor(init?: vImage_YpCbCrPixelRange);
  Yp_bias: number;
  CbCr_bias: number;
  YpRangeMax: number;
  CbCrRangeMax: number;
  YpMax: number;
  YpMin: number;
  CbCrMax: number;
  CbCrMin: number;
}

declare class vImage_ARGBToYpCbCr {
  constructor(init?: vImage_ARGBToYpCbCr);
  opaque: unknown /* const array */;
}

declare class vImage_ARGBToYpCbCrMatrix {
  constructor(init?: vImage_ARGBToYpCbCrMatrix);
  R_Yp: number;
  G_Yp: number;
  B_Yp: number;
  R_Cb: number;
  G_Cb: number;
  B_Cb_R_Cr: number;
  G_Cr: number;
  B_Cr: number;
}

declare class vImageCVImageFormat {
  constructor(init?: vImageCVImageFormat);
}

declare class vImage_PerpsectiveTransform {
  constructor(init?: vImage_PerpsectiveTransform);
  a: number;
  b: number;
  c: number;
  d: number;
  tx: number;
  ty: number;
  vx: number;
  vy: number;
  v: number;
}

declare class vImage_AffineTransform_Double {
  constructor(init?: vImage_AffineTransform_Double);
  a: number;
  b: number;
  c: number;
  d: number;
  tx: number;
  ty: number;
}

declare class bnns_graph_argument_t {
  constructor(init?: bnns_graph_argument_t);
  data_ptr_size: number;
}

declare class bnns_graph_shape_t {
  constructor(init?: bnns_graph_shape_t);
  rank: number;
  shape: interop.Pointer;
}

declare class bnns_graph_context_t {
  constructor(init?: bnns_graph_context_t);
  data: interop.Pointer;
  size: number;
}

declare class bnns_graph_t {
  constructor(init?: bnns_graph_t);
  data: interop.Pointer;
  size: number;
}

declare class BNNSPoolingLayerParameters {
  constructor(init?: BNNSPoolingLayerParameters);
  x_stride: number;
  y_stride: number;
  x_padding: number;
  y_padding: number;
  k_width: number;
  k_height: number;
  in_channels: number;
  out_channels: number;
  pooling_function: interop.Enum<typeof BNNSPoolingFunction>;
  bias: BNNSLayerData;
  activation: BNNSActivation;
}

declare class BNNSLayerData {
  constructor(init?: BNNSLayerData);
  data: interop.Pointer;
  data_type: interop.Enum<typeof BNNSDataType>;
  data_scale: number;
  data_bias: number;
  data_table: interop.Pointer;
}

declare class BNNSImageStackDescriptor {
  constructor(init?: BNNSImageStackDescriptor);
  width: number;
  height: number;
  channels: number;
  row_stride: number;
  image_stride: number;
  data_type: interop.Enum<typeof BNNSDataType>;
  data_scale: number;
  data_bias: number;
}

declare class BNNSSparsityParameters {
  constructor(init?: BNNSSparsityParameters);
  flags: number;
  sparsity_ratio: unknown /* const array */;
  sparsity_type: interop.Enum<typeof BNNSSparsityType>;
  target_system: interop.Enum<typeof BNNSTargetSystem>;
}

declare class BNNSLayerParametersEmbedding {
  constructor(init?: BNNSLayerParametersEmbedding);
  flags: interop.Enum<typeof BNNSEmbeddingFlags>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  dictionary: BNNSNDArrayDescriptor;
  padding_idx: number;
  max_norm: number;
  norm_type: number;
}

declare class BNNSLayerParametersPadding {
  constructor(init?: BNNSLayerParametersPadding);
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  padding_size: unknown /* const array */;
  padding_mode: interop.Enum<typeof BNNSPaddingMode>;
  padding_value: number;
}

declare class BNNSLayerParametersReduction {
  constructor(init?: BNNSLayerParametersReduction);
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  w_desc: BNNSNDArrayDescriptor;
  reduce_func: interop.Enum<typeof BNNSReduceFunction>;
  epsilon: number;
}

declare class BNNSLayerParametersMultiheadAttention {
  constructor(init?: BNNSLayerParametersMultiheadAttention);
  query: BNNSMHAProjectionParameters;
  key: BNNSMHAProjectionParameters;
  value: BNNSMHAProjectionParameters;
  add_zero_attn: boolean;
  key_attn_bias: BNNSNDArrayDescriptor;
  value_attn_bias: BNNSNDArrayDescriptor;
  output: BNNSMHAProjectionParameters;
  dropout: number;
  seed: number;
}

declare class BNNSLayerParametersBroadcastMatMul {
  constructor(init?: BNNSLayerParametersBroadcastMatMul);
  alpha: number;
  beta: number;
  transA: boolean;
  transB: boolean;
  quadratic: boolean;
  a_is_weights: boolean;
  b_is_weights: boolean;
  iA_desc: BNNSNDArrayDescriptor;
  iB_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
}

declare class BNNSLayerParametersResize {
  constructor(init?: BNNSLayerParametersResize);
  method: interop.Enum<typeof BNNSInterpolationMethod>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  align_corners: boolean;
}

declare class BNNSLayerParametersGram {
  constructor(init?: BNNSLayerParametersGram);
  alpha: number;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
}

declare class BNNSLayerParametersTensorContraction {
  constructor(init?: BNNSLayerParametersTensorContraction);
  operation: string | null;
  alpha: number;
  beta: number;
  iA_desc: BNNSNDArrayDescriptor;
  iB_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
}

declare class BNNSLayerParametersArithmetic {
  constructor(init?: BNNSLayerParametersArithmetic);
  arithmetic_function: interop.Enum<typeof BNNSArithmeticFunction>;
  arithmetic_function_fields: interop.Pointer;
  activation: BNNSActivation;
}

declare class BNNSLayerParametersNormalization {
  constructor(init?: BNNSLayerParametersNormalization);
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  beta_desc: BNNSNDArrayDescriptor;
  gamma_desc: BNNSNDArrayDescriptor;
  moving_mean_desc: BNNSNDArrayDescriptor;
  moving_variance_desc: BNNSNDArrayDescriptor;
  momentum: number;
  epsilon: number;
  activation: BNNSActivation;
  num_groups: number;
  normalization_axis: number;
}

declare class BNNSOptimizerRMSPropFields {
  constructor(init?: BNNSOptimizerRMSPropFields);
  learning_rate: number;
  alpha: number;
  epsilon: number;
  centered: boolean;
  momentum: number;
  gradient_scale: number;
  regularization_scale: number;
  clip_gradients: boolean;
  clip_gradients_min: number;
  clip_gradients_max: number;
  regularization_func: interop.Enum<typeof BNNSOptimizerRegularizationFunction>;
}

declare class BNNSOptimizerAdamFields {
  constructor(init?: BNNSOptimizerAdamFields);
  learning_rate: number;
  beta1: number;
  beta2: number;
  time_step: number;
  epsilon: number;
  gradient_scale: number;
  regularization_scale: number;
  clip_gradients: boolean;
  clip_gradients_min: number;
  clip_gradients_max: number;
  regularization_func: interop.Enum<typeof BNNSOptimizerRegularizationFunction>;
}

declare class BNNSOptimizerSGDMomentumFields {
  constructor(init?: BNNSOptimizerSGDMomentumFields);
  learning_rate: number;
  momentum: number;
  gradient_scale: number;
  regularization_scale: number;
  clip_gradients: boolean;
  clip_gradients_min: number;
  clip_gradients_max: number;
  nesterov: boolean;
  regularization_func: interop.Enum<typeof BNNSOptimizerRegularizationFunction>;
  sgd_momentum_variant: interop.Enum<typeof BNNSOptimizerSGDMomentumVariant>;
}

declare class BNNSLayerParametersLossYolo {
  constructor(init?: BNNSLayerParametersLossYolo);
  function: interop.Enum<typeof BNNSLossFunction>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  reduction: interop.Enum<typeof BNNSLossReductionFunction>;
  huber_delta: number;
  number_of_grid_columns: number;
  number_of_grid_rows: number;
  number_of_anchor_boxes: number;
  anchor_box_size: number;
  rescore: boolean;
  scale_xy: number;
  scale_wh: number;
  scale_object: number;
  scale_no_object: number;
  scale_classification: number;
  object_minimum_iou: number;
  no_object_maximum_iou: number;
  anchors_data: interop.Pointer;
}

declare class BNNSLayerParametersLossHuber {
  constructor(init?: BNNSLayerParametersLossHuber);
  function: interop.Enum<typeof BNNSLossFunction>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  reduction: interop.Enum<typeof BNNSLossReductionFunction>;
  huber_delta: number;
}

declare class BNNSLayerParametersLossSigmoidCrossEntropy {
  constructor(init?: BNNSLayerParametersLossSigmoidCrossEntropy);
  function: interop.Enum<typeof BNNSLossFunction>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  reduction: interop.Enum<typeof BNNSLossReductionFunction>;
  label_smooth: number;
}

declare class BNNSLayerParametersLossSoftmaxCrossEntropy {
  constructor(init?: BNNSLayerParametersLossSoftmaxCrossEntropy);
  function: interop.Enum<typeof BNNSLossFunction>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  reduction: interop.Enum<typeof BNNSLossReductionFunction>;
  label_smooth: number;
}

declare class BNNSLayerParametersFullyConnected {
  constructor(init?: BNNSLayerParametersFullyConnected);
  i_desc: BNNSNDArrayDescriptor;
  w_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  bias: BNNSNDArrayDescriptor;
  activation: BNNSActivation;
}

declare class BNNSLayerParametersConvolution {
  constructor(init?: BNNSLayerParametersConvolution);
  i_desc: BNNSNDArrayDescriptor;
  w_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  bias: BNNSNDArrayDescriptor;
  activation: BNNSActivation;
  x_stride: number;
  y_stride: number;
  x_dilation_stride: number;
  y_dilation_stride: number;
  x_padding: number;
  y_padding: number;
  groups: number;
  pad: unknown /* const array */;
}

declare class BNNSMHAProjectionParameters {
  constructor(init?: BNNSMHAProjectionParameters);
  target_desc: BNNSNDArrayDescriptor;
  weights: BNNSNDArrayDescriptor;
  bias: BNNSNDArrayDescriptor;
}

declare class BNNSArithmeticTernary {
  constructor(init?: BNNSArithmeticTernary);
  in1: BNNSNDArrayDescriptor;
  in1_type: interop.Enum<typeof BNNSDescriptorType>;
  in2: BNNSNDArrayDescriptor;
  in2_type: interop.Enum<typeof BNNSDescriptorType>;
  in3: BNNSNDArrayDescriptor;
  in3_type: interop.Enum<typeof BNNSDescriptorType>;
  out: BNNSNDArrayDescriptor;
  out_type: interop.Enum<typeof BNNSDescriptorType>;
}

declare class BNNSArithmeticBinary {
  constructor(init?: BNNSArithmeticBinary);
  in1: BNNSNDArrayDescriptor;
  in1_type: interop.Enum<typeof BNNSDescriptorType>;
  in2: BNNSNDArrayDescriptor;
  in2_type: interop.Enum<typeof BNNSDescriptorType>;
  out: BNNSNDArrayDescriptor;
  out_type: interop.Enum<typeof BNNSDescriptorType>;
}

declare class BNNSLSTMGateDescriptor {
  constructor(init?: BNNSLSTMGateDescriptor);
  iw_desc: unknown /* const array */;
  hw_desc: BNNSNDArrayDescriptor;
  cw_desc: BNNSNDArrayDescriptor;
  b_desc: BNNSNDArrayDescriptor;
  activation: BNNSActivation;
}

declare class BNNSNDArrayDescriptor {
  constructor(init?: BNNSNDArrayDescriptor);
  flags: interop.Enum<typeof BNNSNDArrayFlags>;
  layout: interop.Enum<typeof BNNSDataLayout>;
  size: unknown /* const array */;
  stride: unknown /* const array */;
  data: interop.Pointer;
  data_type: interop.Enum<typeof BNNSDataType>;
  table_data: interop.Pointer;
  table_data_type: interop.Enum<typeof BNNSDataType>;
  data_scale: number;
  data_bias: number;
}

declare class BNNSActivation {
  constructor(init?: BNNSActivation);
  function: interop.Enum<typeof BNNSActivationFunction>;
  alpha: number;
  beta: number;
  iscale: number;
  ioffset: number;
  ishift: number;
  iscale_per_channel: interop.Pointer;
  ioffset_per_channel: interop.Pointer;
  ishift_per_channel: interop.Pointer;
}

declare class quadrature_integrate_options {
  constructor(init?: quadrature_integrate_options);
  integrator: interop.Enum<typeof quadrature_integrator>;
  abs_tolerance: number;
  rel_tolerance: number;
  qag_points_per_interval: number;
  max_intervals: number;
}

declare class quadrature_integrate_function {
  constructor(init?: quadrature_integrate_function);
  fun: (p1: interop.PointerConvertible, p2: number, p3: interop.PointerConvertible, p4: interop.PointerConvertible) => void | null;
  fun_arg: interop.Pointer;
}

declare class SparseGMRESOptions {
  constructor(init?: SparseGMRESOptions);
  reportError: (p1: string) => void | null;
  variant: interop.Enum<typeof SparseGMRESVariant_t>;
  nvec: number;
  maxIterations: number;
  atol: number;
  rtol: number;
  reportStatus: (p1: string) => void | null;
}

declare class SparseOpaquePreconditioner_Complex_Double {
  constructor(init?: SparseOpaquePreconditioner_Complex_Double);
  type: interop.Enum<typeof SparsePreconditioner_t>;
  mem: interop.Pointer;
  apply: (p1: interop.PointerConvertible, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Double, p4: DenseMatrix_Complex_Double) => void | null;
}

declare class SparseOpaquePreconditioner_Double {
  constructor(init?: SparseOpaquePreconditioner_Double);
  type: interop.Enum<typeof SparsePreconditioner_t>;
  mem: interop.Pointer;
  apply: (p1: interop.PointerConvertible, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Double, p4: DenseMatrix_Double) => void | null;
}

declare class SparseOpaqueSubfactor_Complex_Float {
  constructor(init?: SparseOpaqueSubfactor_Complex_Float);
  attributes: SparseAttributesComplex_t;
  contents: interop.Enum<typeof SparseSubfactor_t>;
  factor: SparseOpaqueFactorization_Complex_Float;
  workspaceRequiredStatic: number;
  workspaceRequiredPerRHS: number;
}

declare class SparseOpaqueSubfactor_Complex_Double {
  constructor(init?: SparseOpaqueSubfactor_Complex_Double);
  attributes: SparseAttributesComplex_t;
  contents: interop.Enum<typeof SparseSubfactor_t>;
  factor: SparseOpaqueFactorization_Complex_Double;
  workspaceRequiredStatic: number;
  workspaceRequiredPerRHS: number;
}

declare class SparseOpaqueSubfactor_Float {
  constructor(init?: SparseOpaqueSubfactor_Float);
  attributes: SparseAttributes_t;
  contents: interop.Enum<typeof SparseSubfactor_t>;
  factor: SparseOpaqueFactorization_Float;
  workspaceRequiredStatic: number;
  workspaceRequiredPerRHS: number;
}

declare class SparseOpaqueSubfactor_Double {
  constructor(init?: SparseOpaqueSubfactor_Double);
  attributes: SparseAttributes_t;
  contents: interop.Enum<typeof SparseSubfactor_t>;
  factor: SparseOpaqueFactorization_Double;
  workspaceRequiredStatic: number;
  workspaceRequiredPerRHS: number;
}

declare class SparseOpaqueFactorization_Float {
  constructor(init?: SparseOpaqueFactorization_Float);
  status: interop.Enum<typeof SparseStatus_t>;
  attributes: SparseAttributes_t;
  symbolicFactorization: SparseOpaqueSymbolicFactorization;
  userFactorStorage: boolean;
  numericFactorization: interop.Pointer;
  solveWorkspaceRequiredStatic: number;
  solveWorkspaceRequiredPerRHS: number;
}

declare class SparseOpaqueFactorization_Double {
  constructor(init?: SparseOpaqueFactorization_Double);
  status: interop.Enum<typeof SparseStatus_t>;
  attributes: SparseAttributes_t;
  symbolicFactorization: SparseOpaqueSymbolicFactorization;
  userFactorStorage: boolean;
  numericFactorization: interop.Pointer;
  solveWorkspaceRequiredStatic: number;
  solveWorkspaceRequiredPerRHS: number;
}

declare class SparseOpaqueSymbolicFactorization {
  constructor(init?: SparseOpaqueSymbolicFactorization);
  status: interop.Enum<typeof SparseStatus_t>;
  rowCount: number;
  columnCount: number;
  attributes: SparseAttributes_t;
  blockSize: number;
  type: interop.Enum<typeof SparseFactorization_t>;
  factorization: interop.Pointer;
  workspaceSize_Float: number;
  workspaceSize_Double: number;
  factorSize_Float: number;
  factorSize_Double: number;
}

declare class DenseMatrix_Complex_Double {
  constructor(init?: DenseMatrix_Complex_Double);
  rowCount: number;
  columnCount: number;
  columnStride: number;
  attributes: SparseAttributesComplex_t;
  data: interop.Pointer;
}

declare class DenseMatrix_Float {
  constructor(init?: DenseMatrix_Float);
  rowCount: number;
  columnCount: number;
  columnStride: number;
  attributes: SparseAttributes_t;
  data: interop.Pointer;
}

declare class DenseMatrix_Double {
  constructor(init?: DenseMatrix_Double);
  rowCount: number;
  columnCount: number;
  columnStride: number;
  attributes: SparseAttributes_t;
  data: interop.Pointer;
}

declare class DenseVector_Complex_Float {
  constructor(init?: DenseVector_Complex_Float);
  count: number;
  data: interop.Pointer;
}

declare class DenseVector_Complex_Double {
  constructor(init?: DenseVector_Complex_Double);
  count: number;
  data: interop.Pointer;
}

declare class SparseMatrix_Float {
  constructor(init?: SparseMatrix_Float);
  structure: SparseMatrixStructure;
  data: interop.Pointer;
}

declare class SparseMatrix_Double {
  constructor(init?: SparseMatrix_Double);
  structure: SparseMatrixStructure;
  data: interop.Pointer;
}

declare class SparseAttributes_t {
  constructor(init?: SparseAttributes_t);
  transpose: boolean;
  triangle: interop.Enum<typeof SparseTriangle_t>;
  kind: interop.Enum<typeof SparseKind_t>;
  _reserved: number;
  _allocatedBySparse: boolean;
}

declare class sparse_m_double_complex {
  constructor(init?: sparse_m_double_complex);
}

declare class __CLPK_doublecomplex {
  constructor(init?: __CLPK_doublecomplex);
  r: number;
  i: number;
}

declare class __CLPK_complex {
  constructor(init?: __CLPK_complex);
  r: number;
  i: number;
}

declare class vDSP_DFT_Interleaved_SetupStructD {
  constructor(init?: vDSP_DFT_Interleaved_SetupStructD);
}

declare class vDSP_DFT_SetupStructD {
  constructor(init?: vDSP_DFT_SetupStructD);
}

declare class vDSP_DFT_SetupStruct {
  constructor(init?: vDSP_DFT_SetupStruct);
}

declare class vDSP_biquadm_SetupStructD {
  constructor(init?: vDSP_biquadm_SetupStructD);
}

declare class vDSP_biquadm_SetupStruct {
  constructor(init?: vDSP_biquadm_SetupStruct);
}

declare class OpaqueFFTSetup {
  constructor(init?: OpaqueFFTSetup);
}

declare class vDSP_int24 {
  constructor(init?: vDSP_int24);
  bytes: unknown /* const array */;
}

declare class vDSP_uint24 {
  constructor(init?: vDSP_uint24);
  bytes: unknown /* const array */;
}

declare class DSPDoubleSplitComplex {
  constructor(init?: DSPDoubleSplitComplex);
  realp: interop.Pointer;
  imagp: interop.Pointer;
}

declare class DSPSplitComplex {
  constructor(init?: DSPSplitComplex);
  realp: interop.Pointer;
  imagp: interop.Pointer;
}

declare class DSPComplex {
  constructor(init?: DSPComplex);
  real: number;
  imag: number;
}

declare class bnns_graph_compile_options_t {
  constructor(init?: bnns_graph_compile_options_t);
  data: interop.Pointer;
  size: number;
}

declare class sparse_m_float {
  constructor(init?: sparse_m_float);
}

declare class BNNSFilterParameters {
  constructor(init?: BNNSFilterParameters);
  flags: number;
  n_threads: number;
  alloc_memory: (p1: interop.PointerConvertible, p2: number, p3: number) => number | null;
  free_memory: (p1: interop.PointerConvertible) => void | null;
}

declare class DenseVector_Double {
  constructor(init?: DenseVector_Double);
  count: number;
  data: interop.Pointer;
}

declare class sparse_m_double {
  constructor(init?: sparse_m_double);
}

declare class vImage_AffineTransform {
  constructor(init?: vImage_AffineTransform);
  a: number;
  b: number;
  c: number;
  d: number;
  tx: number;
  ty: number;
}

declare class BNNSArithmeticUnary {
  constructor(init?: BNNSArithmeticUnary);
  in: BNNSNDArrayDescriptor;
  in_type: interop.Enum<typeof BNNSDescriptorType>;
  out: BNNSNDArrayDescriptor;
  out_type: interop.Enum<typeof BNNSDescriptorType>;
}

declare class OpaqueFFTSetupD {
  constructor(init?: OpaqueFFTSetupD);
}

declare class SparseNumericFactorOptions {
  constructor(init?: SparseNumericFactorOptions);
  control: interop.Enum<typeof SparseControl_t>;
  scalingMethod: interop.Enum<typeof SparseScaling_t>;
  scaling: interop.Pointer;
  pivotTolerance: number;
  zeroTolerance: number;
}

declare class vDSP_biquad_SetupStructD {
  constructor(init?: vDSP_biquad_SetupStructD);
}

declare class BNNSLayerParametersLossBase {
  constructor(init?: BNNSLayerParametersLossBase);
  function: interop.Enum<typeof BNNSLossFunction>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  reduction: interop.Enum<typeof BNNSLossReductionFunction>;
}

declare class vImage_YpCbCrToARGB {
  constructor(init?: vImage_YpCbCrToARGB);
  opaque: unknown /* const array */;
}

declare class sparse_m_float_complex {
  constructor(init?: sparse_m_float_complex);
}

declare class bnns_user_message_data_t {
  constructor(init?: bnns_user_message_data_t);
  size: number;
  data: interop.Pointer;
}

declare class BNNSOptimizerRMSPropWithClippingFields {
  constructor(init?: BNNSOptimizerRMSPropWithClippingFields);
  learning_rate: number;
  alpha: number;
  epsilon: number;
  centered: boolean;
  momentum: number;
  gradient_scale: number;
  regularization_scale: number;
  regularization_func: interop.Enum<typeof BNNSOptimizerRegularizationFunction>;
  clipping_func: interop.Enum<typeof BNNSOptimizerClippingFunction>;
  clip_gradients_min: number;
  clip_gradients_max: number;
  clip_gradients_max_norm: number;
  clip_gradients_use_norm: number;
}

declare class BNNSLSTMDataDescriptor {
  constructor(init?: BNNSLSTMDataDescriptor);
  data_desc: BNNSNDArrayDescriptor;
  hidden_desc: BNNSNDArrayDescriptor;
  cell_state_desc: BNNSNDArrayDescriptor;
}

declare class _SparseIterativeMethodBaseOptions {
  constructor(init?: _SparseIterativeMethodBaseOptions);
  reportError: (p1: string) => void | null;
}

declare class SparseOpaquePreconditioner_Complex_Float {
  constructor(init?: SparseOpaquePreconditioner_Complex_Float);
  type: interop.Enum<typeof SparsePreconditioner_t>;
  mem: interop.Pointer;
  apply: (p1: interop.PointerConvertible, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Float, p4: DenseMatrix_Complex_Float) => void | null;
}

declare class SparseLSMROptions {
  constructor(init?: SparseLSMROptions);
  reportError: (p1: string) => void | null;
  lambda: number;
  nvec: number;
  convergenceTest: interop.Enum<typeof SparseLSMRConvergenceTest_t>;
  atol: number;
  rtol: number;
  btol: number;
  conditionLimit: number;
  maxIterations: number;
  reportStatus: (p1: string) => void | null;
}

declare class vDSP_biquad_SetupStruct {
  constructor(init?: vDSP_biquad_SetupStruct);
}

declare class BNNSLayerParametersLSTM {
  constructor(init?: BNNSLayerParametersLSTM);
  input_size: number;
  hidden_size: number;
  batch_size: number;
  num_layers: number;
  seq_len: number;
  dropout: number;
  lstm_flags: number;
  sequence_descriptor: BNNSNDArrayDescriptor;
  input_descriptor: BNNSLSTMDataDescriptor;
  output_descriptor: BNNSLSTMDataDescriptor;
  input_gate: BNNSLSTMGateDescriptor;
  forget_gate: BNNSLSTMGateDescriptor;
  candidate_gate: BNNSLSTMGateDescriptor;
  output_gate: BNNSLSTMGateDescriptor;
  hidden_activation: BNNSActivation;
}

declare class BNNSLayerParametersDropout {
  constructor(init?: BNNSLayerParametersDropout);
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  rate: number;
  seed: number;
  control: number;
}

declare class vImage_YpCbCrToARGBMatrix {
  constructor(init?: vImage_YpCbCrToARGBMatrix);
  Yp: number;
  Cr_R: number;
  Cr_G: number;
  Cb_G: number;
  Cb_B: number;
}

declare class SparseMatrixStructure {
  constructor(init?: SparseMatrixStructure);
  rowCount: number;
  columnCount: number;
  columnStarts: interop.Pointer;
  rowIndices: interop.Pointer;
  attributes: SparseAttributes_t;
  blockSize: number;
}

declare class SparseAttributesComplex_t {
  constructor(init?: SparseAttributesComplex_t);
  transpose: boolean;
  triangle: interop.Enum<typeof SparseTriangle_t>;
  kind: interop.Enum<typeof SparseKind_t>;
  conjugate_transpose: boolean;
  _reserved: number;
  _allocatedBySparse: boolean;
}

declare class vImage_Buffer {
  constructor(init?: vImage_Buffer);
  data: interop.Pointer;
  height: number;
  width: number;
  rowBytes: number;
}

declare class vDSP_DFT_Interleaved_SetupStruct {
  constructor(init?: vDSP_DFT_Interleaved_SetupStruct);
}

declare class vImageRGBPrimaries {
  constructor(init?: vImageRGBPrimaries);
  red_x: number;
  green_x: number;
  blue_x: number;
  white_x: number;
  red_y: number;
  green_y: number;
  blue_y: number;
  white_y: number;
}

declare class vImageConverter {
  constructor(init?: vImageConverter);
}

declare class BNNSFullyConnectedLayerParameters {
  constructor(init?: BNNSFullyConnectedLayerParameters);
  in_size: number;
  out_size: number;
  weights: BNNSLayerData;
  bias: BNNSLayerData;
  activation: BNNSActivation;
}

declare class BNNSLayerParametersPermute {
  constructor(init?: BNNSLayerParametersPermute);
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  permutation: unknown /* const array */;
}

declare class BNNSVectorDescriptor {
  constructor(init?: BNNSVectorDescriptor);
  size: number;
  data_type: interop.Enum<typeof BNNSDataType>;
  data_scale: number;
  data_bias: number;
}

declare class SparseIterativeMethod {
  constructor(init?: SparseIterativeMethod);
  method: number;
  options: unnamed_8762060824667074216;
}

declare class SparseMatrix_Complex_Double {
  constructor(init?: SparseMatrix_Complex_Double);
  structure: SparseMatrixStructureComplex;
  data: interop.Pointer;
}

declare class BNNSOptimizerSGDMomentumWithClippingFields {
  constructor(init?: BNNSOptimizerSGDMomentumWithClippingFields);
  learning_rate: number;
  momentum: number;
  gradient_scale: number;
  regularization_scale: number;
  nesterov: boolean;
  regularization_func: interop.Enum<typeof BNNSOptimizerRegularizationFunction>;
  sgd_momentum_variant: interop.Enum<typeof BNNSOptimizerSGDMomentumVariant>;
  clipping_func: interop.Enum<typeof BNNSOptimizerClippingFunction>;
  clip_gradients_min: number;
  clip_gradients_max: number;
  clip_gradients_max_norm: number;
  clip_gradients_use_norm: number;
}

declare class SparseOpaqueFactorization_Complex_Double {
  constructor(init?: SparseOpaqueFactorization_Complex_Double);
  status: interop.Enum<typeof SparseStatus_t>;
  attributes: SparseAttributesComplex_t;
  symbolicFactorization: SparseOpaqueSymbolicFactorization;
  userFactorStorage: boolean;
  numericFactorization: interop.Pointer;
  solveWorkspaceRequiredStatic: number;
  solveWorkspaceRequiredPerRHS: number;
}

declare class vImage_MultidimensionalTableData {
  constructor(init?: vImage_MultidimensionalTableData);
}

declare class BNNSLayerParametersActivation {
  constructor(init?: BNNSLayerParametersActivation);
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  activation: BNNSActivation;
  axis_flags: number;
}

declare class DSPDoubleComplex {
  constructor(init?: DSPDoubleComplex);
  real: number;
  imag: number;
}

declare class SparseSymbolicFactorOptions {
  constructor(init?: SparseSymbolicFactorOptions);
  control: interop.Enum<typeof SparseControl_t>;
  orderMethod: interop.Enum<typeof SparseOrder_t>;
  order: interop.Pointer;
  ignoreRowsAndColumns: interop.Pointer;
  malloc: (p1: number) => interop.Pointer | null;
  free: (p1: interop.PointerConvertible) => void | null;
  reportError: (p1: string) => void | null;
}

declare class SparseCGOptions {
  constructor(init?: SparseCGOptions);
  reportError: (p1: string) => void | null;
  maxIterations: number;
  atol: number;
  rtol: number;
  reportStatus: (p1: string) => void | null;
}

declare class DenseMatrix_Complex_Float {
  constructor(init?: DenseMatrix_Complex_Float);
  rowCount: number;
  columnCount: number;
  columnStride: number;
  attributes: SparseAttributesComplex_t;
  data: interop.Pointer;
}

declare class vImageTransferFunction {
  constructor(init?: vImageTransferFunction);
  c0: number;
  c1: number;
  c2: number;
  c3: number;
  gamma: number;
  cutoff: number;
  c4: number;
  c5: number;
}

declare class BNNSLayerParametersPooling {
  constructor(init?: BNNSLayerParametersPooling);
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  bias: BNNSNDArrayDescriptor;
  activation: BNNSActivation;
  pooling_function: interop.Enum<typeof BNNSPoolingFunction>;
  k_width: number;
  k_height: number;
  x_stride: number;
  y_stride: number;
  x_dilation_stride: number;
  y_dilation_stride: number;
  x_padding: number;
  y_padding: number;
  pad: unknown /* const array */;
}

declare class DenseVector_Float {
  constructor(init?: DenseVector_Float);
  count: number;
  data: interop.Pointer;
}

declare class BNNSTensor {
  constructor(init?: BNNSTensor);
  data_type: interop.Enum<typeof BNNSDataType>;
  rank: number;
  shape: unknown /* const array */;
  stride: unknown /* const array */;
  data: interop.Pointer;
  data_size_in_bytes: number;
  name: string | null;
}

declare class BNNSLayerParametersQuantization {
  constructor(init?: BNNSLayerParametersQuantization);
  axis_mask: number;
  function: interop.Enum<typeof BNNSQuantizerFunction>;
  i_desc: BNNSNDArrayDescriptor;
  o_desc: BNNSNDArrayDescriptor;
  scale: BNNSNDArrayDescriptor;
  bias: BNNSNDArrayDescriptor;
}

declare class SparseOpaqueFactorization_Complex_Float {
  constructor(init?: SparseOpaqueFactorization_Complex_Float);
  status: interop.Enum<typeof SparseStatus_t>;
  attributes: SparseAttributesComplex_t;
  symbolicFactorization: SparseOpaqueSymbolicFactorization;
  userFactorStorage: boolean;
  numericFactorization: interop.Pointer;
  solveWorkspaceRequiredStatic: number;
  solveWorkspaceRequiredPerRHS: number;
}

declare class SparseMatrix_Complex_Float {
  constructor(init?: SparseMatrix_Complex_Float);
  structure: SparseMatrixStructureComplex;
  data: interop.Pointer;
}

declare class BNNSConvolutionLayerParameters {
  constructor(init?: BNNSConvolutionLayerParameters);
  x_stride: number;
  y_stride: number;
  x_padding: number;
  y_padding: number;
  k_width: number;
  k_height: number;
  in_channels: number;
  out_channels: number;
  weights: BNNSLayerData;
  bias: BNNSLayerData;
  activation: BNNSActivation;
}

declare class BNNSOptimizerAdamWithClippingFields {
  constructor(init?: BNNSOptimizerAdamWithClippingFields);
  learning_rate: number;
  beta1: number;
  beta2: number;
  time_step: number;
  epsilon: number;
  gradient_scale: number;
  regularization_scale: number;
  regularization_func: interop.Enum<typeof BNNSOptimizerRegularizationFunction>;
  clipping_func: interop.Enum<typeof BNNSOptimizerClippingFunction>;
  clip_gradients_min: number;
  clip_gradients_max: number;
  clip_gradients_max_norm: number;
  clip_gradients_use_norm: number;
}

declare class SparseOpaquePreconditioner_Float {
  constructor(init?: SparseOpaquePreconditioner_Float);
  type: interop.Enum<typeof SparsePreconditioner_t>;
  mem: interop.Pointer;
  apply: (p1: interop.PointerConvertible, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Float, p4: DenseMatrix_Float) => void | null;
}

declare class SparseMatrixStructureComplex {
  constructor(init?: SparseMatrixStructureComplex);
  rowCount: number;
  columnCount: number;
  columnStarts: interop.Pointer;
  rowIndices: interop.Pointer;
  attributes: SparseAttributesComplex_t;
  blockSize: number;
}

declare class BNNSLayerParametersCropResize {
  constructor(init?: BNNSLayerParametersCropResize);
  normalized_coordinates: boolean;
  spatial_scale: number;
  extrapolation_value: number;
  sampling_mode: interop.Enum<typeof BNNSLinearSamplingMode>;
  box_coordinate_mode: interop.Enum<typeof BNNSBoxCoordinateMode>;
  method: interop.Enum<typeof BNNSInterpolationMethod>;
}

type unnamed_17137736202732662130Descriptor = 
  | { tensor: interop.PointerConvertible }
  | { descriptor: interop.PointerConvertible }
  | { data_ptr: interop.PointerConvertible };

declare class unnamed_17137736202732662130 {
  constructor(init?: unnamed_17137736202732662130Descriptor);
  tensor: interop.Pointer;
  descriptor: interop.Pointer;
  data_ptr: interop.Pointer;
}

type unnamed_8762060824667074216Descriptor = 
  | { base: _SparseIterativeMethodBaseOptions }
  | { cg: SparseCGOptions }
  | { gmres: SparseGMRESOptions }
  | { lsmr: SparseLSMROptions }
  | { padding: unknown /* const array */ };

declare class unnamed_8762060824667074216 {
  constructor(init?: unnamed_8762060824667074216Descriptor);
  base: _SparseIterativeMethodBaseOptions;
  cg: SparseCGOptions;
  gmres: SparseGMRESOptions;
  lsmr: SparseLSMROptions;
  padding: unknown /* const array */;
}

declare function vceilf(p1: unknown /* vector */): unknown /* vector */;

declare function vfloorf(p1: unknown /* vector */): unknown /* vector */;

declare function vtruncf(p1: unknown /* vector */): unknown /* vector */;

declare function vnintf(p1: unknown /* vector */): unknown /* vector */;

declare function vexpf(p1: unknown /* vector */): unknown /* vector */;

declare function vexp2f(p1: unknown /* vector */): unknown /* vector */;

declare function vexpm1f(p1: unknown /* vector */): unknown /* vector */;

declare function vlogf(p1: unknown /* vector */): unknown /* vector */;

declare function vlog2f(p1: unknown /* vector */): unknown /* vector */;

declare function vlog10f(p1: unknown /* vector */): unknown /* vector */;

declare function vlog1pf(p1: unknown /* vector */): unknown /* vector */;

declare function vlogbf(p1: unknown /* vector */): unknown /* vector */;

declare function vscalbf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vpowf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vipowf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vsinf(p1: unknown /* vector */): unknown /* vector */;

declare function vcosf(p1: unknown /* vector */): unknown /* vector */;

declare function vsincosf(p1: unknown /* vector */, p2: interop.PointerConvertible): unknown /* vector */;

declare function vtanf(p1: unknown /* vector */): unknown /* vector */;

declare function vsinpif(p1: unknown /* vector */): unknown /* vector */;

declare function vcospif(p1: unknown /* vector */): unknown /* vector */;

declare function vtanpif(p1: unknown /* vector */): unknown /* vector */;

declare function vasinf(p1: unknown /* vector */): unknown /* vector */;

declare function vacosf(p1: unknown /* vector */): unknown /* vector */;

declare function vatanf(p1: unknown /* vector */): unknown /* vector */;

declare function vatan2f(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vsinhf(p1: unknown /* vector */): unknown /* vector */;

declare function vcoshf(p1: unknown /* vector */): unknown /* vector */;

declare function vtanhf(p1: unknown /* vector */): unknown /* vector */;

declare function vasinhf(p1: unknown /* vector */): unknown /* vector */;

declare function vacoshf(p1: unknown /* vector */): unknown /* vector */;

declare function vatanhf(p1: unknown /* vector */): unknown /* vector */;

declare function vrecf(p1: unknown /* vector */): unknown /* vector */;

declare function vsqrtf(p1: unknown /* vector */): unknown /* vector */;

declare function vrsqrtf(p1: unknown /* vector */): unknown /* vector */;

declare function vdivf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vfmodf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vremainderf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vremquof(p1: unknown /* vector */, p2: unknown /* vector */, p3: interop.PointerConvertible): unknown /* vector */;

declare function vfabsf(p1: unknown /* vector */): unknown /* vector */;

declare function vcopysignf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vsignbitf(p1: unknown /* vector */): unknown /* vector */;

declare function vnextafterf(p1: unknown /* vector */, p2: unknown /* vector */): unknown /* vector */;

declare function vclassifyf(p1: unknown /* vector */): unknown /* vector */;

declare function vtablelookup(p1: unknown /* vector */, p2: interop.PointerConvertible): unknown /* vector */;

declare function vDSP_create_fftsetup(__Log2n: number, __Radix: number): interop.Pointer;

declare function vDSP_destroy_fftsetup(__setup: interop.PointerConvertible): void;

declare function vDSP_create_fftsetupD(__Log2n: number, __Radix: number): interop.Pointer;

declare function vDSP_destroy_fftsetupD(__setup: interop.PointerConvertible): void;

declare function vDSP_biquad_CreateSetup(__Coefficients: interop.PointerConvertible, __M: number): interop.Pointer;

declare function vDSP_biquad_CreateSetupD(__Coefficients: interop.PointerConvertible, __M: number): interop.Pointer;

declare function vDSP_biquad_SetCoefficientsDouble(__setup: interop.PointerConvertible, __coeffs: interop.PointerConvertible, __start_sec: number, __nsec: number): void;

declare function vDSP_biquad_SetCoefficientsSingle(__setup: interop.PointerConvertible, __coeffs: interop.PointerConvertible, __start_sec: number, __nsec: number): void;

declare function vDSP_biquad_DestroySetup(__setup: interop.PointerConvertible): void;

declare function vDSP_biquad_DestroySetupD(__setup: interop.PointerConvertible): void;

declare function vDSP_biquadm_CreateSetup(__coeffs: interop.PointerConvertible, __M: number, __N: number): interop.Pointer;

declare function vDSP_biquadm_CreateSetupD(__coeffs: interop.PointerConvertible, __M: number, __N: number): interop.Pointer;

declare function vDSP_biquadm_DestroySetup(__setup: interop.PointerConvertible): void;

declare function vDSP_biquadm_DestroySetupD(__setup: interop.PointerConvertible): void;

declare function vDSP_biquadm_CopyState(__dest: interop.PointerConvertible, __src: interop.PointerConvertible): void;

declare function vDSP_biquadm_CopyStateD(__dest: interop.PointerConvertible, __src: interop.PointerConvertible): void;

declare function vDSP_biquadm_ResetState(__setup: interop.PointerConvertible): void;

declare function vDSP_biquadm_ResetStateD(__setup: interop.PointerConvertible): void;

declare function vDSP_biquadm_SetCoefficientsDouble(__setup: interop.PointerConvertible, __coeffs: interop.PointerConvertible, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetCoefficientsDoubleD(__setup: interop.PointerConvertible, __coeffs: interop.PointerConvertible, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetTargetsDouble(__setup: interop.PointerConvertible, __targets: interop.PointerConvertible, __interp_rate: number, __interp_threshold: number, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetTargetsDoubleD(__setup: interop.PointerConvertible, __targets: interop.PointerConvertible, __interp_rate: number, __interp_threshold: number, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetCoefficientsSingle(__setup: interop.PointerConvertible, __coeffs: interop.PointerConvertible, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetCoefficientsSingleD(__setup: interop.PointerConvertible, __coeffs: interop.PointerConvertible, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetTargetsSingle(__setup: interop.PointerConvertible, __targets: interop.PointerConvertible, __interp_rate: number, __interp_threshold: number, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetTargetsSingleD(__setup: interop.PointerConvertible, __targets: interop.PointerConvertible, __interp_rate: number, __interp_threshold: number, __start_sec: number, __start_chn: number, __nsec: number, __nchn: number): void;

declare function vDSP_biquadm_SetActiveFilters(__setup: interop.PointerConvertible, __filter_states: interop.PointerConvertible): void;

declare function vDSP_biquadm_SetActiveFiltersD(__setup: interop.PointerConvertible, __filter_states: interop.PointerConvertible): void;

declare function vDSP_ctoz(__C: interop.PointerConvertible, __IC: number, __Z: interop.PointerConvertible, __IZ: number, __N: number): void;

declare function vDSP_ctozD(__C: interop.PointerConvertible, __IC: number, __Z: interop.PointerConvertible, __IZ: number, __N: number): void;

declare function vDSP_ztoc(__Z: interop.PointerConvertible, __IZ: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_ztocD(__Z: interop.PointerConvertible, __IZ: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_fft_zip(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zipD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zipt(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_ziptD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zopt(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zopD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zoptD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zrip(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zripD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zript(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zriptD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zrop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zropD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zropt(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft_zroptD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __Direction: number): void;

declare function vDSP_fft2d_zip(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zipD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zipt(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC1: number, __IC0: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_ziptD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zopD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zopt(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zoptD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zrip(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zripD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __flag: number): void;

declare function vDSP_fft2d_zript(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zriptD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __flag: number): void;

declare function vDSP_fft2d_zrop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zropt(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zropD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fft2d_zroptD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA0: number, __IA1: number, __C: interop.PointerConvertible, __IC0: number, __IC1: number, __Buffer: interop.PointerConvertible, __Log2N0: number, __Log2N1: number, __Direction: number): void;

declare function vDSP_fftm_zip(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zipD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zipt(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_ziptD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zopD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zopt(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zoptD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zrip(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zripD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zript(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zriptD(__Setup: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __IM: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zrop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zropt(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zropD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fftm_zroptD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __IMA: number, __C: interop.PointerConvertible, __IC: number, __IMC: number, __Buffer: interop.PointerConvertible, __Log2N: number, __M: number, __Direction: number): void;

declare function vDSP_fft3_zop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft3_zopD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft5_zop(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_fft5_zopD(__Setup: interop.PointerConvertible, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Log2N: number, __Direction: number): void;

declare function vDSP_biquad(__Setup: interop.PointerConvertible, __Delay: interop.PointerConvertible, __X: interop.PointerConvertible, __IX: number, __Y: interop.PointerConvertible, __IY: number, __N: number): void;

declare function vDSP_biquadD(__Setup: interop.PointerConvertible, __Delay: interop.PointerConvertible, __X: interop.PointerConvertible, __IX: number, __Y: interop.PointerConvertible, __IY: number, __N: number): void;

declare function vDSP_biquadm(__Setup: interop.PointerConvertible, __X: interop.PointerConvertible, __IX: number, __Y: interop.PointerConvertible, __IY: number, __N: number): void;

declare function vDSP_biquadmD(__Setup: interop.PointerConvertible, __X: interop.PointerConvertible, __IX: number, __Y: interop.PointerConvertible, __IY: number, __N: number): void;

declare function vDSP_conv(__A: interop.PointerConvertible, __IA: number, __F: interop.PointerConvertible, __IF: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_convD(__A: interop.PointerConvertible, __IA: number, __F: interop.PointerConvertible, __IF: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_zconv(__A: interop.PointerConvertible, __IA: number, __F: interop.PointerConvertible, __IF: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_zconvD(__A: interop.PointerConvertible, __IA: number, __F: interop.PointerConvertible, __IF: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_f3x3(__A: interop.PointerConvertible, __NR: number, __NC: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible): void;

declare function vDSP_f3x3D(__A: interop.PointerConvertible, __NR: number, __NC: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible): void;

declare function vDSP_f5x5(__A: interop.PointerConvertible, __NR: number, __NC: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible): void;

declare function vDSP_f5x5D(__A: interop.PointerConvertible, __NR: number, __NC: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible): void;

declare function vDSP_imgfir(__A: interop.PointerConvertible, __NR: number, __NC: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible, __P: number, __Q: number): void;

declare function vDSP_imgfirD(__A: interop.PointerConvertible, __NR: number, __NC: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible, __P: number, __Q: number): void;

declare function vDSP_mtrans(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __M: number, __N: number): void;

declare function vDSP_mtransD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __M: number, __N: number): void;

declare function vDSP_mmul(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __M: number, __N: number, __P: number): void;

declare function vDSP_mmulD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zmma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zmmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zmms(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zmmsD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zvmmaa(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __F: interop.PointerConvertible, __IF: number, __N: number): void;

declare function vDSP_zvmmaaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __F: interop.PointerConvertible, __IF: number, __N: number): void;

declare function vDSP_zmsm(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zmsmD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zmmul(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __M: number, __N: number, __P: number): void;

declare function vDSP_zmmulD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __M: number, __N: number, __P: number): void;

declare function vDSP_vadd(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vaddD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vaddi(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvadd(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvaddD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zrvadd(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zrvaddD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsub(__B: interop.PointerConvertible, __IB: number, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsubD(__B: interop.PointerConvertible, __IB: number, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvsub(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvsubD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vmul(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vmulD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zrvmul(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zrvmulD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vdiv(__B: interop.PointerConvertible, __IB: number, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vdivD(__B: interop.PointerConvertible, __IB: number, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vdivi(__B: interop.PointerConvertible, __IB: number, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvdiv(__B: interop.PointerConvertible, __IB: number, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvdivD(__B: interop.PointerConvertible, __IB: number, __A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zrvdiv(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zrvdivD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsmul(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsmulD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsq(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsqD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vssq(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vssqD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_distancesq(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_distancesqD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_dotpr(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_dotprD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zdotpr(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zdotprD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zrdotpr(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zrdotprD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_vam(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vamD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __IDD: number, __N: number): void;

declare function vDSP_vma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_zvma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_zvmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_zvmul(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __Conjugate: number): void;

declare function vDSP_zvmulD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __Conjugate: number): void;

declare function vDSP_zidotpr(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zidotprD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zvcma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_zvcmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_zrvsub(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zrvsubD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vdpsp(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vspdp(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vabs(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vabsD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vabsi(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvabs(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvabsD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_veqvi(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfill(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfillD(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfilli(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvfill(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvfillD(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsadd(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsaddD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsaddi(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsdiv(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsdivD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsdivi(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zaspec(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zaspecD(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_blkman_window(__C: interop.PointerConvertible, __N: number, __Flag: number): void;

declare function vDSP_blkman_windowD(__C: interop.PointerConvertible, __N: number, __Flag: number): void;

declare function vDSP_zcoher(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __N: number): void;

declare function vDSP_zcoherD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __N: number): void;

declare function vDSP_desamp(__A: interop.PointerConvertible, __DF: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number, __P: number): void;

declare function vDSP_desampD(__A: interop.PointerConvertible, __DF: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number, __P: number): void;

declare function vDSP_zrdesamp(__A: interop.PointerConvertible, __DF: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number, __P: number): void;

declare function vDSP_zrdesampD(__A: interop.PointerConvertible, __DF: number, __F: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number, __P: number): void;

declare function vDSP_ztrans(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_ztransD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zcspec(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zcspecD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_zvcmul(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvcmulD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __iC: number, __N: number): void;

declare function vDSP_zvconj(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvconjD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvzsml(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvzsmlD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvmags(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvmagsD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvmgsa(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvmgsaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvmov(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvmovD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvneg(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvnegD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvphas(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvphasD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_zvsma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_zvsmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_deq22(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_deq22D(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_hamm_window(__C: interop.PointerConvertible, __N: number, __Flag: number): void;

declare function vDSP_hamm_windowD(__C: interop.PointerConvertible, __N: number, __Flag: number): void;

declare function vDSP_hann_window(__C: interop.PointerConvertible, __N: number, __Flag: number): void;

declare function vDSP_hann_windowD(__C: interop.PointerConvertible, __N: number, __Flag: number): void;

declare function vDSP_maxmgv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_maxmgvD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_maxmgvi(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_maxmgviD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_maxv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_maxvD(__A: interop.PointerConvertible, __I: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_maxvi(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_maxviD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_meamgv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_meamgvD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_meanv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_meanvD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_measqv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_measqvD(__A: interop.PointerConvertible, __I: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_minmgv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_minmgvD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_minmgvi(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_minmgviD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_minv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_minvD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_minvi(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_minviD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __I: interop.PointerConvertible, __N: number): void;

declare function vDSP_mmov(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __M: number, __N: number, __TA: number, __TC: number): void;

declare function vDSP_mmovD(__A: interop.PointerConvertible, __C: interop.PointerConvertible, __M: number, __N: number, __TA: number, __TC: number): void;

declare function vDSP_mvessq(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_mvessqD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_nzcros(__A: interop.PointerConvertible, __IA: number, __B: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __N: number): void;

declare function vDSP_nzcrosD(__A: interop.PointerConvertible, __IA: number, __B: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __N: number): void;

declare function vDSP_polar(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_polarD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_rect(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_rectD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_rmsqv(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_rmsqvD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_svdiv(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_svdivD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_sve(__A: interop.PointerConvertible, __I: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_sveD(__A: interop.PointerConvertible, __I: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_svemg(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_svemgD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_svesq(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_svesqD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_sve_svesq(__A: interop.PointerConvertible, __IA: number, __Sum: interop.PointerConvertible, __SumOfSquares: interop.PointerConvertible, __N: number): void;

declare function vDSP_sve_svesqD(__A: interop.PointerConvertible, __IA: number, __Sum: interop.PointerConvertible, __SumOfSquares: interop.PointerConvertible, __N: number): void;

declare function vDSP_normalize(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Mean: interop.PointerConvertible, __StandardDeviation: interop.PointerConvertible, __N: number): void;

declare function vDSP_normalizeD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __Mean: interop.PointerConvertible, __StandardDeviation: interop.PointerConvertible, __N: number): void;

declare function vDSP_svs(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_svsD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_vaam(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vaamD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vasbm(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vasbmD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vasm(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vasmD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vavlin(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vavlinD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vclip(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vclipD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vclipc(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number, __NLow: interop.PointerConvertible, __NHigh: interop.PointerConvertible): void;

declare function vDSP_vclipcD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number, __NLow: interop.PointerConvertible, __NHigh: interop.PointerConvertible): void;

declare function vDSP_vclr(__C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vclrD(__C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vcmprs(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vcmprsD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vdbcon(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number, __F: number): void;

declare function vDSP_vdbconD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number, __F: number): void;

declare function vDSP_vdist(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vdistD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_venvlp(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_venvlpD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vfix8(__A: interop.PointerConvertible, __IA: number, __C: string, __IC: number, __N: number): void;

declare function vDSP_vfix8D(__A: interop.PointerConvertible, __IA: number, __C: string, __IC: number, __N: number): void;

declare function vDSP_vfix16(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfix16D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfix32(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfix32D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixu8(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixu8D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixu16(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixu16D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixu32(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixu32D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsmfixu24(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsmfix24(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltu24(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vflt24(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltsmu24(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltsm24(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixr8(__A: interop.PointerConvertible, __IA: number, __C: string, __IC: number, __N: number): void;

declare function vDSP_vfixr8D(__A: interop.PointerConvertible, __IA: number, __C: string, __IC: number, __N: number): void;

declare function vDSP_vfixr16(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixr16D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixr32(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixr32D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixru8(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixru8D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixru16(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixru16D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixru32(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfixru32D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vflt8(__A: string, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vflt8D(__A: string, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vflt16(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vflt16D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vflt32(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vflt32D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltu8(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltu8D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltu16(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltu16D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltu32(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfltu32D(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfrac(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vfracD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vgathr(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vgathrD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vgathra(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vgathraD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vgen(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vgenD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vgenp(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __M: number): void;

declare function vDSP_vgenpD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __M: number): void;

declare function vDSP_viclip(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_viclipD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vindex(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vindexD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vintb(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vintbD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vlim(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vlimD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vlint(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __M: number): void;

declare function vDSP_vlintD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __M: number): void;

declare function vDSP_vmax(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vmaxD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vmaxmg(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vmaxmgD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vswmax(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number, __WindowLength: number): void;

declare function vDSP_vswmaxD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number, __WindowLength: number): void;

declare function vDSP_vmin(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vminD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vminmg(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vminmgD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vmma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vmmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vmmsb(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vmmsbD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vmsa(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vmsaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vmsb(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vmsbD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vnabs(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vnabsD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vneg(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vnegD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vpoly(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_vpolyD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_vpythg(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vpythgD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vqint(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __M: number): void;

declare function vDSP_vqintD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number, __M: number): void;

declare function vDSP_vramp(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vrampD(__A: interop.PointerConvertible, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vrsum(__A: interop.PointerConvertible, __IA: number, __S: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vrsumD(__A: interop.PointerConvertible, __IA: number, __S: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vrvrs(__C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vrvrsD(__C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsbm(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsbmD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsbsbm(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vsbsbmD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vsbsm(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsbsmD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsimps(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsimpsD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vsma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsmsa(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsmsaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsmsb(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsmsbD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vsmsma(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vsmsmaD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __D: interop.PointerConvertible, __E: interop.PointerConvertible, __IE: number, __N: number): void;

declare function vDSP_vsort(__C: interop.PointerConvertible, __N: number, __Order: number): void;

declare function vDSP_vsortD(__C: interop.PointerConvertible, __N: number, __Order: number): void;

declare function vDSP_vsorti(__C: interop.PointerConvertible, __I: interop.PointerConvertible, __Temporary: interop.PointerConvertible, __N: number, __Order: number): void;

declare function vDSP_vsortiD(__C: interop.PointerConvertible, __I: interop.PointerConvertible, __Temporary: interop.PointerConvertible, __N: number, __Order: number): void;

declare function vDSP_vswap(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __N: number): void;

declare function vDSP_vswapD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __N: number): void;

declare function vDSP_vswsum(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_vswsumD(__A: interop.PointerConvertible, __IA: number, __C: interop.PointerConvertible, __IC: number, __N: number, __P: number): void;

declare function vDSP_vtabi(__A: interop.PointerConvertible, __IA: number, __S1: interop.PointerConvertible, __S2: interop.PointerConvertible, __C: interop.PointerConvertible, __M: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vtabiD(__A: interop.PointerConvertible, __IA: number, __S1: interop.PointerConvertible, __S2: interop.PointerConvertible, __C: interop.PointerConvertible, __M: number, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vthr(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vthrD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vthres(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vthresD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vthrsc(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vthrscD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __D: interop.PointerConvertible, __ID: number, __N: number): void;

declare function vDSP_vtmerg(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vtmergD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vtrapz(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_vtrapzD(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __C: interop.PointerConvertible, __IC: number, __N: number): void;

declare function vDSP_wiener(__L: number, __A: interop.PointerConvertible, __C: interop.PointerConvertible, __F: interop.PointerConvertible, __P: interop.PointerConvertible, __Flag: number, __Error: interop.PointerConvertible): void;

declare function vDSP_wienerD(__L: number, __A: interop.PointerConvertible, __C: interop.PointerConvertible, __F: interop.PointerConvertible, __P: interop.PointerConvertible, __Flag: number, __Error: interop.PointerConvertible): void;

declare function vDSP_FFT16_copv(__Output: interop.PointerConvertible, __Input: interop.PointerConvertible, __Direction: number): void;

declare function vDSP_FFT32_copv(__Output: interop.PointerConvertible, __Input: interop.PointerConvertible, __Direction: number): void;

declare function vDSP_FFT16_zopv(__Or: interop.PointerConvertible, __Oi: interop.PointerConvertible, __Ir: interop.PointerConvertible, __Ii: interop.PointerConvertible, __Direction: number): void;

declare function vDSP_FFT32_zopv(__Or: interop.PointerConvertible, __Oi: interop.PointerConvertible, __Ir: interop.PointerConvertible, __Ii: interop.PointerConvertible, __Direction: number): void;

declare function vDSP_DFT_CreateSetup(__Previous: interop.PointerConvertible, __Length: number): interop.Pointer;

declare function vDSP_DFT_zop_CreateSetup(__Previous: interop.PointerConvertible, __Length: number, __Direction: interop.Enum<typeof vDSP_DFT_Direction>): interop.Pointer;

declare function vDSP_DFT_zop_CreateSetupD(__Previous: interop.PointerConvertible, __Length: number, __Direction: interop.Enum<typeof vDSP_DFT_Direction>): interop.Pointer;

declare function vDSP_DFT_zrop_CreateSetup(__Previous: interop.PointerConvertible, __Length: number, __Direction: interop.Enum<typeof vDSP_DFT_Direction>): interop.Pointer;

declare function vDSP_DFT_zrop_CreateSetupD(__Previous: interop.PointerConvertible, __Length: number, __Direction: interop.Enum<typeof vDSP_DFT_Direction>): interop.Pointer;

declare function vDSP_DFT_DestroySetup(__Setup: interop.PointerConvertible): void;

declare function vDSP_DFT_DestroySetupD(__Setup: interop.PointerConvertible): void;

declare function vDSP_DFT_zop(__Setup: interop.PointerConvertible, __Ir: interop.PointerConvertible, __Ii: interop.PointerConvertible, __Is: number, __Or: interop.PointerConvertible, __Oi: interop.PointerConvertible, __Os: number, __Direction: interop.Enum<typeof vDSP_DFT_Direction>): void;

declare function vDSP_DFT_Execute(__Setup: interop.PointerConvertible, __Ir: interop.PointerConvertible, __Ii: interop.PointerConvertible, __Or: interop.PointerConvertible, __Oi: interop.PointerConvertible): void;

declare function vDSP_DFT_ExecuteD(__Setup: interop.PointerConvertible, __Ir: interop.PointerConvertible, __Ii: interop.PointerConvertible, __Or: interop.PointerConvertible, __Oi: interop.PointerConvertible): void;

declare function vDSP_DCT_CreateSetup(__Previous: interop.PointerConvertible, __Length: number, __Type: interop.Enum<typeof vDSP_DCT_Type>): interop.Pointer;

declare function vDSP_DCT_Execute(__Setup: interop.PointerConvertible, __Input: interop.PointerConvertible, __Output: interop.PointerConvertible): void;

declare function vDSP_DFT_Interleaved_CreateSetup(Previous: interop.PointerConvertible, Length: number, Direction: interop.Enum<typeof vDSP_DFT_Direction>, RealtoComplex: interop.Enum<typeof vDSP_DFT_RealtoComplex>): interop.Pointer;

declare function vDSP_DFT_Interleaved_CreateSetupD(Previous: interop.PointerConvertible, Length: number, Direction: interop.Enum<typeof vDSP_DFT_Direction>, RealtoComplex: interop.Enum<typeof vDSP_DFT_RealtoComplex>): interop.Pointer;

declare function vDSP_DFT_Interleaved_Execute(Setup: interop.PointerConvertible, Iri: interop.PointerConvertible, Ori: interop.PointerConvertible): void;

declare function vDSP_DFT_Interleaved_ExecuteD(Setup: interop.PointerConvertible, Iri: interop.PointerConvertible, Ori: interop.PointerConvertible): void;

declare function vDSP_DFT_Interleaved_DestroySetup(Setup: interop.PointerConvertible): void;

declare function vDSP_DFT_Interleaved_DestroySetupD(Setup: interop.PointerConvertible): void;

declare function vDSP_dotpr2(__A0: interop.PointerConvertible, __IA0: number, __A1: interop.PointerConvertible, __IA1: number, __B: interop.PointerConvertible, __IB: number, __C0: interop.PointerConvertible, __C1: interop.PointerConvertible, __N: number): void;

declare function vDSP_dotpr2D(__A0: interop.PointerConvertible, __IA0: number, __A1: interop.PointerConvertible, __IA1: number, __B: interop.PointerConvertible, __IB: number, __C0: interop.PointerConvertible, __C1: interop.PointerConvertible, __N: number): void;

declare function vDSP_dotpr_s1_15(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_dotpr2_s1_15(__A0: interop.PointerConvertible, __IA0: number, __A1: interop.PointerConvertible, __IA1: number, __B: interop.PointerConvertible, __IB: number, __C0: interop.PointerConvertible, __C1: interop.PointerConvertible, __N: number): void;

declare function vDSP_dotpr_s8_24(__A: interop.PointerConvertible, __IA: number, __B: interop.PointerConvertible, __IB: number, __C: interop.PointerConvertible, __N: number): void;

declare function vDSP_dotpr2_s8_24(__A0: interop.PointerConvertible, __IA0: number, __A1: interop.PointerConvertible, __IA1: number, __B: interop.PointerConvertible, __IB: number, __C0: interop.PointerConvertible, __C1: interop.PointerConvertible, __N: number): void;

declare function vDSP_vaddsub(__I0: interop.PointerConvertible, __I0S: number, __I1: interop.PointerConvertible, __I1S: number, __O0: interop.PointerConvertible, __O0S: number, __O1: interop.PointerConvertible, __O1S: number, __N: number): void;

declare function vDSP_vaddsubD(__I0: interop.PointerConvertible, __I0S: number, __I1: interop.PointerConvertible, __I1S: number, __O0: interop.PointerConvertible, __O0S: number, __O1: interop.PointerConvertible, __O1S: number, __N: number): void;

declare function vDSP_vrampmul(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmulD(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladd(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladdD(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmul2(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmul2D(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladd2(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladd2D(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmul_s1_15(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladd_s1_15(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmul2_s1_15(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladd2_s1_15(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmul_s8_24(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladd_s8_24(__I: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmul2_s8_24(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function vDSP_vrampmuladd2_s8_24(__I0: interop.PointerConvertible, __I1: interop.PointerConvertible, __IS: number, __Start: interop.PointerConvertible, __Step: interop.PointerConvertible, __O0: interop.PointerConvertible, __O1: interop.PointerConvertible, __OS: number, __N: number): void;

declare function BLASSetThreading(threading: interop.Enum<typeof BLAS_THREADING>): number;

declare function BLASGetThreading(): interop.Enum<typeof BLAS_THREADING>;

declare function xerbla_(srname: string, info: interop.PointerConvertible): number;

declare function isamax_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function idamax_(n: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function icamax_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function izamax_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function sasum_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dasum_(n: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function scasum_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dzasum_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function saxpy_(n: interop.PointerConvertible, da: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function daxpy_(n: interop.PointerConvertible, da: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible, dy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function caxpy_(n: interop.PointerConvertible, ca: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zaxpy_(n: interop.PointerConvertible, ca: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function scopy_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dcopy_(n: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible, dy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function ccopy_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zcopy_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function sdot_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function ddot_(n: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible, dy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function sdsdot_(n: interop.PointerConvertible, sb: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dsdot_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function cdotc_(ret_val: interop.PointerConvertible, n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): void;

declare function zdotc_(ret_val: interop.PointerConvertible, n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): void;

declare function cdotu_(ret_val: interop.PointerConvertible, n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): void;

declare function zdotu_(ret_val: interop.PointerConvertible, n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): void;

declare function snrm2_(n: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dnrm2_(n: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function scnrm2_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dznrm2_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function srot_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible, c: interop.PointerConvertible, s: interop.PointerConvertible): number;

declare function drot_(n: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible, dy: interop.PointerConvertible, incy: interop.PointerConvertible, c: interop.PointerConvertible, s: interop.PointerConvertible): number;

declare function csrot_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible, c: interop.PointerConvertible, s: interop.PointerConvertible): number;

declare function zdrot_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible, c: interop.PointerConvertible, s: interop.PointerConvertible): number;

declare function srotg_(sa: interop.PointerConvertible, sb: interop.PointerConvertible, c: interop.PointerConvertible, s: interop.PointerConvertible): number;

declare function drotg_(da: interop.PointerConvertible, db: interop.PointerConvertible, c: interop.PointerConvertible, s: interop.PointerConvertible): number;

declare function crotg_(ca: interop.PointerConvertible, cb: interop.PointerConvertible, c: interop.PointerConvertible, cs: interop.PointerConvertible): number;

declare function zrotg_(ca: interop.PointerConvertible, cb: interop.PointerConvertible, c: interop.PointerConvertible, cs: interop.PointerConvertible): number;

declare function srotm_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible, param: interop.PointerConvertible): number;

declare function drotm_(n: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible, dy: interop.PointerConvertible, incy: interop.PointerConvertible, dparam: interop.PointerConvertible): number;

declare function srotmg_(sd1: interop.PointerConvertible, sd2: interop.PointerConvertible, sx1: interop.PointerConvertible, sy1: interop.PointerConvertible, param: interop.PointerConvertible): number;

declare function drotmg_(dd1: interop.PointerConvertible, dd2: interop.PointerConvertible, dx1: interop.PointerConvertible, dy1: interop.PointerConvertible, dparam: interop.PointerConvertible): number;

declare function sscal_(n: interop.PointerConvertible, sa: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dscal_(n: interop.PointerConvertible, da: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function cscal_(n: interop.PointerConvertible, ca: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function zscal_(n: interop.PointerConvertible, ca: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function csscal_(n: interop.PointerConvertible, sa: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function zdscal_(n: interop.PointerConvertible, sa: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function sswap_(n: interop.PointerConvertible, sx: interop.PointerConvertible, incx: interop.PointerConvertible, sy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dswap_(n: interop.PointerConvertible, dx: interop.PointerConvertible, incx: interop.PointerConvertible, dy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function cswap_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zswap_(n: interop.PointerConvertible, cx: interop.PointerConvertible, incx: interop.PointerConvertible, cy: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function sgemv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dgemv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function cgemv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zgemv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function sgbmv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, kl: interop.PointerConvertible, ku: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dgbmv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, kl: interop.PointerConvertible, ku: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function cgbmv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, kl: interop.PointerConvertible, ku: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zgbmv_(trans: string, m: interop.PointerConvertible, n: interop.PointerConvertible, kl: interop.PointerConvertible, ku: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function ssymv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dsymv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function chemv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zhemv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function ssbmv_(uplo: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dsbmv_(uplo: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function chbmv_(uplo: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zhbmv_(uplo: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function sspmv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function dspmv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function chpmv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function zhpmv_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, beta: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible): number;

declare function strmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dtrmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ctrmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ztrmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function stbmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dtbmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ctbmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ztbmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function stpmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dtpmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ctpmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ztpmv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function strsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dtrsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ctrsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ztrsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function stbsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dtbsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ctbsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ztbsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, k: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function stpsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function dtpsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ctpsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function ztpsv_(uplo: string, trans: string, diag: string, n: interop.PointerConvertible, ap: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible): number;

declare function sger_(m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function dger_(m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function cgerc_(m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function zgerc_(m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function cgeru_(m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function zgeru_(m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function ssyr_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function dsyr_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function cher_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function zher_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function ssyr2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function dsyr2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function cher2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function zher2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible): number;

declare function sspr_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function dspr_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function chpr_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function zhpr_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function sspr2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function dspr2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function chpr2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function zhpr2_(uplo: string, n: interop.PointerConvertible, alpha: interop.PointerConvertible, x: interop.PointerConvertible, incx: interop.PointerConvertible, y: interop.PointerConvertible, incy: interop.PointerConvertible, ap: interop.PointerConvertible): number;

declare function sgemm_(transa: string, transb: string, m: interop.PointerConvertible, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function dgemm_(transa: string, transb: string, m: interop.PointerConvertible, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function cgemm_(transa: string, transb: string, m: interop.PointerConvertible, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function zgemm_(transa: string, transb: string, m: interop.PointerConvertible, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function ssymm_(side: string, uplo: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function dsymm_(side: string, uplo: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function csymm_(side: string, uplo: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function zsymm_(side: string, uplo: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function chemm_(side: string, uplo: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function zhemm_(side: string, uplo: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function strmm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function dtrmm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function ctrmm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function ztrmm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function strsm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function dtrsm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function ctrsm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function ztrsm_(side: string, uplo: string, transa: string, diag: string, m: interop.PointerConvertible, n: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible): number;

declare function ssyrk_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function dsyrk_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function csyrk_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function zsyrk_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function cherk_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function zherk_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function ssyr2k_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function dsyr2k_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function csyr2k_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function zsyr2k_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function cher2k_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function zher2k_(uplo: string, trans: string, n: interop.PointerConvertible, k: interop.PointerConvertible, alpha: interop.PointerConvertible, a: interop.PointerConvertible, lda: interop.PointerConvertible, b: interop.PointerConvertible, ldb: interop.PointerConvertible, beta: interop.PointerConvertible, c__: interop.PointerConvertible, ldc: interop.PointerConvertible): number;

declare function cblas_errprn(__ierr: number, __info: number, __form: string): number;

declare function cblas_xerbla(__p: number, __rout: string, __form: string): void;

declare function cblas_sdsdot(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): number;

declare function cblas_dsdot(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): number;

declare function cblas_sdot(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): number;

declare function cblas_ddot(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): number;

declare function cblas_cdotu_sub(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __dotu: interop.PointerConvertible): void;

declare function cblas_cdotc_sub(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __dotc: interop.PointerConvertible): void;

declare function cblas_zdotu_sub(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __dotu: interop.PointerConvertible): void;

declare function cblas_zdotc_sub(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __dotc: interop.PointerConvertible): void;

declare function cblas_snrm2(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_sasum(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_dnrm2(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_dasum(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_scnrm2(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_scasum(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_dznrm2(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_dzasum(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_isamax(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_idamax(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_icamax(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_izamax(__N: number, __X: interop.PointerConvertible, __incX: number): number;

declare function cblas_sswap(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_scopy(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_saxpy(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_saxpby(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_sset(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dswap(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_dcopy(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_daxpy(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_daxpby(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_dset(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_cswap(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_ccopy(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_caxpy(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_caxpby(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_cset(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_zswap(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_zcopy(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_zaxpy(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_zaxpby(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function catlas_zset(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_srotg(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c: interop.PointerConvertible, __s: interop.PointerConvertible): void;

declare function cblas_srotmg(__d1: interop.PointerConvertible, __d2: interop.PointerConvertible, __b1: interop.PointerConvertible, __b2: number, __P: interop.PointerConvertible): void;

declare function cblas_srot(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __c: number, __s: number): void;

declare function cblas_srotm(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __P: interop.PointerConvertible): void;

declare function cblas_drotg(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c: interop.PointerConvertible, __s: interop.PointerConvertible): void;

declare function cblas_drotmg(__d1: interop.PointerConvertible, __d2: interop.PointerConvertible, __b1: interop.PointerConvertible, __b2: number, __P: interop.PointerConvertible): void;

declare function cblas_drot(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __c: number, __s: number): void;

declare function cblas_drotm(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __P: interop.PointerConvertible): void;

declare function cblas_sscal(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dscal(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_cscal(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_zscal(__N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_csscal(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_zdscal(__N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_crotg(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c: interop.PointerConvertible, __s: interop.PointerConvertible): void;

declare function cblas_zrotg(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c: interop.PointerConvertible, __s: interop.PointerConvertible): void;

declare function cblas_csrot(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __c: number, __s: number): void;

declare function cblas_zdrot(__N: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __c: number, __s: number): void;

declare function cblas_sgemv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_sgbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __KL: number, __KU: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_strmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_stbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_stpmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_strsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_stbsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_stpsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dgemv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_dgbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __KL: number, __KU: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_dtrmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dtbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dtpmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dtrsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dtbsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_dtpsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_cgemv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_cgbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __KL: number, __KU: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_ctrmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ctbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ctpmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ctrsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ctbsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ctpsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_zgemv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_zgbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __KL: number, __KU: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_ztrmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ztbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ztpmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ztrsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ztbsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __K: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ztpsv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __N: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number): void;

declare function cblas_ssymv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_ssbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_sspmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_sger(__Order: interop.Enum<typeof CBLAS_ORDER>, __M: number, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_ssyr(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_sspr(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Ap: interop.PointerConvertible): void;

declare function cblas_ssyr2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_sspr2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible): void;

declare function cblas_dsymv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_dsbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_dspmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __beta: number, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_dger(__Order: interop.Enum<typeof CBLAS_ORDER>, __M: number, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_dsyr(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_dspr(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Ap: interop.PointerConvertible): void;

declare function cblas_dsyr2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_dspr2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible): void;

declare function cblas_chemv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_chbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_chpmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_cgeru(__Order: interop.Enum<typeof CBLAS_ORDER>, __M: number, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_cgerc(__Order: interop.Enum<typeof CBLAS_ORDER>, __M: number, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_cher(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_chpr(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __A: interop.PointerConvertible): void;

declare function cblas_cher2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_chpr2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __Ap: interop.PointerConvertible): void;

declare function cblas_zhemv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_zhbmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_zhpmv(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __Ap: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __beta: interop.PointerConvertible, __Y: interop.PointerConvertible, __incY: number): void;

declare function cblas_zgeru(__Order: interop.Enum<typeof CBLAS_ORDER>, __M: number, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_zgerc(__Order: interop.Enum<typeof CBLAS_ORDER>, __M: number, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_zher(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_zhpr(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: number, __X: interop.PointerConvertible, __incX: number, __A: interop.PointerConvertible): void;

declare function cblas_zher2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __A: interop.PointerConvertible, __lda: number): void;

declare function cblas_zhpr2(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __N: number, __alpha: interop.PointerConvertible, __X: interop.PointerConvertible, __incX: number, __Y: interop.PointerConvertible, __incY: number, __Ap: interop.PointerConvertible): void;

declare function cblas_sgemm(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __TransB: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_ssymm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_ssyrk(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_ssyr2k(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_strmm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_strsm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_dgemm(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __TransB: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_dsymm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_dsyrk(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_dsyr2k(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_dtrmm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_dtrsm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_cgemm(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __TransB: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_csymm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_csyrk(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_csyr2k(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_ctrmm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_ctrsm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_zgemm(__Order: interop.Enum<typeof CBLAS_ORDER>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __TransB: interop.Enum<typeof CBLAS_TRANSPOSE>, __M: number, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_zsymm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_zsyrk(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_zsyr2k(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_ztrmm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_ztrsm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __TransA: interop.Enum<typeof CBLAS_TRANSPOSE>, __Diag: interop.Enum<typeof CBLAS_DIAG>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number): void;

declare function cblas_chemm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_cherk(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_cher2k(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_zhemm(__Order: interop.Enum<typeof CBLAS_ORDER>, __Side: interop.Enum<typeof CBLAS_SIDE>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __M: number, __N: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: interop.PointerConvertible, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_zherk(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function cblas_zher2k(__Order: interop.Enum<typeof CBLAS_ORDER>, __Uplo: interop.Enum<typeof CBLAS_UPLO>, __Trans: interop.Enum<typeof CBLAS_TRANSPOSE>, __N: number, __K: number, __alpha: interop.PointerConvertible, __A: interop.PointerConvertible, __lda: number, __B: interop.PointerConvertible, __ldb: number, __beta: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function appleblas_sgeadd(__order: interop.Enum<typeof CBLAS_ORDER>, __transA: interop.Enum<typeof CBLAS_TRANSPOSE>, __transB: interop.Enum<typeof CBLAS_TRANSPOSE>, __m: number, __n: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __beta: number, __B: interop.PointerConvertible, __ldb: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function appleblas_dgeadd(__order: interop.Enum<typeof CBLAS_ORDER>, __transA: interop.Enum<typeof CBLAS_TRANSPOSE>, __transB: interop.Enum<typeof CBLAS_TRANSPOSE>, __m: number, __n: number, __alpha: number, __A: interop.PointerConvertible, __lda: number, __beta: number, __B: interop.PointerConvertible, __ldb: number, __C: interop.PointerConvertible, __ldc: number): void;

declare function SetBLASParamErrorProc(__ErrorProc: (p1: string, p2: string, p3: interop.PointerConvertible, p4: interop.PointerConvertible) => void): void;

declare function cbdsqr_(__uplo: string, __n: interop.PointerConvertible, __ncvt: interop.PointerConvertible, __nru: interop.PointerConvertible, __ncc: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbbrd_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ncc: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __pt: interop.PointerConvertible, __ldpt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbcon_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbrfs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbsv_(__n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbtf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbtrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgbtrs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgebak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgebal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgebd2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgebrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgecon_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgees_(__jobvs: string, __sort: string, __select: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __w: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeesx_(__jobvs: string, __sort: string, __select: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __w: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgegs_(__jobvsl: string, __jobvsr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgegv_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgehd2_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgehrd_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgelq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgelqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgels_(__trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgelsd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgelss_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgelsx_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgelsy_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeql2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeqlf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeqp3_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeqpf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeqr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgeqrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgerfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgerq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgerqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgesc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rhs: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __scale: interop.PointerConvertible): number;

declare function cgesdd_(__jobz: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgesv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgesvd_(__jobu: string, __jobvt: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgesvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgetc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgetf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgetrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgetri_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgetrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggbak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggbal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgges_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggesx_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __bbnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggglm_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgghrd_(__compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgglse_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggqrf_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggrqf_(__m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggsvd_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cggsvp_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __iwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgtcon_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgtrfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgtsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgtsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgttrf_(__n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgttrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cgtts2_(__itrans: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function chbev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chbevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chbevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chbgst_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chbgv_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chbgvd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chbgvx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chbtrd_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function checon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cheequb_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cheev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cheevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cheevr_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cheevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chegs2_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chegst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chegv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chegvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chegvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cherfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chesv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chesvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chetd2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chetf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chetrd_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chetrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chetri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chetrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chfrk_(__transr: string, __uplo: string, __trans: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __beta: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function chgeqz_(__job: string, __compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chla_transtype__(__ret_val: string, __ret_val_len: number, __trans: interop.PointerConvertible): void;

declare function chpcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpgst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpgv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpgvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpgvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chpsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chptrd_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chsein_(__side: string, __eigsrc: string, __initv: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __ifaill: interop.PointerConvertible, __ifailr: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function chseqr_(__job: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clabrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function clacgv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function clacn2_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible, __isave: interop.PointerConvertible): number;

declare function clacon_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible): number;

declare function clacp2_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function clacpy_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function clacrm_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __rwork: interop.PointerConvertible): number;

declare function clacrt_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible, __cy: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible): number;

declare function cladiv_(__ret_val: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible): void;

declare function claed0_(__qsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __qstore: interop.PointerConvertible, __ldqs: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function claed7_(__n: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __tlvls: interop.PointerConvertible, __curlvl: interop.PointerConvertible, __curpbm: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __rho: interop.PointerConvertible, __indxq: interop.PointerConvertible, __qstore: interop.PointerConvertible, __qptr: interop.PointerConvertible, __prmptr: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function claed8_(__k: interop.PointerConvertible, __n: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __d__: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __z__: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __q2: interop.PointerConvertible, __ldq2: interop.PointerConvertible, __w: interop.PointerConvertible, __indxp: interop.PointerConvertible, __indx: interop.PointerConvertible, __indxq: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function claein_(__rightv: interop.PointerConvertible, __noinit: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __v: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __rwork: interop.PointerConvertible, __eps3: interop.PointerConvertible, __smlnum: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function claesy_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible, __evscal: interop.PointerConvertible, __cs1: interop.PointerConvertible, __sn1: interop.PointerConvertible): number;

declare function claev2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible, __cs1: interop.PointerConvertible, __sn1: interop.PointerConvertible): number;

declare function clag2z_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __sa: interop.PointerConvertible, __ldsa: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clags2_(__upper: interop.PointerConvertible, __a1: interop.PointerConvertible, __a2: interop.PointerConvertible, __a3: interop.PointerConvertible, __b1: interop.PointerConvertible, __b2: interop.PointerConvertible, __b3: interop.PointerConvertible, __csu: interop.PointerConvertible, __snu: interop.PointerConvertible, __csv: interop.PointerConvertible, __snv: interop.PointerConvertible, __csq: interop.PointerConvertible, __snq: interop.PointerConvertible): number;

declare function clagtm_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __alpha: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __beta: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function clahef_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clahqr_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clahr2_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function clahrd_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function claic1_(__job: interop.PointerConvertible, __j: interop.PointerConvertible, __x: interop.PointerConvertible, __sest: interop.PointerConvertible, __w: interop.PointerConvertible, __gamma: interop.PointerConvertible, __sestpr: interop.PointerConvertible, __s: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function clals0_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __poles: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __k: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clalsa_(__icompq: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __k: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __poles: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __perm: interop.PointerConvertible, __givnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clalsd_(__uplo: string, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clangb_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clange_(__norm: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clangt_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible): number;

declare function clanhb_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clanhe_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clanhf_(__norm: string, __transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clanhp_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clanhs_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clanht_(__norm: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible): number;

declare function clansb_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clansp_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clansy_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clantb_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clantp_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clantr_(__norm: string, __uplo: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clapll_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __ssmin: interop.PointerConvertible): number;

declare function clapmt_(__forwrd: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __k: interop.PointerConvertible): number;

declare function claqgb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function claqge_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function claqhb_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function claqhe_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function claqhp_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function claqp2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function claqps_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __auxv: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible): number;

declare function claqr0_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function claqr1_(__n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __s1: interop.PointerConvertible, __s2: interop.PointerConvertible, __v: interop.PointerConvertible): number;

declare function claqr2_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sh: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function claqr3_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sh: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function claqr4_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function claqr5_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __kacc22: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nshfts: interop.PointerConvertible, __s: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __nh: interop.PointerConvertible, __wh: interop.PointerConvertible, __ldwh: interop.PointerConvertible): number;

declare function claqsb_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function claqsp_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function claqsy_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function clar1v_(__n: interop.PointerConvertible, __b1: interop.PointerConvertible, __bn: interop.PointerConvertible, __lambda: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __ld: interop.PointerConvertible, __lld: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __gaptol: interop.PointerConvertible, __z__: interop.PointerConvertible, __wantnc: interop.PointerConvertible, __negcnt: interop.PointerConvertible, __ztz: interop.PointerConvertible, __mingma: interop.PointerConvertible, __r__: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __nrminv: interop.PointerConvertible, __resid: interop.PointerConvertible, __rqcorr: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clar2v_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __z__: interop.PointerConvertible, __incx: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function clarcm_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __rwork: interop.PointerConvertible): number;

declare function clarf_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clarfb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function clarfg_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function clarfp_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function clarft_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function clarfx_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clargv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function clarnv_(__idist: interop.PointerConvertible, __iseed: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible): number;

declare function clarrv_(__n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __dol: interop.PointerConvertible, __dou: interop.PointerConvertible, __minrgp: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wgap: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __gers: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clarscl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function clartg_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __cs: interop.PointerConvertible, __sn: interop.PointerConvertible, __r__: interop.PointerConvertible): number;

declare function clartv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function clarz_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clarzb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function clarzt_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function clascl_(__type__: string, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __cfrom: interop.PointerConvertible, __cto: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clascl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function claset_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function clasr_(__side: string, __pivot: string, __direct: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function classq_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __scale: interop.PointerConvertible, __sumsq: interop.PointerConvertible): number;

declare function claswp_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __k1: interop.PointerConvertible, __k2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function clasyf_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clatbs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clatdf_(__ijob: interop.PointerConvertible, __n: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __rhs: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible): number;

declare function clatps_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clatrd_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible): number;

declare function clatrs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clatrz_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clatzm_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c1: interop.PointerConvertible, __c2: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function clauu2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function clauum_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbcon_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbequ_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbrfs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbstf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbsv_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbtf2_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbtrf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpbtrs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpftrf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpftri_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpftrs_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpocon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpoequ_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpoequb_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cporfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cposv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cposvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpotf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpotrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpotri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpotrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cppcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cppequ_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cppsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cppsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpstf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpstrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cptcon_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cptrfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cptsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cptsvx_(__fact: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpttrf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cpttrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cptts2_(__iuplo: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function crot_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible, __cy: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible): number;

declare function cspcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cspmv_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __ap: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __beta: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible): number;

declare function cspr_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __ap: interop.PointerConvertible): number;

declare function csprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cspsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cspsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csrscl_(__n: interop.PointerConvertible, __sa: interop.PointerConvertible, __sx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function cstedc_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cstegr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cstein_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __iblock: interop.PointerConvertible, __isplit: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cstemr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __nzc: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __tryrac: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csycon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csyequb_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csymv_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __beta: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible): number;

declare function csyr_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function csyrfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csysv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csysvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csytf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csytrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csytri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function csytrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctbcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctbrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctbtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctfsm_(__transr: string, __side: string, __uplo: string, __trans: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function ctftri_(__transr: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctfttp_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctfttr_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __s: interop.PointerConvertible, __lds: interop.PointerConvertible, __p: interop.PointerConvertible, __ldp: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgex2_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __j1: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgexc_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgsen_(__ijob: interop.PointerConvertible, __wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __m: interop.PointerConvertible, __pl: interop.PointerConvertible, __pr: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgsja_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __ncycle: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __dif: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgsy2_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctgsyl_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctpcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctprfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctptri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctptrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctpttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctpttr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrexc_(__compq: string, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrsen_(__job: string, __compq: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __w: interop.PointerConvertible, __m: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrsyl_(__trana: string, __tranb: string, __isgn: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrti2_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrtri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctrttp_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctzrqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ctzrzf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cung2l_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cung2r_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cungbr_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunghr_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cungl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunglq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cungql_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cungqr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cungr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cungrq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cungtr_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunm2l_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunm2r_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmbr_(__vect: string, __side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmhr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunml2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmlq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmql_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmqr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmr2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmr3_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmrq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmrz_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cunmtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cupgtr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function cupmtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dbdsdc_(__uplo: string, __compq: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __q: interop.PointerConvertible, __iq: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dbdsqr_(__uplo: string, __n: interop.PointerConvertible, __ncvt: interop.PointerConvertible, __nru: interop.PointerConvertible, __ncc: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ddisna_(__job: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __sep: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbbrd_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ncc: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __pt: interop.PointerConvertible, __ldpt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbcon_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbrfs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbsv_(__n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbtf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbtrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgbtrs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgebak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgebal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgebd2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgebrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgecon_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgees_(__jobvs: string, __sort: string, __select: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeesx_(__jobvs: string, __sort: string, __select: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgegs_(__jobvsl: string, __jobvsr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgegv_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgehd2_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgehrd_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgejsv_(__joba: string, __jobu: string, __jobv: string, __jobr: string, __jobt: string, __jobp: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sva: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgelq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgelqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgels_(__trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgelsd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgelss_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgelsx_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgelsy_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeql2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeqlf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeqp3_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeqpf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeqr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgeqrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgerfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgerq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgerqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgesc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rhs: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __scale: interop.PointerConvertible): number;

declare function dgesdd_(__jobz: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgesv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgesvd_(__jobu: string, __jobvt: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgesvj_(__joba: string, __jobu: string, __jobv: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sva: interop.PointerConvertible, __mv: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgesvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgetc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgetf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgetrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgetri_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgetrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggbak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggbal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgges_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggesx_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __bbnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggglm_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgghrd_(__compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgglse_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggqrf_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggrqf_(__m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggsvd_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dggsvp_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __iwork: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgsvj0_(__jobv: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __sva: interop.PointerConvertible, __mv: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __eps: interop.PointerConvertible, __sfmin: interop.PointerConvertible, __tol: interop.PointerConvertible, __nsweep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgsvj1_(__jobv: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __n1: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __sva: interop.PointerConvertible, __mv: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __eps: interop.PointerConvertible, __sfmin: interop.PointerConvertible, __tol: interop.PointerConvertible, __nsweep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgtcon_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgtrfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgtsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgtsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgttrf_(__n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgttrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dgtts2_(__itrans: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function dhgeqz_(__job: string, __compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dhsein_(__side: string, __eigsrc: string, __initv: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __ifaill: interop.PointerConvertible, __ifailr: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dhseqr_(__job: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function disnan_(__din: interop.PointerConvertible): number;

declare function dlabad_(__small: interop.PointerConvertible, __large: interop.PointerConvertible): number;

declare function dlabrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function dlacn2_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __isgn: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible, __isave: interop.PointerConvertible): number;

declare function dlacon_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __isgn: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible): number;

declare function dlacpy_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function dladiv_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __p: interop.PointerConvertible, __q: interop.PointerConvertible): number;

declare function dlae2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible): number;

declare function dlaebz_(__ijob: interop.PointerConvertible, __nitmax: interop.PointerConvertible, __n: interop.PointerConvertible, __mmax: interop.PointerConvertible, __minp: interop.PointerConvertible, __nbmin: interop.PointerConvertible, __abstol: interop.PointerConvertible, __reltol: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __nval: interop.PointerConvertible, __ab: interop.PointerConvertible, __c__: interop.PointerConvertible, __mout: interop.PointerConvertible, __nab: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed0_(__icompq: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __qstore: interop.PointerConvertible, __ldqs: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed1_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed2_(__k: interop.PointerConvertible, __n: interop.PointerConvertible, __n1: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __z__: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __w: interop.PointerConvertible, __q2: interop.PointerConvertible, __indx: interop.PointerConvertible, __indxc: interop.PointerConvertible, __indxp: interop.PointerConvertible, __coltyp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed3_(__k: interop.PointerConvertible, __n: interop.PointerConvertible, __n1: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __q2: interop.PointerConvertible, __indx: interop.PointerConvertible, __ctot: interop.PointerConvertible, __w: interop.PointerConvertible, __s: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed4_(__n: interop.PointerConvertible, __i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlam: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed5_(__i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlam: interop.PointerConvertible): number;

declare function dlaed6_(__kniter: interop.PointerConvertible, __orgati: interop.PointerConvertible, __rho: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __finit: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed7_(__icompq: interop.PointerConvertible, __n: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __tlvls: interop.PointerConvertible, __curlvl: interop.PointerConvertible, __curpbm: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __qstore: interop.PointerConvertible, __qptr: interop.PointerConvertible, __prmptr: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed8_(__icompq: interop.PointerConvertible, __k: interop.PointerConvertible, __n: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __z__: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __q2: interop.PointerConvertible, __ldq2: interop.PointerConvertible, __w: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __indxp: interop.PointerConvertible, __indx: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaed9_(__k: interop.PointerConvertible, __kstart: interop.PointerConvertible, __kstop: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __w: interop.PointerConvertible, __s: interop.PointerConvertible, __lds: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaeda_(__n: interop.PointerConvertible, __tlvls: interop.PointerConvertible, __curlvl: interop.PointerConvertible, __curpbm: interop.PointerConvertible, __prmptr: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __q: interop.PointerConvertible, __qptr: interop.PointerConvertible, __z__: interop.PointerConvertible, __ztemp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaein_(__rightv: interop.PointerConvertible, __noinit: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vr: interop.PointerConvertible, __vi: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __eps3: interop.PointerConvertible, __smlnum: interop.PointerConvertible, __bignum: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaev2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible, __cs1: interop.PointerConvertible, __sn1: interop.PointerConvertible): number;

declare function dlaexc_(__wantq: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __j1: interop.PointerConvertible, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlag2_(__a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __safmin: interop.PointerConvertible, __scale1: interop.PointerConvertible, __scale2: interop.PointerConvertible, __wr1: interop.PointerConvertible, __wr2: interop.PointerConvertible, __wi: interop.PointerConvertible): number;

declare function dlag2s_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sa: interop.PointerConvertible, __ldsa: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlags2_(__upper: interop.PointerConvertible, __a1: interop.PointerConvertible, __a2: interop.PointerConvertible, __a3: interop.PointerConvertible, __b1: interop.PointerConvertible, __b2: interop.PointerConvertible, __b3: interop.PointerConvertible, __csu: interop.PointerConvertible, __snu: interop.PointerConvertible, __csv: interop.PointerConvertible, __snv: interop.PointerConvertible, __csq: interop.PointerConvertible, __snq: interop.PointerConvertible): number;

declare function dlagtf_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lambda: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __tol: interop.PointerConvertible, __d__: interop.PointerConvertible, __in: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlagtm_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __alpha: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __beta: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function dlagts_(__job: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __in: interop.PointerConvertible, __y: interop.PointerConvertible, __tol: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlagv2_(__a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __csl: interop.PointerConvertible, __snl: interop.PointerConvertible, __csr: interop.PointerConvertible, __snr: interop.PointerConvertible): number;

declare function dlahqr_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlahr2_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function dlahrd_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function dlaic1_(__job: interop.PointerConvertible, __j: interop.PointerConvertible, __x: interop.PointerConvertible, __sest: interop.PointerConvertible, __w: interop.PointerConvertible, __gamma: interop.PointerConvertible, __sestpr: interop.PointerConvertible, __s: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function dlaisnan_(__din1: interop.PointerConvertible, __din2: interop.PointerConvertible): number;

declare function dlaln2_(__ltrans: interop.PointerConvertible, __na: interop.PointerConvertible, __nw: interop.PointerConvertible, __smin: interop.PointerConvertible, __ca: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d1: interop.PointerConvertible, __d2: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __scale: interop.PointerConvertible, __xnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlals0_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __poles: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __k: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlalsa_(__icompq: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __k: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __poles: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __perm: interop.PointerConvertible, __givnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlalsd_(__uplo: string, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlamrg_(__n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __a: interop.PointerConvertible, __dtrd1: interop.PointerConvertible, __dtrd2: interop.PointerConvertible, __index: interop.PointerConvertible): number;

declare function dlaneg_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __lld: interop.PointerConvertible, __sigma: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __r__: interop.PointerConvertible): number;

declare function dlangb_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlange_(__norm: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlangt_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible): number;

declare function dlanhs_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlansb_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlansf_(__norm: string, __transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlansp_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlanst_(__norm: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible): number;

declare function dlansy_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlantb_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlantp_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlantr_(__norm: string, __uplo: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlanv2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __rt1r: interop.PointerConvertible, __rt1i: interop.PointerConvertible, __rt2r: interop.PointerConvertible, __rt2i: interop.PointerConvertible, __cs: interop.PointerConvertible, __sn: interop.PointerConvertible): number;

declare function dlapll_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __ssmin: interop.PointerConvertible): number;

declare function dlapmt_(__forwrd: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __k: interop.PointerConvertible): number;

declare function dlapy2_(__x: interop.PointerConvertible, __y: interop.PointerConvertible): number;

declare function dlapy3_(__x: interop.PointerConvertible, __y: interop.PointerConvertible, __z__: interop.PointerConvertible): number;

declare function dlaqgb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function dlaqge_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function dlaqp2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlaqps_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __auxv: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible): number;

declare function dlaqr0_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaqr1_(__n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __sr1: interop.PointerConvertible, __si1: interop.PointerConvertible, __sr2: interop.PointerConvertible, __si2: interop.PointerConvertible, __v: interop.PointerConvertible): number;

declare function dlaqr2_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sr: interop.PointerConvertible, __si: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function dlaqr3_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sr: interop.PointerConvertible, __si: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function dlaqr4_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlaqr5_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __kacc22: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nshfts: interop.PointerConvertible, __sr: interop.PointerConvertible, __si: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __nh: interop.PointerConvertible, __wh: interop.PointerConvertible, __ldwh: interop.PointerConvertible): number;

declare function dlaqsb_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function dlaqsp_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function dlaqsy_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function dlaqtr_(__ltran: interop.PointerConvertible, __l__CLPK_real: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __b: interop.PointerConvertible, __w: interop.PointerConvertible, __scale: interop.PointerConvertible, __x: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlar1v_(__n: interop.PointerConvertible, __b1: interop.PointerConvertible, __bn: interop.PointerConvertible, __lambda: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __ld: interop.PointerConvertible, __lld: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __gaptol: interop.PointerConvertible, __z__: interop.PointerConvertible, __wantnc: interop.PointerConvertible, __negcnt: interop.PointerConvertible, __ztz: interop.PointerConvertible, __mingma: interop.PointerConvertible, __r__: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __nrminv: interop.PointerConvertible, __resid: interop.PointerConvertible, __rqcorr: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlar2v_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __z__: interop.PointerConvertible, __incx: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function dlarf_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlarfb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function dlarfg_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function dlarfp_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function dlarft_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function dlarfx_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlargv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function dlarnv_(__idist: interop.PointerConvertible, __iseed: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible): number;

declare function dlarra_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __spltol: interop.PointerConvertible, __tnrm: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __isplit: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrb_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __lld: interop.PointerConvertible, __ifirst: interop.PointerConvertible, __ilast: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __offset: interop.PointerConvertible, __w: interop.PointerConvertible, __wgap: interop.PointerConvertible, __werr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __spdiam: interop.PointerConvertible, __twist: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrc_(__jobt: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __eigcnt: interop.PointerConvertible, __lcnt: interop.PointerConvertible, __rcnt: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrd_(__range: string, __order: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __gers: interop.PointerConvertible, __reltol: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wl: interop.PointerConvertible, __wu: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarre_(__range: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __spltol: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wgap: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __gers: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __ld: interop.PointerConvertible, __clstrt: interop.PointerConvertible, __clend: interop.PointerConvertible, __w: interop.PointerConvertible, __wgap: interop.PointerConvertible, __werr: interop.PointerConvertible, __spdiam: interop.PointerConvertible, __clgapl: interop.PointerConvertible, __clgapr: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __sigma: interop.PointerConvertible, __dplus: interop.PointerConvertible, __lplus: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrj_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e2: interop.PointerConvertible, __ifirst: interop.PointerConvertible, __ilast: interop.PointerConvertible, __rtol: interop.PointerConvertible, __offset: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __spdiam: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrk_(__n: interop.PointerConvertible, __iw: interop.PointerConvertible, __gl: interop.PointerConvertible, __gu: interop.PointerConvertible, __d__: interop.PointerConvertible, __e2: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __reltol: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrr_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarrv_(__n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __dol: interop.PointerConvertible, __dou: interop.PointerConvertible, __minrgp: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wgap: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __gers: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlarscl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function dlartg_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __cs: interop.PointerConvertible, __sn: interop.PointerConvertible, __r__: interop.PointerConvertible): number;

declare function dlartv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function dlaruv_(__iseed: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible): number;

declare function dlarz_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlarzb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function dlarzt_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function dlas2_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __h__: interop.PointerConvertible, __ssmin: interop.PointerConvertible, __ssmax: interop.PointerConvertible): number;

declare function dlascl_(__type__: string, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __cfrom: interop.PointerConvertible, __cto: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlascl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function dlasd0_(__n: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __iwork: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasd1_(__nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __idxq: interop.PointerConvertible, __iwork: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasd2_(__nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __u2: interop.PointerConvertible, __ldu2: interop.PointerConvertible, __vt2: interop.PointerConvertible, __ldvt2: interop.PointerConvertible, __idxp: interop.PointerConvertible, __idx: interop.PointerConvertible, __idxc: interop.PointerConvertible, __idxq: interop.PointerConvertible, __coltyp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasd3_(__nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __u2: interop.PointerConvertible, __ldu2: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __vt2: interop.PointerConvertible, __ldvt2: interop.PointerConvertible, __idxc: interop.PointerConvertible, __ctot: interop.PointerConvertible, __z__: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasd4_(__n: interop.PointerConvertible, __i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __sigma: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasd5_(__i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlasd6_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __vf: interop.PointerConvertible, __vl: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __idxq: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __poles: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __k: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasd7_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __zw: interop.PointerConvertible, __vf: interop.PointerConvertible, __vfw: interop.PointerConvertible, __vl: interop.PointerConvertible, __vlw: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __idx: interop.PointerConvertible, __idxp: interop.PointerConvertible, __idxq: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasd8_(__icompq: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __vf: interop.PointerConvertible, __vl: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __lddifr: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasda_(__icompq: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __k: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __poles: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __perm: interop.PointerConvertible, __givnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasdq_(__uplo: string, __sqre: interop.PointerConvertible, __n: interop.PointerConvertible, __ncvt: interop.PointerConvertible, __nru: interop.PointerConvertible, __ncc: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasdt_(__n: interop.PointerConvertible, __lvl: interop.PointerConvertible, __nd: interop.PointerConvertible, __inode: interop.PointerConvertible, __ndiml: interop.PointerConvertible, __ndimr: interop.PointerConvertible, __msub: interop.PointerConvertible): number;

declare function dlaset_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function dlasq1_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasq2_(__n: interop.PointerConvertible, __z__: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasq3_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __sigma: interop.PointerConvertible, __desig: interop.PointerConvertible, __qmax: interop.PointerConvertible, __nfail: interop.PointerConvertible, __iter: interop.PointerConvertible, __ndiv: interop.PointerConvertible, __ieee: interop.PointerConvertible, __ttype: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dn1: interop.PointerConvertible, __dn2: interop.PointerConvertible, __g: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function dlasq4_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __n0in: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dn1: interop.PointerConvertible, __dn2: interop.PointerConvertible, __tau: interop.PointerConvertible, __ttype: interop.PointerConvertible, __g: interop.PointerConvertible): number;

declare function dlasq5_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __tau: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dnm1: interop.PointerConvertible, __dnm2: interop.PointerConvertible, __ieee: interop.PointerConvertible): number;

declare function dlasq6_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dnm1: interop.PointerConvertible, __dnm2: interop.PointerConvertible): number;

declare function dlasr_(__side: string, __pivot: string, __direct: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function dlasrt_(__id: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlassq_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __scale: interop.PointerConvertible, __sumsq: interop.PointerConvertible): number;

declare function dlasv2_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __h__: interop.PointerConvertible, __ssmin: interop.PointerConvertible, __ssmax: interop.PointerConvertible, __snr: interop.PointerConvertible, __csr: interop.PointerConvertible, __snl: interop.PointerConvertible, __csl: interop.PointerConvertible): number;

declare function dlaswp_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __k1: interop.PointerConvertible, __k2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function dlasy2_(__ltranl: interop.PointerConvertible, __ltranr: interop.PointerConvertible, __isgn: interop.PointerConvertible, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __tl: interop.PointerConvertible, __ldtl: interop.PointerConvertible, __tr: interop.PointerConvertible, __ldtr: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __scale: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __xnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlasyf_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlat2s_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sa: interop.PointerConvertible, __ldsa: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlatbs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlatdf_(__ijob: interop.PointerConvertible, __n: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __rhs: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible): number;

declare function dlatps_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlatrd_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible): number;

declare function dlatrs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlatrz_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlatzm_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c1: interop.PointerConvertible, __c2: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function dlauu2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlauum_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dopgtr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dopmtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorg2l_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorg2r_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorgbr_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorghr_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorgl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorglq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorgql_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorgqr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorgr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorgrq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorgtr_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorm2l_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorm2r_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormbr_(__vect: string, __side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormhr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dorml2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormlq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormql_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormqr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormr2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormr3_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormrq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormrz_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dormtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbcon_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbequ_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbrfs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbstf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbsv_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbtf2_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbtrf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpbtrs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpftrf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpftri_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpftrs_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpocon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpoequ_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpoequb_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dporfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dposv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dposvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpotf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpotrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpotri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpotrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dppcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dppequ_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dppsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dppsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpstf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpstrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dptcon_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dptrfs_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dptsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dptsvx_(__fact: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpttrf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dpttrs_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dptts2_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function drscl_(__n: interop.PointerConvertible, __sa: interop.PointerConvertible, __sx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function dsbev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsbevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsbevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsbgst_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsbgv_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsbgvd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsbgvx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsbtrd_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsfrk_(__transr: string, __uplo: string, __trans: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __beta: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function dsgesv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __swork: interop.PointerConvertible, __iter: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspgst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspgv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspgvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspgvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsposv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __swork: interop.PointerConvertible, __iter: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dspsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsptrd_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstebz_(__range: string, __order: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __m: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __w: interop.PointerConvertible, __iblock: interop.PointerConvertible, __isplit: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstedc_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstegr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstein_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __iblock: interop.PointerConvertible, __isplit: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstemr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __nzc: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __tryrac: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsterf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstev_(__jobz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstevd_(__jobz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstevr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dstevx_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsycon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsyequb_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsyev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsyevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsyevr_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsyevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsygs2_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsygst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsygv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsygvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsygvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsyrfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsysv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsysvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsytd2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsytf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsytrd_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsytrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsytri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dsytrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtbcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtbrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtbtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtfsm_(__transr: string, __side: string, __uplo: string, __trans: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function dtftri_(__transr: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtfttp_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtfttr_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __s: interop.PointerConvertible, __lds: interop.PointerConvertible, __p: interop.PointerConvertible, __ldp: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgex2_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __j1: interop.PointerConvertible, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgexc_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgsen_(__ijob: interop.PointerConvertible, __wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __m: interop.PointerConvertible, __pl: interop.PointerConvertible, __pr: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgsja_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __ncycle: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __dif: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgsy2_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __iwork: interop.PointerConvertible, __pq: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtgsyl_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtpcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtprfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtptri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtptrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtpttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtpttr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrexc_(__compq: string, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrsen_(__job: string, __compq: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __m: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrsyl_(__trana: string, __tranb: string, __isgn: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrti2_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrtri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtrttp_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtzrqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dtzrzf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dzsum1_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function icmax1_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function ieeeck_(__ispec: interop.PointerConvertible, __zero: interop.PointerConvertible, __one: interop.PointerConvertible): number;

declare function ilaclc_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function ilaclr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function iladiag_(__diag: string): number;

declare function iladlc_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function iladlr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function ilaenv_(__ispec: interop.PointerConvertible, __name__: string, __opts: string, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __n3: interop.PointerConvertible, __n4: interop.PointerConvertible): number;

declare function ilaprec_(__prec: string): number;

declare function ilaslc_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function ilaslr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function ilatrans_(__trans: string): number;

declare function ilauplo_(__uplo: string): number;

declare function ilaver_(__vers_major__: interop.PointerConvertible, __vers_minor__: interop.PointerConvertible, __vers_patch__: interop.PointerConvertible): number;

declare function ilazlc_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function ilazlr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function iparmq_(__ispec: interop.PointerConvertible, __name__: string, __opts: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function izmax1_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function lsamen_(__n: interop.PointerConvertible, __ca: string, __cb: string): number;

declare function smaxloc_(__a: interop.PointerConvertible, __dimm: interop.PointerConvertible): number;

declare function sbdsdc_(__uplo: string, __compq: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __q: interop.PointerConvertible, __iq: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sbdsqr_(__uplo: string, __n: interop.PointerConvertible, __ncvt: interop.PointerConvertible, __nru: interop.PointerConvertible, __ncc: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function scsum1_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function sdisna_(__job: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __sep: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbbrd_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ncc: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __pt: interop.PointerConvertible, __ldpt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbcon_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbrfs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbsv_(__n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbtf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbtrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgbtrs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgebak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgebal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgebd2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgebrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgecon_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgees_(__jobvs: string, __sort: string, __select: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeesx_(__jobvs: string, __sort: string, __select: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgegs_(__jobvsl: string, __jobvsr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgegv_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgehd2_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgehrd_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgejsv_(__joba: string, __jobu: string, __jobv: string, __jobr: string, __jobt: string, __jobp: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sva: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgelq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgelqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgels_(__trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgelsd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgelss_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgelsx_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgelsy_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeql2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeqlf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeqp3_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeqpf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeqr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgeqrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgerfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgerq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgerqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgesc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rhs: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __scale: interop.PointerConvertible): number;

declare function sgesdd_(__jobz: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgesv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgesvd_(__jobu: string, __jobvt: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgesvj_(__joba: string, __jobu: string, __jobv: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sva: interop.PointerConvertible, __mv: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgesvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgetc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgetf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgetrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgetri_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgetrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggbak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggbal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgges_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggesx_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __bbnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggglm_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgghrd_(__compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgglse_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggqrf_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggrqf_(__m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggsvd_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sggsvp_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __iwork: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgsvj0_(__jobv: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __sva: interop.PointerConvertible, __mv: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __eps: interop.PointerConvertible, __sfmin: interop.PointerConvertible, __tol: interop.PointerConvertible, __nsweep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgsvj1_(__jobv: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __n1: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __sva: interop.PointerConvertible, __mv: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __eps: interop.PointerConvertible, __sfmin: interop.PointerConvertible, __tol: interop.PointerConvertible, __nsweep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgtcon_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgtrfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgtsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgtsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgttrf_(__n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgttrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sgtts2_(__itrans: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function shgeqz_(__job: string, __compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function shsein_(__side: string, __eigsrc: string, __initv: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __ifaill: interop.PointerConvertible, __ifailr: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function shseqr_(__job: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sisnan_(__sin__: interop.PointerConvertible): number;

declare function slabad_(__small: interop.PointerConvertible, __large: interop.PointerConvertible): number;

declare function slabrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function slacn2_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __isgn: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible, __isave: interop.PointerConvertible): number;

declare function slacon_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __isgn: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible): number;

declare function slacpy_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function sladiv_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __p: interop.PointerConvertible, __q: interop.PointerConvertible): number;

declare function slae2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible): number;

declare function slaebz_(__ijob: interop.PointerConvertible, __nitmax: interop.PointerConvertible, __n: interop.PointerConvertible, __mmax: interop.PointerConvertible, __minp: interop.PointerConvertible, __nbmin: interop.PointerConvertible, __abstol: interop.PointerConvertible, __reltol: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __nval: interop.PointerConvertible, __ab: interop.PointerConvertible, __c__: interop.PointerConvertible, __mout: interop.PointerConvertible, __nab: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed0_(__icompq: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __qstore: interop.PointerConvertible, __ldqs: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed1_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed2_(__k: interop.PointerConvertible, __n: interop.PointerConvertible, __n1: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __z__: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __w: interop.PointerConvertible, __q2: interop.PointerConvertible, __indx: interop.PointerConvertible, __indxc: interop.PointerConvertible, __indxp: interop.PointerConvertible, __coltyp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed3_(__k: interop.PointerConvertible, __n: interop.PointerConvertible, __n1: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __q2: interop.PointerConvertible, __indx: interop.PointerConvertible, __ctot: interop.PointerConvertible, __w: interop.PointerConvertible, __s: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed4_(__n: interop.PointerConvertible, __i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlam: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed5_(__i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlam: interop.PointerConvertible): number;

declare function slaed6_(__kniter: interop.PointerConvertible, __orgati: interop.PointerConvertible, __rho: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __finit: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed7_(__icompq: interop.PointerConvertible, __n: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __tlvls: interop.PointerConvertible, __curlvl: interop.PointerConvertible, __curpbm: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __qstore: interop.PointerConvertible, __qptr: interop.PointerConvertible, __prmptr: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed8_(__icompq: interop.PointerConvertible, __k: interop.PointerConvertible, __n: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __indxq: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __z__: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __q2: interop.PointerConvertible, __ldq2: interop.PointerConvertible, __w: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __indxp: interop.PointerConvertible, __indx: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaed9_(__k: interop.PointerConvertible, __kstart: interop.PointerConvertible, __kstop: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __rho: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __w: interop.PointerConvertible, __s: interop.PointerConvertible, __lds: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaeda_(__n: interop.PointerConvertible, __tlvls: interop.PointerConvertible, __curlvl: interop.PointerConvertible, __curpbm: interop.PointerConvertible, __prmptr: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __q: interop.PointerConvertible, __qptr: interop.PointerConvertible, __z__: interop.PointerConvertible, __ztemp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaein_(__rightv: interop.PointerConvertible, __noinit: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __vr: interop.PointerConvertible, __vi: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __eps3: interop.PointerConvertible, __smlnum: interop.PointerConvertible, __bignum: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaev2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible, __cs1: interop.PointerConvertible, __sn1: interop.PointerConvertible): number;

declare function slaexc_(__wantq: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __j1: interop.PointerConvertible, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slag2_(__a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __safmin: interop.PointerConvertible, __scale1: interop.PointerConvertible, __scale2: interop.PointerConvertible, __wr1: interop.PointerConvertible, __wr2: interop.PointerConvertible, __wi: interop.PointerConvertible): number;

declare function slag2d_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __sa: interop.PointerConvertible, __ldsa: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slags2_(__upper: interop.PointerConvertible, __a1: interop.PointerConvertible, __a2: interop.PointerConvertible, __a3: interop.PointerConvertible, __b1: interop.PointerConvertible, __b2: interop.PointerConvertible, __b3: interop.PointerConvertible, __csu: interop.PointerConvertible, __snu: interop.PointerConvertible, __csv: interop.PointerConvertible, __snv: interop.PointerConvertible, __csq: interop.PointerConvertible, __snq: interop.PointerConvertible): number;

declare function slagtf_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lambda: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __tol: interop.PointerConvertible, __d__: interop.PointerConvertible, __in: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slagtm_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __alpha: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __beta: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function slagts_(__job: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __in: interop.PointerConvertible, __y: interop.PointerConvertible, __tol: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slagv2_(__a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __csl: interop.PointerConvertible, __snl: interop.PointerConvertible, __csr: interop.PointerConvertible, __snr: interop.PointerConvertible): number;

declare function slahqr_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slahr2_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function slahrd_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function slaic1_(__job: interop.PointerConvertible, __j: interop.PointerConvertible, __x: interop.PointerConvertible, __sest: interop.PointerConvertible, __w: interop.PointerConvertible, __gamma: interop.PointerConvertible, __sestpr: interop.PointerConvertible, __s: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function slaisnan_(__sin1: interop.PointerConvertible, __sin2: interop.PointerConvertible): number;

declare function slaln2_(__ltrans: interop.PointerConvertible, __na: interop.PointerConvertible, __nw: interop.PointerConvertible, __smin: interop.PointerConvertible, __ca: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d1: interop.PointerConvertible, __d2: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __scale: interop.PointerConvertible, __xnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slals0_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __poles: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __k: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slalsa_(__icompq: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __k: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __poles: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __perm: interop.PointerConvertible, __givnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slalsd_(__uplo: string, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slamrg_(__n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __a: interop.PointerConvertible, __strd1: interop.PointerConvertible, __strd2: interop.PointerConvertible, __index: interop.PointerConvertible): number;

declare function slaneg_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __lld: interop.PointerConvertible, __sigma: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __r__: interop.PointerConvertible): number;

declare function slangb_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slange_(__norm: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slangt_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible): number;

declare function slanhs_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slansb_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slansf_(__norm: string, __transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slansp_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slanst_(__norm: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible): number;

declare function slansy_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slantb_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slantp_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slantr_(__norm: string, __uplo: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slanv2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __rt1r: interop.PointerConvertible, __rt1i: interop.PointerConvertible, __rt2r: interop.PointerConvertible, __rt2i: interop.PointerConvertible, __cs: interop.PointerConvertible, __sn: interop.PointerConvertible): number;

declare function slapll_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __ssmin: interop.PointerConvertible): number;

declare function slapmt_(__forwrd: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __k: interop.PointerConvertible): number;

declare function slapy2_(__x: interop.PointerConvertible, __y: interop.PointerConvertible): number;

declare function slapy3_(__x: interop.PointerConvertible, __y: interop.PointerConvertible, __z__: interop.PointerConvertible): number;

declare function slaqgb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function slaqge_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function slaqp2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slaqps_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __auxv: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible): number;

declare function slaqr0_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaqr1_(__n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __sr1: interop.PointerConvertible, __si1: interop.PointerConvertible, __sr2: interop.PointerConvertible, __si2: interop.PointerConvertible, __v: interop.PointerConvertible): number;

declare function slaqr2_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sr: interop.PointerConvertible, __si: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function slaqr3_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sr: interop.PointerConvertible, __si: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function slaqr4_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slaqr5_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __kacc22: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nshfts: interop.PointerConvertible, __sr: interop.PointerConvertible, __si: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __nh: interop.PointerConvertible, __wh: interop.PointerConvertible, __ldwh: interop.PointerConvertible): number;

declare function slaqsb_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function slaqsp_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function slaqsy_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function slaqtr_(__ltran: interop.PointerConvertible, __l__CLPK_real: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __b: interop.PointerConvertible, __w: interop.PointerConvertible, __scale: interop.PointerConvertible, __x: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slar1v_(__n: interop.PointerConvertible, __b1: interop.PointerConvertible, __bn: interop.PointerConvertible, __lambda: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __ld: interop.PointerConvertible, __lld: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __gaptol: interop.PointerConvertible, __z__: interop.PointerConvertible, __wantnc: interop.PointerConvertible, __negcnt: interop.PointerConvertible, __ztz: interop.PointerConvertible, __mingma: interop.PointerConvertible, __r__: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __nrminv: interop.PointerConvertible, __resid: interop.PointerConvertible, __rqcorr: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slar2v_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __z__: interop.PointerConvertible, __incx: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function slarf_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slarfb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function slarfg_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function slarfp_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function slarft_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function slarfx_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slargv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function slarnv_(__idist: interop.PointerConvertible, __iseed: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible): number;

declare function slarra_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __spltol: interop.PointerConvertible, __tnrm: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __isplit: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrb_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __lld: interop.PointerConvertible, __ifirst: interop.PointerConvertible, __ilast: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __offset: interop.PointerConvertible, __w: interop.PointerConvertible, __wgap: interop.PointerConvertible, __werr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __spdiam: interop.PointerConvertible, __twist: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrc_(__jobt: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __eigcnt: interop.PointerConvertible, __lcnt: interop.PointerConvertible, __rcnt: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrd_(__range: string, __order: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __gers: interop.PointerConvertible, __reltol: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wl: interop.PointerConvertible, __wu: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarre_(__range: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __e2: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __spltol: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wgap: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __gers: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __ld: interop.PointerConvertible, __clstrt: interop.PointerConvertible, __clend: interop.PointerConvertible, __w: interop.PointerConvertible, __wgap: interop.PointerConvertible, __werr: interop.PointerConvertible, __spdiam: interop.PointerConvertible, __clgapl: interop.PointerConvertible, __clgapr: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __sigma: interop.PointerConvertible, __dplus: interop.PointerConvertible, __lplus: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrj_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e2: interop.PointerConvertible, __ifirst: interop.PointerConvertible, __ilast: interop.PointerConvertible, __rtol: interop.PointerConvertible, __offset: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __spdiam: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrk_(__n: interop.PointerConvertible, __iw: interop.PointerConvertible, __gl: interop.PointerConvertible, __gu: interop.PointerConvertible, __d__: interop.PointerConvertible, __e2: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __reltol: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrr_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarrv_(__n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __dol: interop.PointerConvertible, __dou: interop.PointerConvertible, __minrgp: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wgap: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __gers: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slarscl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function slartg_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __cs: interop.PointerConvertible, __sn: interop.PointerConvertible, __r__: interop.PointerConvertible): number;

declare function slartv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function slaruv_(__iseed: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible): number;

declare function slarz_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slarzb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function slarzt_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function slas2_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __h__: interop.PointerConvertible, __ssmin: interop.PointerConvertible, __ssmax: interop.PointerConvertible): number;

declare function slascl_(__type__: string, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __cfrom: interop.PointerConvertible, __cto: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slascl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function slasd0_(__n: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __iwork: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasd1_(__nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __idxq: interop.PointerConvertible, __iwork: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasd2_(__nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __u2: interop.PointerConvertible, __ldu2: interop.PointerConvertible, __vt2: interop.PointerConvertible, __ldvt2: interop.PointerConvertible, __idxp: interop.PointerConvertible, __idx: interop.PointerConvertible, __idxc: interop.PointerConvertible, __idxq: interop.PointerConvertible, __coltyp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasd3_(__nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __u2: interop.PointerConvertible, __ldu2: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __vt2: interop.PointerConvertible, __ldvt2: interop.PointerConvertible, __idxc: interop.PointerConvertible, __ctot: interop.PointerConvertible, __z__: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasd4_(__n: interop.PointerConvertible, __i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __sigma: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasd5_(__i__: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __delta: interop.PointerConvertible, __rho: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slasd6_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __vf: interop.PointerConvertible, __vl: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __idxq: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __poles: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __k: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasd7_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __zw: interop.PointerConvertible, __vf: interop.PointerConvertible, __vfw: interop.PointerConvertible, __vl: interop.PointerConvertible, __vlw: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __idx: interop.PointerConvertible, __idxp: interop.PointerConvertible, __idxq: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasd8_(__icompq: interop.PointerConvertible, __k: interop.PointerConvertible, __d__: interop.PointerConvertible, __z__: interop.PointerConvertible, __vf: interop.PointerConvertible, __vl: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __lddifr: interop.PointerConvertible, __dsigma: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasda_(__icompq: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __sqre: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __k: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __poles: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __perm: interop.PointerConvertible, __givnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasdq_(__uplo: string, __sqre: interop.PointerConvertible, __n: interop.PointerConvertible, __ncvt: interop.PointerConvertible, __nru: interop.PointerConvertible, __ncc: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasdt_(__n: interop.PointerConvertible, __lvl: interop.PointerConvertible, __nd: interop.PointerConvertible, __inode: interop.PointerConvertible, __ndiml: interop.PointerConvertible, __ndimr: interop.PointerConvertible, __msub: interop.PointerConvertible): number;

declare function slaset_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function slasq1_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasq2_(__n: interop.PointerConvertible, __z__: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasq3_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __sigma: interop.PointerConvertible, __desig: interop.PointerConvertible, __qmax: interop.PointerConvertible, __nfail: interop.PointerConvertible, __iter: interop.PointerConvertible, __ndiv: interop.PointerConvertible, __ieee: interop.PointerConvertible, __ttype: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dn1: interop.PointerConvertible, __dn2: interop.PointerConvertible, __g: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function slasq4_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __n0in: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dn1: interop.PointerConvertible, __dn2: interop.PointerConvertible, __tau: interop.PointerConvertible, __ttype: interop.PointerConvertible, __g: interop.PointerConvertible): number;

declare function slasq5_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __tau: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dnm1: interop.PointerConvertible, __dnm2: interop.PointerConvertible, __ieee: interop.PointerConvertible): number;

declare function slasq6_(__i0: interop.PointerConvertible, __n0: interop.PointerConvertible, __z__: interop.PointerConvertible, __pp: interop.PointerConvertible, __dmin__: interop.PointerConvertible, __dmin1: interop.PointerConvertible, __dmin2: interop.PointerConvertible, __dn: interop.PointerConvertible, __dnm1: interop.PointerConvertible, __dnm2: interop.PointerConvertible): number;

declare function slasr_(__side: string, __pivot: string, __direct: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function slasrt_(__id: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slassq_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __scale: interop.PointerConvertible, __sumsq: interop.PointerConvertible): number;

declare function slasv2_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __h__: interop.PointerConvertible, __ssmin: interop.PointerConvertible, __ssmax: interop.PointerConvertible, __snr: interop.PointerConvertible, __csr: interop.PointerConvertible, __snl: interop.PointerConvertible, __csl: interop.PointerConvertible): number;

declare function slaswp_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __k1: interop.PointerConvertible, __k2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function slasy2_(__ltranl: interop.PointerConvertible, __ltranr: interop.PointerConvertible, __isgn: interop.PointerConvertible, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __tl: interop.PointerConvertible, __ldtl: interop.PointerConvertible, __tr: interop.PointerConvertible, __ldtr: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __scale: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __xnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slasyf_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slatbs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slatdf_(__ijob: interop.PointerConvertible, __n: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __rhs: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible): number;

declare function slatps_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slatrd_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible): number;

declare function slatrs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slatrz_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slatzm_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c1: interop.PointerConvertible, __c2: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function slauu2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function slauum_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sopgtr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sopmtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorg2l_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorg2r_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorgbr_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorghr_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorgl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorglq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorgql_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorgqr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorgr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorgrq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorgtr_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorm2l_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorm2r_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormbr_(__vect: string, __side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormhr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sorml2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormlq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormql_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormqr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormr2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormr3_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormrq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormrz_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sormtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbcon_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbequ_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbrfs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbstf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbsv_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbtf2_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbtrf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spbtrs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spftrf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spftri_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spftrs_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spocon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spoequ_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spoequb_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sporfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sposv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sposvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spotf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spotrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spotri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spotrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sppcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sppequ_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sppsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sppsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spstf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spstrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sptcon_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sptrfs_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sptsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sptsvx_(__fact: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spttrf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function spttrs_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sptts2_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function srscl_(__n: interop.PointerConvertible, __sa: interop.PointerConvertible, __sx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function ssbev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssbevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssbevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssbgst_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssbgv_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssbgvd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssbgvx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssbtrd_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssfrk_(__transr: string, __uplo: string, __trans: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __beta: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function sspcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspgst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspgv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspgvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspgvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sspsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssptrd_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstebz_(__range: string, __order: string, __n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __m: interop.PointerConvertible, __nsplit: interop.PointerConvertible, __w: interop.PointerConvertible, __iblock: interop.PointerConvertible, __isplit: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstedc_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstegr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstein_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __iblock: interop.PointerConvertible, __isplit: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstemr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __nzc: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __tryrac: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssterf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstev_(__jobz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstevd_(__jobz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstevr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function sstevx_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssycon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssyequb_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssyev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssyevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssyevr_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssyevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssygs2_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssygst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssygv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssygvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssygvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssyrfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssysv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssysvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssytd2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssytf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssytrd_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssytrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssytri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ssytrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stbcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stbrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stbtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stfsm_(__transr: string, __side: string, __uplo: string, __trans: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function stftri_(__transr: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stfttp_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stfttr_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __s: interop.PointerConvertible, __lds: interop.PointerConvertible, __p: interop.PointerConvertible, __ldp: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgex2_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __j1: interop.PointerConvertible, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgexc_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgsen_(__ijob: interop.PointerConvertible, __wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alphar: interop.PointerConvertible, __alphai: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __m: interop.PointerConvertible, __pl: interop.PointerConvertible, __pr: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgsja_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __ncycle: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __dif: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgsy2_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __iwork: interop.PointerConvertible, __pq: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stgsyl_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stpcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stprfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stptri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stptrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stpttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stpttr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strexc_(__compq: string, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strsen_(__job: string, __compq: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __wr: interop.PointerConvertible, __wi: interop.PointerConvertible, __m: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strsyl_(__trana: string, __tranb: string, __isgn: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strti2_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strtri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function strttp_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stzrqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function stzrzf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zbdsqr_(__uplo: string, __n: interop.PointerConvertible, __ncvt: interop.PointerConvertible, __nru: interop.PointerConvertible, __ncc: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zcgesv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __swork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iter: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zcposv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __swork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iter: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zdrscl_(__n: interop.PointerConvertible, __sa: interop.PointerConvertible, __sx: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function zgbbrd_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ncc: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __pt: interop.PointerConvertible, __ldpt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbcon_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbrfs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbsv_(__n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbtf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbtrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgbtrs_(__trans: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgebak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgebal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgebd2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgebrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgecon_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeequ_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeequb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgees_(__jobvs: string, __sort: string, __select: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __w: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeesx_(__jobvs: string, __sort: string, __select: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sdim: interop.PointerConvertible, __w: interop.PointerConvertible, __vs: interop.PointerConvertible, __ldvs: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __scale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgegs_(__jobvsl: string, __jobvsr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgegv_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgehd2_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgehrd_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgelq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgelqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgels_(__trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgelsd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgelss_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __s: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgelsx_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgelsy_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeql2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeqlf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeqp3_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeqpf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeqr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgeqrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgerfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgerq2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgerqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgesc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rhs: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __scale: interop.PointerConvertible): number;

declare function zgesdd_(__jobz: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgesv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgesvd_(__jobu: string, __jobvt: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __ldvt: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgesvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __equed: string, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgetc2_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgetf2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgetrf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgetri_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgetrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggbak_(__job: string, __side: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __m: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggbal_(__job: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgges_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggesx_(__jobvsl: string, __jobvsr: string, __sort: string, __selctg: () => number, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __sdim: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vsl: interop.PointerConvertible, __ldvsl: interop.PointerConvertible, __vsr: interop.PointerConvertible, __ldvsr: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggev_(__jobvl: string, __jobvr: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggevx_(__balanc: string, __jobvl: string, __jobvr: string, __sense: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __lscale: interop.PointerConvertible, __rscale: interop.PointerConvertible, __abnrm: interop.PointerConvertible, __bbnrm: interop.PointerConvertible, __rconde: interop.PointerConvertible, __rcondv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __bwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggglm_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgghrd_(__compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgglse_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggqrf_(__n: interop.PointerConvertible, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggrqf_(__m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __taua: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __taub: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggsvd_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __p: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zggsvp_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __iwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgtcon_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgtrfs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgtsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgtsvx_(__fact: string, __trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __dlf: interop.PointerConvertible, __df: interop.PointerConvertible, __duf: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgttrf_(__n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgttrs_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zgtts2_(__itrans: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __du2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function zhbev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhbevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhbevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhbgst_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhbgv_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhbgvd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhbgvx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ka: interop.PointerConvertible, __kb: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __bb: interop.PointerConvertible, __ldbb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhbtrd_(__vect: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhecon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zheequb_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zheev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zheevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zheevr_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zheevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhegs2_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhegst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhegv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhegvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __w: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhegvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zherfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhesv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhesvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhetd2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhetf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhetrd_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhetrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhetri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhetrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhfrk_(__transr: string, __uplo: string, __trans: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __beta: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function zhgeqz_(__job: string, __compq: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpev_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpevd_(__jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpevx_(__jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpgst_(__itype: interop.PointerConvertible, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpgv_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpgvd_(__itype: interop.PointerConvertible, __jobz: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpgvx_(__itype: interop.PointerConvertible, __jobz: string, __range: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __bp: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhpsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhptrd_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhsein_(__side: string, __eigsrc: string, __initv: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __ifaill: interop.PointerConvertible, __ifailr: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zhseqr_(__job: string, __compz: string, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlabrd_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __tauq: interop.PointerConvertible, __taup: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function zlacgv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function zlacn2_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible, __isave: interop.PointerConvertible): number;

declare function zlacon_(__n: interop.PointerConvertible, __v: interop.PointerConvertible, __x: interop.PointerConvertible, __est: interop.PointerConvertible, __kase: interop.PointerConvertible): number;

declare function zlacp2_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function zlacpy_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function zlacrm_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __rwork: interop.PointerConvertible): number;

declare function zlacrt_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible, __cy: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible): number;

declare function zladiv_(__ret_val: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible): void;

declare function zlaed0_(__qsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __qstore: interop.PointerConvertible, __ldqs: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlaed7_(__n: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __tlvls: interop.PointerConvertible, __curlvl: interop.PointerConvertible, __curpbm: interop.PointerConvertible, __d__: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __rho: interop.PointerConvertible, __indxq: interop.PointerConvertible, __qstore: interop.PointerConvertible, __qptr: interop.PointerConvertible, __prmptr: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlaed8_(__k: interop.PointerConvertible, __n: interop.PointerConvertible, __qsiz: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __d__: interop.PointerConvertible, __rho: interop.PointerConvertible, __cutpnt: interop.PointerConvertible, __z__: interop.PointerConvertible, __dlamda: interop.PointerConvertible, __q2: interop.PointerConvertible, __ldq2: interop.PointerConvertible, __w: interop.PointerConvertible, __indxp: interop.PointerConvertible, __indx: interop.PointerConvertible, __indxq: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlaein_(__rightv: interop.PointerConvertible, __noinit: interop.PointerConvertible, __n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __v: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __rwork: interop.PointerConvertible, __eps3: interop.PointerConvertible, __smlnum: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlaesy_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible, __evscal: interop.PointerConvertible, __cs1: interop.PointerConvertible, __sn1: interop.PointerConvertible): number;

declare function zlaev2_(__a: interop.PointerConvertible, __b: interop.PointerConvertible, __c__: interop.PointerConvertible, __rt1: interop.PointerConvertible, __rt2: interop.PointerConvertible, __cs1: interop.PointerConvertible, __sn1: interop.PointerConvertible): number;

declare function zlag2c_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sa: interop.PointerConvertible, __ldsa: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlags2_(__upper: interop.PointerConvertible, __a1: interop.PointerConvertible, __a2: interop.PointerConvertible, __a3: interop.PointerConvertible, __b1: interop.PointerConvertible, __b2: interop.PointerConvertible, __b3: interop.PointerConvertible, __csu: interop.PointerConvertible, __snu: interop.PointerConvertible, __csv: interop.PointerConvertible, __snv: interop.PointerConvertible, __csq: interop.PointerConvertible, __snq: interop.PointerConvertible): number;

declare function zlagtm_(__trans: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __alpha: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __beta: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function zlahef_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlahqr_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlahr2_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function zlahrd_(__n: interop.PointerConvertible, __k: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __y: interop.PointerConvertible, __ldy: interop.PointerConvertible): number;

declare function zlaic1_(__job: interop.PointerConvertible, __j: interop.PointerConvertible, __x: interop.PointerConvertible, __sest: interop.PointerConvertible, __w: interop.PointerConvertible, __gamma: interop.PointerConvertible, __sestpr: interop.PointerConvertible, __s: interop.PointerConvertible, __c__: interop.PointerConvertible): number;

declare function zlals0_(__icompq: interop.PointerConvertible, __nl: interop.PointerConvertible, __nr: interop.PointerConvertible, __sqre: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __perm: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __givnum: interop.PointerConvertible, __ldgnum: interop.PointerConvertible, __poles: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __k: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlalsa_(__icompq: interop.PointerConvertible, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __bx: interop.PointerConvertible, __ldbx: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __vt: interop.PointerConvertible, __k: interop.PointerConvertible, __difl: interop.PointerConvertible, __difr: interop.PointerConvertible, __z__: interop.PointerConvertible, __poles: interop.PointerConvertible, __givptr: interop.PointerConvertible, __givcol: interop.PointerConvertible, __ldgcol: interop.PointerConvertible, __perm: interop.PointerConvertible, __givnum: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlalsd_(__uplo: string, __smlsiz: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rank: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlangb_(__norm: string, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlange_(__norm: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlangt_(__norm: string, __n: interop.PointerConvertible, __dl: interop.PointerConvertible, __d__: interop.PointerConvertible, __du: interop.PointerConvertible): number;

declare function zlanhb_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlanhe_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlanhf_(__norm: string, __transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlanhp_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlanhs_(__norm: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlanht_(__norm: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible): number;

declare function zlansb_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlansp_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlansy_(__norm: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlantb_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlantp_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlantr_(__norm: string, __uplo: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlapll_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __ssmin: interop.PointerConvertible): number;

declare function zlapmt_(__forwrd: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __k: interop.PointerConvertible): number;

declare function zlaqgb_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlaqge_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __r__: interop.PointerConvertible, __c__: interop.PointerConvertible, __rowcnd: interop.PointerConvertible, __colcnd: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlaqhb_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlaqhe_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlaqhp_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlaqp2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlaqps_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __offset: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __jpvt: interop.PointerConvertible, __tau: interop.PointerConvertible, __vn1: interop.PointerConvertible, __vn2: interop.PointerConvertible, __auxv: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible): number;

declare function zlaqr0_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlaqr1_(__n: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __s1: interop.PointerConvertible, __s2: interop.PointerConvertible, __v: interop.PointerConvertible): number;

declare function zlaqr2_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sh: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function zlaqr3_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nw: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ns: interop.PointerConvertible, __nd: interop.PointerConvertible, __sh: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __nh: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible): number;

declare function zlaqr4_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __w: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlaqr5_(__wantt: interop.PointerConvertible, __wantz: interop.PointerConvertible, __kacc22: interop.PointerConvertible, __n: interop.PointerConvertible, __ktop: interop.PointerConvertible, __kbot: interop.PointerConvertible, __nshfts: interop.PointerConvertible, __s: interop.PointerConvertible, __h__: interop.PointerConvertible, __ldh: interop.PointerConvertible, __iloz: interop.PointerConvertible, __ihiz: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __nv: interop.PointerConvertible, __wv: interop.PointerConvertible, __ldwv: interop.PointerConvertible, __nh: interop.PointerConvertible, __wh: interop.PointerConvertible, __ldwh: interop.PointerConvertible): number;

declare function zlaqsb_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlaqsp_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlaqsy_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __equed: string): number;

declare function zlar1v_(__n: interop.PointerConvertible, __b1: interop.PointerConvertible, __bn: interop.PointerConvertible, __lambda: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __ld: interop.PointerConvertible, __lld: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __gaptol: interop.PointerConvertible, __z__: interop.PointerConvertible, __wantnc: interop.PointerConvertible, __negcnt: interop.PointerConvertible, __ztz: interop.PointerConvertible, __mingma: interop.PointerConvertible, __r__: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __nrminv: interop.PointerConvertible, __resid: interop.PointerConvertible, __rqcorr: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlar2v_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __y: interop.PointerConvertible, __z__: interop.PointerConvertible, __incx: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function zlarcm_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __rwork: interop.PointerConvertible): number;

declare function zlarf_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlarfb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function zlarfg_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function zlarfp_(__n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __tau: interop.PointerConvertible): number;

declare function zlarft_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function zlarfx_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlargv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function zlarnv_(__idist: interop.PointerConvertible, __iseed: interop.PointerConvertible, __n: interop.PointerConvertible, __x: interop.PointerConvertible): number;

declare function zlarrv_(__n: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __d__: interop.PointerConvertible, __l: interop.PointerConvertible, __pivmin: interop.PointerConvertible, __isplit: interop.PointerConvertible, __m: interop.PointerConvertible, __dol: interop.PointerConvertible, __dou: interop.PointerConvertible, __minrgp: interop.PointerConvertible, __rtol1: interop.PointerConvertible, __rtol2: interop.PointerConvertible, __w: interop.PointerConvertible, __werr: interop.PointerConvertible, __wgap: interop.PointerConvertible, __iblock: interop.PointerConvertible, __indexw: interop.PointerConvertible, __gers: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlarscl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function zlartg_(__f: interop.PointerConvertible, __g: interop.PointerConvertible, __cs: interop.PointerConvertible, __sn: interop.PointerConvertible, __r__: interop.PointerConvertible): number;

declare function zlartv_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __incc: interop.PointerConvertible): number;

declare function zlarz_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlarzb_(__side: string, __trans: string, __direct: string, __storev: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible): number;

declare function zlarzt_(__direct: string, __storev: string, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __tau: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible): number;

declare function zlascl_(__type__: string, __kl: interop.PointerConvertible, __ku: interop.PointerConvertible, __cfrom: interop.PointerConvertible, __cto: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlascl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible): number;

declare function zlaset_(__uplo: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function zlasr_(__side: string, __pivot: string, __direct: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function zlassq_(__n: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __scale: interop.PointerConvertible, __sumsq: interop.PointerConvertible): number;

declare function zlaswp_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __k1: interop.PointerConvertible, __k2: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __incx: interop.PointerConvertible): number;

declare function zlasyf_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __kb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlat2c_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __sa: interop.PointerConvertible, __ldsa: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlatbs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlatdf_(__ijob: interop.PointerConvertible, __n: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __rhs: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __jpiv: interop.PointerConvertible): number;

declare function zlatps_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlatrd_(__uplo: string, __n: interop.PointerConvertible, __nb: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __e: interop.PointerConvertible, __tau: interop.PointerConvertible, __w: interop.PointerConvertible, __ldw: interop.PointerConvertible): number;

declare function zlatrs_(__uplo: string, __trans: string, __diag: string, __normin: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __x: interop.PointerConvertible, __scale: interop.PointerConvertible, __cnorm: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlatrz_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlatzm_(__side: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __v: interop.PointerConvertible, __incv: interop.PointerConvertible, __tau: interop.PointerConvertible, __c1: interop.PointerConvertible, __c2: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible): number;

declare function zlauu2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zlauum_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbcon_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbequ_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbrfs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbstf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbsv_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __afb: interop.PointerConvertible, __ldafb: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbtf2_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbtrf_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpbtrs_(__uplo: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpftrf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpftri_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpftrs_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpocon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpoequ_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpoequb_(__n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zporfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zposv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zposvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpotf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpotrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpotri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpotrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zppcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zppequ_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zppsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zppsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __equed: string, __s: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpstf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpstrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __piv: interop.PointerConvertible, __rank: interop.PointerConvertible, __tol: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zptcon_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zptrfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zptsv_(__n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zptsvx_(__fact: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __df: interop.PointerConvertible, __ef: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpttrf_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zpttrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zptts2_(__iuplo: interop.PointerConvertible, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function zrot_(__n: interop.PointerConvertible, __cx: interop.PointerConvertible, __incx: interop.PointerConvertible, __cy: interop.PointerConvertible, __incy: interop.PointerConvertible, __c__: interop.PointerConvertible, __s: interop.PointerConvertible): number;

declare function zspcon_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zspmv_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __ap: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __beta: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible): number;

declare function zspr_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __ap: interop.PointerConvertible): number;

declare function zsprfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zspsv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zspsvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __afp: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsptrf_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsptri_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsptrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zstedc_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __lrwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zstegr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __abstol: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zstein_(__n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __iblock: interop.PointerConvertible, __isplit: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __iwork: interop.PointerConvertible, __ifail: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zstemr_(__jobz: string, __range: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __vl: interop.PointerConvertible, __vu: interop.PointerConvertible, __il: interop.PointerConvertible, __iu: interop.PointerConvertible, __m: interop.PointerConvertible, __w: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __nzc: interop.PointerConvertible, __isuppz: interop.PointerConvertible, __tryrac: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsteqr_(__compz: string, __n: interop.PointerConvertible, __d__: interop.PointerConvertible, __e: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsycon_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __anorm: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsyequb_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __s: interop.PointerConvertible, __scond: interop.PointerConvertible, __amax: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsymv_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __beta: interop.PointerConvertible, __y: interop.PointerConvertible, __incy: interop.PointerConvertible): number;

declare function zsyr_(__uplo: string, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __x: interop.PointerConvertible, __incx: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible): number;

declare function zsyrfs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsysv_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsysvx_(__fact: string, __uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __af: interop.PointerConvertible, __ldaf: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __rcond: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsytf2_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsytrf_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsytri_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zsytrs_(__uplo: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ipiv: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztbcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztbrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztbtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __kd: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ab: interop.PointerConvertible, __ldab: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztfsm_(__transr: string, __side: string, __uplo: string, __trans: string, __diag: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __alpha: interop.PointerConvertible, __a: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible): number;

declare function ztftri_(__transr: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztfttp_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztfttr_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __arf: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __s: interop.PointerConvertible, __lds: interop.PointerConvertible, __p: interop.PointerConvertible, __ldp: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgex2_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __j1: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgexc_(__wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgsen_(__ijob: interop.PointerConvertible, __wantq: interop.PointerConvertible, __wantz: interop.PointerConvertible, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __z__: interop.PointerConvertible, __ldz: interop.PointerConvertible, __m: interop.PointerConvertible, __pl: interop.PointerConvertible, __pr: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __liwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgsja_(__jobu: string, __jobv: string, __jobq: string, __m: interop.PointerConvertible, __p: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __tola: interop.PointerConvertible, __tolb: interop.PointerConvertible, __alpha: interop.PointerConvertible, __beta: interop.PointerConvertible, __u: interop.PointerConvertible, __ldu: interop.PointerConvertible, __v: interop.PointerConvertible, __ldv: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __ncycle: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __dif: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgsy2_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __rdsum: interop.PointerConvertible, __rdscal: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztgsyl_(__trans: string, __ijob: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __d__: interop.PointerConvertible, __ldd: interop.PointerConvertible, __e: interop.PointerConvertible, __lde: interop.PointerConvertible, __f: interop.PointerConvertible, __ldf: interop.PointerConvertible, __scale: interop.PointerConvertible, __dif: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __iwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztpcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztprfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztptri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztptrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __ap: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztpttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztpttr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrcon_(__norm: string, __uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __rcond: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrevc_(__side: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrexc_(__compq: string, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __ifst: interop.PointerConvertible, __ilst: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrrfs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __x: interop.PointerConvertible, __ldx: interop.PointerConvertible, __ferr: interop.PointerConvertible, __berr: interop.PointerConvertible, __work: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrsen_(__job: string, __compq: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __w: interop.PointerConvertible, __m: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrsna_(__job: string, __howmny: string, __select: interop.PointerConvertible, __n: interop.PointerConvertible, __t: interop.PointerConvertible, __ldt: interop.PointerConvertible, __vl: interop.PointerConvertible, __ldvl: interop.PointerConvertible, __vr: interop.PointerConvertible, __ldvr: interop.PointerConvertible, __s: interop.PointerConvertible, __sep: interop.PointerConvertible, __mm: interop.PointerConvertible, __m: interop.PointerConvertible, __work: interop.PointerConvertible, __ldwork: interop.PointerConvertible, __rwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrsyl_(__trana: string, __tranb: string, __isgn: interop.PointerConvertible, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __scale: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrti2_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrtri_(__uplo: string, __diag: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrtrs_(__uplo: string, __trans: string, __diag: string, __n: interop.PointerConvertible, __nrhs: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __b: interop.PointerConvertible, __ldb: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrttf_(__transr: string, __uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __arf: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztrttp_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __ap: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztzrqf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function ztzrzf_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zung2l_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zung2r_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zungbr_(__vect: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunghr_(__n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zungl2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunglq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zungql_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zungqr_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zungr2_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zungrq_(__m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zungtr_(__uplo: string, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunm2l_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunm2r_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmbr_(__vect: string, __side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmhr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ilo: interop.PointerConvertible, __ihi: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunml2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmlq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmql_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmqr_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmr2_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmr3_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmrq_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmrz_(__side: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __k: interop.PointerConvertible, __l: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zunmtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __a: interop.PointerConvertible, __lda: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __lwork: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zupgtr_(__uplo: string, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __q: interop.PointerConvertible, __ldq: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function zupmtr_(__side: string, __uplo: string, __trans: string, __m: interop.PointerConvertible, __n: interop.PointerConvertible, __ap: interop.PointerConvertible, __tau: interop.PointerConvertible, __c__: interop.PointerConvertible, __ldc: interop.PointerConvertible, __work: interop.PointerConvertible, __info: interop.PointerConvertible): number;

declare function dlamc1_(__beta: interop.PointerConvertible, __t: interop.PointerConvertible, __rnd: interop.PointerConvertible, __ieee1: interop.PointerConvertible): number;

declare function ilaver_(__vers_major__: interop.PointerConvertible, __vers_minor__: interop.PointerConvertible, __vers_patch__: interop.PointerConvertible): number;

declare function slamch_(__cmach: string): number;

declare function slamc1_(__beta: interop.PointerConvertible, __t: interop.PointerConvertible, __rnd: interop.PointerConvertible, __ieee1: interop.PointerConvertible): number;

declare function slamc2_(__beta: interop.PointerConvertible, __t: interop.PointerConvertible, __rnd: interop.PointerConvertible, __eps: interop.PointerConvertible, __emin: interop.PointerConvertible, __rmin: interop.PointerConvertible, __emax: interop.PointerConvertible, __rmax: interop.PointerConvertible): number;

declare function slamc3_(__a: interop.PointerConvertible, __b: interop.PointerConvertible): number;

declare function slamc4_(__emin: interop.PointerConvertible, __start: interop.PointerConvertible, __base: interop.PointerConvertible): number;

declare function slamc5_(__beta: interop.PointerConvertible, __p: interop.PointerConvertible, __emin: interop.PointerConvertible, __ieee: interop.PointerConvertible, __emax: interop.PointerConvertible, __rmax: interop.PointerConvertible): number;

declare function dlamch_(__cmach: string): number;

declare function dlamc1_(__beta: interop.PointerConvertible, __t: interop.PointerConvertible, __rnd: interop.PointerConvertible, __ieee1: interop.PointerConvertible): number;

declare function dlamc2_(__beta: interop.PointerConvertible, __t: interop.PointerConvertible, __rnd: interop.PointerConvertible, __eps: interop.PointerConvertible, __emin: interop.PointerConvertible, __rmin: interop.PointerConvertible, __emax: interop.PointerConvertible, __rmax: interop.PointerConvertible): number;

declare function dlamc3_(__a: interop.PointerConvertible, __b: interop.PointerConvertible): number;

declare function dlamc4_(__emin: interop.PointerConvertible, __start: interop.PointerConvertible, __base: interop.PointerConvertible): number;

declare function dlamc5_(__beta: interop.PointerConvertible, __p: interop.PointerConvertible, __emin: interop.PointerConvertible, __ieee: interop.PointerConvertible, __emax: interop.PointerConvertible, __rmax: interop.PointerConvertible): number;

declare function ilaenv_(__ispec: interop.PointerConvertible, __name__: string, __opts: string, __n1: interop.PointerConvertible, __n2: interop.PointerConvertible, __n3: interop.PointerConvertible, __n4: interop.PointerConvertible): number;

declare function la_retain(object: NSObject): NSObject;

declare function la_release(object: NSObject): void;

declare function la_add_attributes(object: NSObject, attributes: number): void;

declare function la_remove_attributes(object: NSObject, attributes: number): void;

declare function la_status(object: NSObject): number;

declare function la_matrix_from_float_buffer(buffer: interop.PointerConvertible, matrix_rows: number, matrix_cols: number, matrix_row_stride: number, matrix_hint: number, attributes: number): NSObject;

declare function la_matrix_from_double_buffer(buffer: interop.PointerConvertible, matrix_rows: number, matrix_cols: number, matrix_row_stride: number, matrix_hint: number, attributes: number): NSObject;

declare function la_matrix_from_float_buffer_nocopy(buffer: interop.PointerConvertible, matrix_rows: number, matrix_cols: number, matrix_row_stride: number, matrix_hint: number, deallocator: (p1: interop.PointerConvertible) => void, attributes: number): NSObject;

declare function la_matrix_from_double_buffer_nocopy(buffer: interop.PointerConvertible, matrix_rows: number, matrix_cols: number, matrix_row_stride: number, matrix_hint: number, deallocator: (p1: interop.PointerConvertible) => void, attributes: number): NSObject;

declare function la_matrix_to_float_buffer(buffer: interop.PointerConvertible, buffer_row_stride: number, matrix: NSObject): number;

declare function la_matrix_to_double_buffer(buffer: interop.PointerConvertible, buffer_row_stride: number, matrix: NSObject): number;

declare function la_matrix_rows(matrix: NSObject): number;

declare function la_matrix_cols(matrix: NSObject): number;

declare function la_matrix_slice(matrix: NSObject, matrix_first_row: number, matrix_first_col: number, matrix_row_stride: number, matrix_col_stride: number, slice_rows: number, slice_cols: number): NSObject;

declare function la_identity_matrix(matrix_size: number, scalar_type: number, attributes: number): NSObject;

declare function la_diagonal_matrix_from_vector(vector: NSObject, matrix_diagonal: number): NSObject;

declare function la_vector_from_matrix_row(matrix: NSObject, matrix_row: number): NSObject;

declare function la_vector_from_matrix_col(matrix: NSObject, matrix_col: number): NSObject;

declare function la_vector_from_matrix_diagonal(matrix: NSObject, matrix_diagonal: number): NSObject;

declare function la_vector_to_float_buffer(buffer: interop.PointerConvertible, buffer_stride: number, vector: NSObject): number;

declare function la_vector_to_double_buffer(buffer: interop.PointerConvertible, buffer_stride: number, vector: NSObject): number;

declare function la_vector_length(vector: NSObject): number;

declare function la_vector_slice(vector: NSObject, vector_first: number, vector_stride: number, slice_length: number): NSObject;

declare function la_splat_from_float(scalar_value: number, attributes: number): NSObject;

declare function la_splat_from_double(scalar_value: number, attributes: number): NSObject;

declare function la_splat_from_vector_element(vector: NSObject, vector_index: number): NSObject;

declare function la_splat_from_matrix_element(matrix: NSObject, matrix_row: number, matrix_col: number): NSObject;

declare function la_vector_from_splat(splat: NSObject, simd_length: number): NSObject;

declare function la_matrix_from_splat(splat: NSObject, matrix_rows: number, matrix_cols: number): NSObject;

declare function la_transpose(matrix: NSObject): NSObject;

declare function la_scale_with_float(matrix: NSObject, scalar: number): NSObject;

declare function la_scale_with_double(matrix: NSObject, scalar: number): NSObject;

declare function la_sum(obj_left: NSObject, obj_right: NSObject): NSObject;

declare function la_difference(obj_left: NSObject, obj_right: NSObject): NSObject;

declare function la_elementwise_product(obj_left: NSObject, obj_right: NSObject): NSObject;

declare function la_inner_product(vector_left: NSObject, vector_right: NSObject): NSObject;

declare function la_outer_product(vector_left: NSObject, vector_right: NSObject): NSObject;

declare function la_matrix_product(matrix_left: NSObject, matrix_right: NSObject): NSObject;

declare function la_solve(matrix_system: NSObject, obj_rhs: NSObject): NSObject;

declare function la_norm_as_float(vector: NSObject, vector_norm: number): number;

declare function la_norm_as_double(vector: NSObject, vector_norm: number): number;

declare function la_normalized_vector(vector: NSObject, vector_norm: number): NSObject;

declare function sparse_inner_product_dense_float(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): number;

declare function sparse_inner_product_dense_double(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): number;

declare function sparse_inner_product_dense_float_complex(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): unknown /* complex */;

declare function sparse_inner_product_dense_double_complex(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): unknown /* complex */;

declare function sparse_inner_product_sparse_float(nzx: number, nzy: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, indy: interop.PointerConvertible): number;

declare function sparse_inner_product_sparse_double(nzx: number, nzy: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, indy: interop.PointerConvertible): number;

declare function sparse_inner_product_sparse_float_complex(nzx: number, nzy: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, indy: interop.PointerConvertible): unknown /* complex */;

declare function sparse_inner_product_sparse_double_complex(nzx: number, nzy: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, indy: interop.PointerConvertible): unknown /* complex */;

declare function sparse_vector_add_with_scale_dense_float(nz: number, alpha: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function sparse_vector_add_with_scale_dense_double(nz: number, alpha: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function sparse_vector_add_with_scale_dense_float_complex(nz: number, alpha: unknown /* complex */, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function sparse_vector_add_with_scale_dense_double_complex(nz: number, alpha: unknown /* complex */, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function sparse_vector_norm_float(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_vector_norm_double(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_vector_norm_float_complex(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_vector_norm_double_complex(nz: number, x: interop.PointerConvertible, indx: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_matrix_vector_product_dense_float(transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: number, A: interop.PointerConvertible, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, incy: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_vector_product_dense_double(transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: number, A: interop.PointerConvertible, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, incy: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_vector_product_dense_float_complex(transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: unknown /* complex */, A: interop.PointerConvertible, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, incy: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_vector_product_dense_double_complex(transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: unknown /* complex */, A: interop.PointerConvertible, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, incy: number): interop.Enum<typeof sparse_status>;

declare function sparse_vector_triangular_solve_dense_float(transt: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: number, T: interop.PointerConvertible, x: interop.PointerConvertible, incx: number): interop.Enum<typeof sparse_status>;

declare function sparse_vector_triangular_solve_dense_double(transt: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: number, T: interop.PointerConvertible, x: interop.PointerConvertible, incx: number): interop.Enum<typeof sparse_status>;

declare function sparse_vector_triangular_solve_dense_float_complex(transt: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: unknown /* complex */, T: interop.PointerConvertible, x: interop.PointerConvertible, incx: number): interop.Enum<typeof sparse_status>;

declare function sparse_vector_triangular_solve_dense_double_complex(transt: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: unknown /* complex */, T: interop.PointerConvertible, x: interop.PointerConvertible, incx: number): interop.Enum<typeof sparse_status>;

declare function sparse_outer_product_dense_float(M: number, N: number, nz: number, alpha: number, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible, C: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_outer_product_dense_double(M: number, N: number, nz: number, alpha: number, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible, C: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_outer_product_dense_float_complex(M: number, N: number, nz: number, alpha: unknown /* complex */, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible, C: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_outer_product_dense_double_complex(M: number, N: number, nz: number, alpha: unknown /* complex */, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible, C: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_rows_float(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_rows_double(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_rows_float_complex(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_rows_double_complex(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_cols_float(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_cols_double(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_cols_float_complex(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_permute_cols_double_complex(A: interop.PointerConvertible, perm: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_elementwise_norm_float(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_elementwise_norm_double(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_elementwise_norm_float_complex(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_elementwise_norm_double_complex(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_operator_norm_float(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_operator_norm_double(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_operator_norm_float_complex(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_operator_norm_double_complex(A: interop.PointerConvertible, norm: interop.Enum<typeof sparse_norm>): number;

declare function sparse_matrix_trace_float(A: interop.PointerConvertible, offset: number): number;

declare function sparse_matrix_trace_double(A: interop.PointerConvertible, offset: number): number;

declare function sparse_matrix_trace_float_complex(A: interop.PointerConvertible, offset: number): unknown /* complex */;

declare function sparse_matrix_trace_double_complex(A: interop.PointerConvertible, offset: number): unknown /* complex */;

declare function sparse_matrix_product_dense_float(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, n: number, alpha: number, A: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_product_dense_double(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, n: number, alpha: number, A: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_product_dense_float_complex(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, n: number, alpha: unknown /* complex */, A: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_product_dense_double_complex(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, n: number, alpha: unknown /* complex */, A: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_product_sparse_float(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: number, A: interop.PointerConvertible, B: interop.PointerConvertible, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_product_sparse_double(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: number, A: interop.PointerConvertible, B: interop.PointerConvertible, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_product_sparse_float_complex(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: unknown /* complex */, A: interop.PointerConvertible, B: interop.PointerConvertible, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_product_sparse_double_complex(order: interop.Enum<typeof CBLAS_ORDER>, transa: interop.Enum<typeof CBLAS_TRANSPOSE>, alpha: unknown /* complex */, A: interop.PointerConvertible, B: interop.PointerConvertible, C: interop.PointerConvertible, ldc: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_triangular_solve_dense_float(order: interop.Enum<typeof CBLAS_ORDER>, transt: interop.Enum<typeof CBLAS_TRANSPOSE>, nrhs: number, alpha: number, T: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_triangular_solve_dense_double(order: interop.Enum<typeof CBLAS_ORDER>, transt: interop.Enum<typeof CBLAS_TRANSPOSE>, nrhs: number, alpha: number, T: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_triangular_solve_dense_float_complex(order: interop.Enum<typeof CBLAS_ORDER>, transt: interop.Enum<typeof CBLAS_TRANSPOSE>, nrhs: number, alpha: unknown /* complex */, T: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_triangular_solve_dense_double_complex(order: interop.Enum<typeof CBLAS_ORDER>, transt: interop.Enum<typeof CBLAS_TRANSPOSE>, nrhs: number, alpha: unknown /* complex */, T: interop.PointerConvertible, B: interop.PointerConvertible, ldb: number): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_create_float(M: number, N: number): interop.Pointer;

declare function sparse_matrix_create_double(M: number, N: number): interop.Pointer;

declare function sparse_matrix_create_float_complex(M: number, N: number): interop.Pointer;

declare function sparse_matrix_create_double_complex(M: number, N: number): interop.Pointer;

declare function sparse_insert_entry_float(A: interop.PointerConvertible, val: number, i: number, j: number): interop.Enum<typeof sparse_status>;

declare function sparse_insert_entry_double(A: interop.PointerConvertible, val: number, i: number, j: number): interop.Enum<typeof sparse_status>;

declare function sparse_insert_entry_float_complex(A: interop.PointerConvertible, val: unknown /* complex */, i: number, j: number): interop.Enum<typeof sparse_status>;

declare function sparse_insert_entry_double_complex(A: interop.PointerConvertible, val: unknown /* complex */, i: number, j: number): interop.Enum<typeof sparse_status>;

declare function sparse_insert_entries_float(A: interop.PointerConvertible, N: number, val: interop.PointerConvertible, indx: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_entries_double(A: interop.PointerConvertible, N: number, val: interop.PointerConvertible, indx: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_entries_float_complex(A: interop.PointerConvertible, N: number, val: interop.PointerConvertible, indx: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_entries_double_complex(A: interop.PointerConvertible, N: number, val: interop.PointerConvertible, indx: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_col_float(A: interop.PointerConvertible, j: number, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_col_double(A: interop.PointerConvertible, j: number, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_col_float_complex(A: interop.PointerConvertible, j: number, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_col_double_complex(A: interop.PointerConvertible, j: number, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_row_float(A: interop.PointerConvertible, i: number, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_row_double(A: interop.PointerConvertible, i: number, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_row_float_complex(A: interop.PointerConvertible, i: number, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_insert_row_double_complex(A: interop.PointerConvertible, i: number, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_row_float(A: interop.PointerConvertible, row: number, column_start: number, column_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_row_double(A: interop.PointerConvertible, row: number, column_start: number, column_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_row_float_complex(A: interop.PointerConvertible, row: number, column_start: number, column_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_row_double_complex(A: interop.PointerConvertible, row: number, column_start: number, column_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, jndx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_column_float(A: interop.PointerConvertible, column: number, row_start: number, row_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_column_double(A: interop.PointerConvertible, column: number, row_start: number, row_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_column_float_complex(A: interop.PointerConvertible, column: number, row_start: number, row_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_sparse_column_double_complex(A: interop.PointerConvertible, column: number, row_start: number, row_end: interop.PointerConvertible, nz: number, val: interop.PointerConvertible, indx: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_matrix_block_create_float(Mb: number, Nb: number, k: number, l: number): interop.Pointer;

declare function sparse_matrix_block_create_double(Mb: number, Nb: number, k: number, l: number): interop.Pointer;

declare function sparse_matrix_block_create_float_complex(Mb: number, Nb: number, k: number, l: number): interop.Pointer;

declare function sparse_matrix_block_create_double_complex(Mb: number, Nb: number, k: number, l: number): interop.Pointer;

declare function sparse_matrix_variable_block_create_float(Mb: number, Nb: number, K: interop.PointerConvertible, L: interop.PointerConvertible): interop.Pointer;

declare function sparse_matrix_variable_block_create_double(Mb: number, Nb: number, K: interop.PointerConvertible, L: interop.PointerConvertible): interop.Pointer;

declare function sparse_matrix_variable_block_create_float_complex(Mb: number, Nb: number, K: interop.PointerConvertible, L: interop.PointerConvertible): interop.Pointer;

declare function sparse_matrix_variable_block_create_double_complex(Mb: number, Nb: number, K: interop.PointerConvertible, L: interop.PointerConvertible): interop.Pointer;

declare function sparse_insert_block_float(A: interop.PointerConvertible, val: interop.PointerConvertible, row_stride: number, col_stride: number, bi: number, bj: number): interop.Enum<typeof sparse_status>;

declare function sparse_insert_block_double(A: interop.PointerConvertible, val: interop.PointerConvertible, row_stride: number, col_stride: number, bi: number, bj: number): interop.Enum<typeof sparse_status>;

declare function sparse_insert_block_float_complex(A: interop.PointerConvertible, val: interop.PointerConvertible, row_stride: number, col_stride: number, bi: number, bj: number): interop.Enum<typeof sparse_status>;

declare function sparse_insert_block_double_complex(A: interop.PointerConvertible, val: interop.PointerConvertible, row_stride: number, col_stride: number, bi: number, bj: number): interop.Enum<typeof sparse_status>;

declare function sparse_extract_block_float(A: interop.PointerConvertible, bi: number, bj: number, row_stride: number, col_stride: number, val: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_block_double(A: interop.PointerConvertible, bi: number, bj: number, row_stride: number, col_stride: number, val: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_block_float_complex(A: interop.PointerConvertible, bi: number, bj: number, row_stride: number, col_stride: number, val: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_extract_block_double_complex(A: interop.PointerConvertible, bi: number, bj: number, row_stride: number, col_stride: number, val: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_get_block_dimension_for_row(A: interop.PointerConvertible, i: number): number;

declare function sparse_get_block_dimension_for_col(A: interop.PointerConvertible, j: number): number;

declare function sparse_commit(A: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_get_matrix_property(A: interop.PointerConvertible, pname: interop.Enum<typeof sparse_matrix_property>): number;

declare function sparse_set_matrix_property(A: interop.PointerConvertible, pname: interop.Enum<typeof sparse_matrix_property>): interop.Enum<typeof sparse_status>;

declare function sparse_get_matrix_number_of_rows(A: interop.PointerConvertible): number;

declare function sparse_get_matrix_number_of_columns(A: interop.PointerConvertible): number;

declare function sparse_get_matrix_nonzero_count(A: interop.PointerConvertible): number;

declare function sparse_get_matrix_nonzero_count_for_row(A: interop.PointerConvertible, i: number): number;

declare function sparse_get_matrix_nonzero_count_for_column(A: interop.PointerConvertible, j: number): number;

declare function sparse_matrix_destroy(A: interop.PointerConvertible): interop.Enum<typeof sparse_status>;

declare function sparse_get_vector_nonzero_count_float(N: number, x: interop.PointerConvertible, incx: number): number;

declare function sparse_get_vector_nonzero_count_double(N: number, x: interop.PointerConvertible, incx: number): number;

declare function sparse_get_vector_nonzero_count_float_complex(N: number, x: interop.PointerConvertible, incx: number): number;

declare function sparse_get_vector_nonzero_count_double_complex(N: number, x: interop.PointerConvertible, incx: number): number;

declare function sparse_pack_vector_float(N: number, nz: number, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible): number;

declare function sparse_pack_vector_double(N: number, nz: number, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible): number;

declare function sparse_pack_vector_float_complex(N: number, nz: number, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible): number;

declare function sparse_pack_vector_double_complex(N: number, nz: number, x: interop.PointerConvertible, incx: number, y: interop.PointerConvertible, indy: interop.PointerConvertible): number;

declare function sparse_unpack_vector_float(N: number, nz: number, zero: boolean, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function sparse_unpack_vector_double(N: number, nz: number, zero: boolean, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function sparse_unpack_vector_float_complex(N: number, nz: number, zero: boolean, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function sparse_unpack_vector_double_complex(N: number, nz: number, zero: boolean, x: interop.PointerConvertible, indx: interop.PointerConvertible, y: interop.PointerConvertible, incy: number): void;

declare function SparseGetInertia(Factored: SparseOpaqueFactorization_Float, num_positive: interop.PointerConvertible, num_zero: interop.PointerConvertible, num_negative: interop.PointerConvertible): number;

declare function SparseGetInertia(Factored: SparseOpaqueFactorization_Double, num_positive: interop.PointerConvertible, num_zero: interop.PointerConvertible, num_negative: interop.PointerConvertible): number;

declare function SparseGetInertia(Factored: SparseOpaqueFactorization_Complex_Float, num_positive: interop.PointerConvertible, num_zero: interop.PointerConvertible, num_negative: interop.PointerConvertible): number;

declare function SparseGetInertia(Factored: SparseOpaqueFactorization_Complex_Double, num_positive: interop.PointerConvertible, num_zero: interop.PointerConvertible, num_negative: interop.PointerConvertible): number;

declare function _SparseSymbolicFactorSymmetric(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, options: interop.PointerConvertible): SparseOpaqueSymbolicFactorization;

declare function _SparseSymbolicFactorQR(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, options: interop.PointerConvertible): SparseOpaqueSymbolicFactorization;

declare function _SparseSymbolicFactorLU(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, options: interop.PointerConvertible): SparseOpaqueSymbolicFactorization;

declare function _SparseRetainSymbolic(symbolicFactor: interop.PointerConvertible): void;

declare function _SparseDestroyOpaqueSymbolic(toFree: interop.PointerConvertible): void;

declare function _SparseGetOptionsFromSymbolicFactor(factor: interop.PointerConvertible): SparseSymbolicFactorOptions;

declare function _SparseTrap(): void;

declare function _SparseFromKindComplex(K: interop.Enum<typeof SparseKind_t>): interop.Enum<typeof SparseKind_t>;

declare function _SparseToKindComplex(K: interop.Enum<typeof SparseKind_t>): interop.Enum<typeof SparseKind_t>;

declare function _SparseFromAttributeComplex(K: SparseAttributesComplex_t): SparseAttributes_t;

declare function _SparseToAttributeComplex(K: SparseAttributes_t): SparseAttributesComplex_t;

declare function _SparseFromStructureComplex(K: SparseMatrixStructureComplex): SparseMatrixStructure;

declare function _SparseToStructureComplex(K: SparseMatrixStructure): SparseMatrixStructureComplex;

declare function _SparseConvertFromCoordinate_Double(m: number, n: number, nBlock: number, blockSize: number, attributes: SparseAttributes_t, row: interop.PointerConvertible, col: interop.PointerConvertible, val: interop.PointerConvertible, storage: string, workspace: interop.PointerConvertible): SparseMatrix_Double;

declare function _SparseConvertFromOpaque_Double(matrix: interop.PointerConvertible): SparseMatrix_Double;

declare function _SparseNumericFactorSymmetric_Double(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Double;

declare function _SparseNumericFactorQR_Double(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Double;

declare function _SparseNumericFactorLU_Double(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Double;

declare function _SparseFactorSymmetric_Double(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Double;

declare function _SparseFactorQR_Double(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Double;

declare function _SparseFactorLU_Double(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Double;

declare function _SparseRefactorSymmetric_Double(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorQR_Double(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorLU_Double(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseUpdatePartialRefactorLU_Double(Opaque: interop.PointerConvertible, updateCount: number, updatedIndices: interop.PointerConvertible, newMatrix: SparseMatrix_Double): void;

declare function _SparseMultiplySubfactor_Double(Subfactor: interop.PointerConvertible, x: interop.PointerConvertible, y: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveSubfactor_Double(Subfactor: interop.PointerConvertible, b: interop.PointerConvertible, x: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveOpaque_Double(Factored: interop.PointerConvertible, RHS: interop.PointerConvertible, Soln: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseDestroyOpaqueNumeric_Double(toFree: interop.PointerConvertible): void;

declare function _SparseRetainNumeric_Double(numericFactor: interop.PointerConvertible): void;

declare function _SparseGetOptionsFromNumericFactor_Double(factor: interop.PointerConvertible): SparseNumericFactorOptions;

declare function _SparseGetWorkspaceRequired_Double(Subfactor: interop.Enum<typeof SparseSubfactor_t>, Factor: SparseOpaqueFactorization_Double, workStatic: interop.PointerConvertible, workPerRHS: interop.PointerConvertible): void;

declare function _SparseGetIterativeStateSize_Double(method: interop.PointerConvertible, preconditioner: boolean, m: number, n: number, nrhs: number): number;

declare function _SparseCGIterate_Double(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Double, p4: DenseMatrix_Double) => void): void;

declare function _SparseCGSolve_Double(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Double, p4: DenseMatrix_Double) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseGMRESIterate_Double(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Double, p4: DenseMatrix_Double) => void): void;

declare function _SparseGMRESSolve_Double(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Double, p4: DenseMatrix_Double) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseLSMRIterate_Double(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Double, p4: DenseMatrix_Double) => void): void;

declare function _SparseLSMRSolve_Double(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Double, p4: DenseMatrix_Double) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseCreatePreconditioner_Double(type: interop.Enum<typeof SparsePreconditioner_t>, A: interop.PointerConvertible): SparseOpaquePreconditioner_Double;

declare function _SparseReleaseOpaquePreconditioner_Double(toFree: interop.PointerConvertible): void;

declare function _SparseSpMV_Double(alpha: number, A: SparseMatrix_Double, x: DenseMatrix_Double, accumulate: boolean, y: DenseMatrix_Double): void;

declare function _SparseConvertFromCoordinate_Float(m: number, n: number, nBlock: number, blockSize: number, attributes: SparseAttributes_t, row: interop.PointerConvertible, col: interop.PointerConvertible, val: interop.PointerConvertible, storage: string, workspace: interop.PointerConvertible): SparseMatrix_Float;

declare function _SparseConvertFromOpaque_Float(matrix: interop.PointerConvertible): SparseMatrix_Float;

declare function _SparseNumericFactorSymmetric_Float(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Float;

declare function _SparseNumericFactorQR_Float(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Float;

declare function _SparseNumericFactorLU_Float(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Float;

declare function _SparseFactorSymmetric_Float(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Float;

declare function _SparseFactorQR_Float(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Float;

declare function _SparseFactorLU_Float(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Float;

declare function _SparseRefactorSymmetric_Float(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorQR_Float(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorLU_Float(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseUpdatePartialRefactorLU_Float(Opaque: interop.PointerConvertible, updateCount: number, updatedIndices: interop.PointerConvertible, newMatrix: SparseMatrix_Float): void;

declare function _SparseMultiplySubfactor_Float(Subfactor: interop.PointerConvertible, x: interop.PointerConvertible, y: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveSubfactor_Float(Subfactor: interop.PointerConvertible, b: interop.PointerConvertible, x: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveOpaque_Float(Factored: interop.PointerConvertible, RHS: interop.PointerConvertible, Soln: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseDestroyOpaqueNumeric_Float(toFree: interop.PointerConvertible): void;

declare function _SparseRetainNumeric_Float(numericFactor: interop.PointerConvertible): void;

declare function _SparseGetOptionsFromNumericFactor_Float(factor: interop.PointerConvertible): SparseNumericFactorOptions;

declare function _SparseGetWorkspaceRequired_Float(Subfactor: interop.Enum<typeof SparseSubfactor_t>, Factor: SparseOpaqueFactorization_Float, workStatic: interop.PointerConvertible, workPerRHS: interop.PointerConvertible): void;

declare function _SparseGetIterativeStateSize_Float(method: interop.PointerConvertible, preconditioner: boolean, m: number, n: number, nrhs: number): number;

declare function _SparseCGIterate_Float(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Float, p4: DenseMatrix_Float) => void): void;

declare function _SparseCGSolve_Float(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Float, p4: DenseMatrix_Float) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseGMRESIterate_Float(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Float, p4: DenseMatrix_Float) => void): void;

declare function _SparseGMRESSolve_Float(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Float, p4: DenseMatrix_Float) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseLSMRIterate_Float(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Float, p4: DenseMatrix_Float) => void): void;

declare function _SparseLSMRSolve_Float(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Float, p4: DenseMatrix_Float) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseCreatePreconditioner_Float(type: interop.Enum<typeof SparsePreconditioner_t>, A: interop.PointerConvertible): SparseOpaquePreconditioner_Float;

declare function _SparseReleaseOpaquePreconditioner_Float(toFree: interop.PointerConvertible): void;

declare function _SparseSpMV_Float(alpha: number, A: SparseMatrix_Float, x: DenseMatrix_Float, accumulate: boolean, y: DenseMatrix_Float): void;

declare function _SparseConvertFromCoordinate_Complex_Double(m: number, n: number, nBlock: number, blockSize: number, attributes: SparseAttributesComplex_t, row: interop.PointerConvertible, col: interop.PointerConvertible, val: interop.PointerConvertible, storage: string, workspace: interop.PointerConvertible): SparseMatrix_Complex_Double;

declare function _SparseConvertFromOpaque_Complex_Double(matrix: interop.PointerConvertible): SparseMatrix_Complex_Double;

declare function _SparseNumericFactorHermitian_Complex_Double(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Double;

declare function _SparseNumericFactorQR_Complex_Double(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Double;

declare function _SparseNumericFactorLU_Complex_Double(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Double;

declare function _SparseFactorHermitian_Complex_Double(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Double;

declare function _SparseFactorQR_Complex_Double(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Double;

declare function _SparseFactorLU_Complex_Double(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Double;

declare function _SparseRefactorHermitian_Complex_Double(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorQR_Complex_Double(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorLU_Complex_Double(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseUpdatePartialRefactorLU_Complex_Double(Opaque: interop.PointerConvertible, updateCount: number, updatedIndices: interop.PointerConvertible, newMatrix: SparseMatrix_Complex_Double): void;

declare function _SparseMultiplySubfactor_Complex_Double(Subfactor: interop.PointerConvertible, x: interop.PointerConvertible, y: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveSubfactor_Complex_Double(Subfactor: interop.PointerConvertible, b: interop.PointerConvertible, x: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveOpaque_Complex_Double(Factored: interop.PointerConvertible, RHS: interop.PointerConvertible, Soln: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseDestroyOpaqueNumeric_Complex_Double(toFree: interop.PointerConvertible): void;

declare function _SparseRetainNumeric_Complex_Double(numericFactor: interop.PointerConvertible): void;

declare function _SparseGetOptionsFromNumericFactor_Complex_Double(factor: interop.PointerConvertible): SparseNumericFactorOptions;

declare function _SparseGetWorkspaceRequired_Complex_Double(Subfactor: interop.Enum<typeof SparseSubfactor_t>, Factor: SparseOpaqueFactorization_Complex_Double, workStatic: interop.PointerConvertible, workPerRHS: interop.PointerConvertible): void;

declare function _SparseGetIterativeStateSize_Complex_Double(method: interop.PointerConvertible, preconditioner: boolean, m: number, n: number, nrhs: number): number;

declare function _SparseCGIterate_Complex_Double(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Double, p4: DenseMatrix_Complex_Double) => void): void;

declare function _SparseCGSolve_Complex_Double(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Double, p4: DenseMatrix_Complex_Double) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseGMRESIterate_Complex_Double(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Double, p4: DenseMatrix_Complex_Double) => void): void;

declare function _SparseGMRESSolve_Complex_Double(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Double, p4: DenseMatrix_Complex_Double) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseLSMRIterate_Complex_Double(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Double, p4: DenseMatrix_Complex_Double) => void): void;

declare function _SparseLSMRSolve_Complex_Double(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Double, p4: DenseMatrix_Complex_Double) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseCreatePreconditioner_Complex_Double(type: interop.Enum<typeof SparsePreconditioner_t>, A: interop.PointerConvertible): SparseOpaquePreconditioner_Complex_Double;

declare function _SparseReleaseOpaquePreconditioner_Complex_Double(toFree: interop.PointerConvertible): void;

declare function _SparseSpMV_Complex_Double(alpha: unknown /* complex */, A: SparseMatrix_Complex_Double, x: DenseMatrix_Complex_Double, accumulate: boolean, y: DenseMatrix_Complex_Double): void;

declare function _SparseConvertFromCoordinate_Complex_Float(m: number, n: number, nBlock: number, blockSize: number, attributes: SparseAttributesComplex_t, row: interop.PointerConvertible, col: interop.PointerConvertible, val: interop.PointerConvertible, storage: string, workspace: interop.PointerConvertible): SparseMatrix_Complex_Float;

declare function _SparseConvertFromOpaque_Complex_Float(matrix: interop.PointerConvertible): SparseMatrix_Complex_Float;

declare function _SparseNumericFactorHermitian_Complex_Float(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Float;

declare function _SparseNumericFactorQR_Complex_Float(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Float;

declare function _SparseNumericFactorLU_Complex_Float(symbolicFactor: interop.PointerConvertible, Matrix: interop.PointerConvertible, options: interop.PointerConvertible, factorStorage: interop.PointerConvertible, workspace: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Float;

declare function _SparseFactorHermitian_Complex_Float(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Float;

declare function _SparseFactorQR_Complex_Float(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Float;

declare function _SparseFactorLU_Complex_Float(factorType: interop.Enum<typeof SparseFactorization_t>, Matrix: interop.PointerConvertible, sfoptions: interop.PointerConvertible, nfoptions: interop.PointerConvertible): SparseOpaqueFactorization_Complex_Float;

declare function _SparseRefactorHermitian_Complex_Float(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorQR_Complex_Float(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseRefactorLU_Complex_Float(Matrix: interop.PointerConvertible, Factorization: interop.PointerConvertible, nfoptions: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseUpdatePartialRefactorLU_Complex_Float(Opaque: interop.PointerConvertible, updateCount: number, updatedIndices: interop.PointerConvertible, newMatrix: SparseMatrix_Complex_Float): void;

declare function _SparseMultiplySubfactor_Complex_Float(Subfactor: interop.PointerConvertible, x: interop.PointerConvertible, y: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveSubfactor_Complex_Float(Subfactor: interop.PointerConvertible, b: interop.PointerConvertible, x: interop.PointerConvertible, workspace: string): void;

declare function _SparseSolveOpaque_Complex_Float(Factored: interop.PointerConvertible, RHS: interop.PointerConvertible, Soln: interop.PointerConvertible, workspace: interop.PointerConvertible): void;

declare function _SparseDestroyOpaqueNumeric_Complex_Float(toFree: interop.PointerConvertible): void;

declare function _SparseRetainNumeric_Complex_Float(numericFactor: interop.PointerConvertible): void;

declare function _SparseGetOptionsFromNumericFactor_Complex_Float(factor: interop.PointerConvertible): SparseNumericFactorOptions;

declare function _SparseGetWorkspaceRequired_Complex_Float(Subfactor: interop.Enum<typeof SparseSubfactor_t>, Factor: SparseOpaqueFactorization_Complex_Float, workStatic: interop.PointerConvertible, workPerRHS: interop.PointerConvertible): void;

declare function _SparseGetIterativeStateSize_Complex_Float(method: interop.PointerConvertible, preconditioner: boolean, m: number, n: number, nrhs: number): number;

declare function _SparseCGIterate_Complex_Float(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Float, p4: DenseMatrix_Complex_Float) => void): void;

declare function _SparseCGSolve_Complex_Float(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Float, p4: DenseMatrix_Complex_Float) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseGMRESIterate_Complex_Float(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Float, p4: DenseMatrix_Complex_Float) => void): void;

declare function _SparseGMRESSolve_Complex_Float(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Float, p4: DenseMatrix_Complex_Float) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseLSMRIterate_Complex_Float(options: interop.PointerConvertible, iteration: number, state: string, converged: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, R: interop.PointerConvertible, Preconditioner: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Float, p4: DenseMatrix_Complex_Float) => void): void;

declare function _SparseLSMRSolve_Complex_Float(options: interop.PointerConvertible, X: interop.PointerConvertible, B: interop.PointerConvertible, ApplyOperator: (p1: boolean, p2: interop.Enum<typeof CBLAS_TRANSPOSE>, p3: DenseMatrix_Complex_Float, p4: DenseMatrix_Complex_Float) => void, Preconditioner: interop.PointerConvertible): interop.Enum<typeof SparseIterativeStatus_t>;

declare function _SparseCreatePreconditioner_Complex_Float(type: interop.Enum<typeof SparsePreconditioner_t>, A: interop.PointerConvertible): SparseOpaquePreconditioner_Complex_Float;

declare function _SparseReleaseOpaquePreconditioner_Complex_Float(toFree: interop.PointerConvertible): void;

declare function _SparseSpMV_Complex_Float(alpha: unknown /* complex */, A: SparseMatrix_Complex_Float, x: DenseMatrix_Complex_Float, accumulate: boolean, y: DenseMatrix_Complex_Float): void;

declare function quadrature_integrate(__f: interop.PointerConvertible, __a: number, __b: number, options: interop.PointerConvertible, status: interop.PointerConvertible, abs_error: interop.PointerConvertible, workspace_size: number, workspace: interop.PointerConvertible): number;

declare function BNNSGraphCompileOptionsMakeDefault(): bnns_graph_compile_options_t;

declare function BNNSGraphCompileOptionsDestroy(options: bnns_graph_compile_options_t): void;

declare function BNNSGraphCompileOptionsSetTargetSingleThread(options: bnns_graph_compile_options_t, value: boolean): void;

declare function BNNSGraphCompileOptionsGetTargetSingleThread(options: bnns_graph_compile_options_t): boolean;

declare function BNNSGraphCompileOptionsSetGenerateDebugInfo(options: bnns_graph_compile_options_t, value: boolean): void;

declare function BNNSGraphCompileOptionsGetGenerateDebugInfo(options: bnns_graph_compile_options_t): boolean;

declare function BNNSGraphCompileOptionsSetOptimizationPreference(options: bnns_graph_compile_options_t, preference: interop.Enum<typeof BNNSGraphOptimizationPreference>): void;

declare function BNNSGraphCompileOptionsGetOptimizationPreference(options: bnns_graph_compile_options_t): interop.Enum<typeof BNNSGraphOptimizationPreference>;

declare function BNNSGraphCompileOptionsSetMessageLogCallback(options: bnns_graph_compile_options_t, log_callback: (p1: interop.Enum<typeof BNNSGraphMessageLevel>, p2: string, p3: string, p4: interop.PointerConvertible) => void, additional_logging_arguments: interop.PointerConvertible): void;

declare function BNNSGraphCompileOptionsSetMessageLogMask(options: bnns_graph_compile_options_t, log_level_mask: number): void;

declare function BNNSGraphCompileOptionsSetOutputPath(options: bnns_graph_compile_options_t, path: string): void;

declare function BNNSGraphCompileOptionsGetOutputPath(options: bnns_graph_compile_options_t): string;

declare function BNNSGraphCompileOptionsSetOutputFD(options: bnns_graph_compile_options_t, fd: number): void;

declare function BNNSGraphCompileOptionsGetOutputFD(options: bnns_graph_compile_options_t): number;

declare function BNNSGraphCompileFromFile(filename: string, function$: string, options: bnns_graph_compile_options_t): bnns_graph_t;

declare function BNNSGraphGetInputCount(graph: bnns_graph_t, function$: string): number;

declare function BNNSGraphGetOutputCount(graph: bnns_graph_t, function$: string): number;

declare function BNNSGraphGetArgumentCount(graph: bnns_graph_t, function$: string): number;

declare function BNNSGraphGetFunctionCount(graph: bnns_graph_t): number;

declare function BNNSGraphGetInputNames(graph: bnns_graph_t, function$: string, input_names_count: number, input_names: interop.PointerConvertible): number;

declare function BNNSGraphGetOutputNames(graph: bnns_graph_t, function$: string, output_names_count: number, output_names: interop.PointerConvertible): number;

declare function BNNSGraphGetArgumentNames(graph: bnns_graph_t, function$: string, argument_names_count: number, argument_names: interop.PointerConvertible): number;

declare function BNNSGraphGetFunctionNames(graph: bnns_graph_t, function_name_count: number, function_names: interop.PointerConvertible): number;

declare function BNNSGraphGetArgumentIntents(graph: bnns_graph_t, function$: string, argument_intents_count: number, argument_intents: interop.PointerConvertible): number;

declare function BNNSGraphGetArgumentPosition(graph: bnns_graph_t, function$: string, argument: string): number;

declare function BNNSGraphGetArgumentInterleaveFactors(graph: bnns_graph_t, function$: string, argument_count: number, argument_interleave: interop.PointerConvertible, argument_interleave_counts: interop.PointerConvertible): number;

declare function BNNSGraphContextMake(graph: bnns_graph_t): bnns_graph_context_t;

declare function BNNSGraphContextMakeStreaming(graph: bnns_graph_t, function$: string, initial_states_count: number, initial_states: interop.PointerConvertible): bnns_graph_context_t;

declare function BNNSGraphContextDestroy(context: bnns_graph_context_t): void;

declare function BNNSGraphContextSetDynamicShapes(context: bnns_graph_context_t, function$: string, shapes_count: number, shapes: interop.PointerConvertible): number;

declare function BNNSGraphContextSetBatchSize(context: bnns_graph_context_t, function$: string, batch_size: number): number;

declare function BNNSGraphContextSetArgumentType(context: bnns_graph_context_t, argument_type: interop.Enum<typeof BNNSGraphArgumentType>): number;

declare function BNNSGraphContextEnableNanAndInfChecks(context: bnns_graph_context_t, enable_check_for_nans_inf: boolean): void;

declare function BNNSGraphContextSetStreamingAdvanceCount(context: bnns_graph_context_t, advance_count: number): number;

declare function BNNSGraphContextExecute(context: bnns_graph_context_t, function$: string, argument_count: number, arguments$: interop.PointerConvertible, workspace_size: number, workspace: string): number;

declare function BNNSGraphContextGetWorkspaceSize(context: bnns_graph_context_t, function$: string): number;

declare function BNNSGraphContextGetTensor(context: bnns_graph_context_t, function$: string, argument: string, fill_known_dynamic_shapes: boolean, tensor: interop.PointerConvertible): number;

declare function BNNSGraphTensorFillStrides(graph: bnns_graph_t, function$: string, argument: string, tensor: interop.PointerConvertible): number;

declare function BNNSGraphContextSetWorkspaceAllocationCallback(context: bnns_graph_context_t, realloc: (p1: interop.PointerConvertible, p2: number, p3: interop.PointerConvertible, p4: number, p5: number) => number, free: (p1: interop.PointerConvertible, p2: number) => void, user_memory_context_size: number, user_memory_context: interop.PointerConvertible): number;

declare function BNNSGraphContextSetOutputAllocationCallback(context: bnns_graph_context_t, realloc: (p1: interop.PointerConvertible, p2: number, p3: interop.PointerConvertible, p4: number, p5: number) => number, free: (p1: interop.PointerConvertible, p2: number) => void, user_memory_context_size: number, user_memory_context: interop.PointerConvertible): number;

declare function BNNSGraphContextSetMessageLogCallback(context: bnns_graph_context_t, log_callback_fn: (p1: interop.Enum<typeof BNNSGraphMessageLevel>, p2: string, p3: string, p4: interop.PointerConvertible) => void, additional_logging_arguments: interop.PointerConvertible): number;

declare function BNNSGraphContextSetMessageLogMask(context: bnns_graph_context_t, log_level_mask: number): number;

declare function BNNSFilterCreateLayerConvolution(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerTransposedConvolution(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerFullyConnected(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerPooling(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerActivation(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerLoss(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerNormalization(normType: interop.Enum<typeof BNNSFilterType>, layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerArithmetic(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerPermute(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerDropout(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerPadding(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerBroadcastMatMul(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerTensorContraction(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerGram(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerResize(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerMultiheadAttention(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerReduction(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateFusedLayer(number_of_fused_filters: number, filter_type: interop.PointerConvertible, layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateLayerEmbedding(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterApply(filter: interop.PointerConvertible, in: interop.PointerConvertible, out: interop.PointerConvertible): number;

declare function BNNSFilterApplyBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, out: interop.PointerConvertible, out_stride: number): number;

declare function BNNSPoolingFilterApplyBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, out: interop.PointerConvertible, out_stride: number, indices: interop.PointerConvertible, idx_stride: number): number;

declare function BNNSPoolingFilterApplyBatchEx(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, out: interop.PointerConvertible, out_stride: number, indices_data_type: interop.Enum<typeof BNNSDataType>, indices: interop.PointerConvertible, idx_stride: number): number;

declare function BNNSFilterApplyTwoInput(filter: interop.PointerConvertible, inA: interop.PointerConvertible, inB: interop.PointerConvertible, out: interop.PointerConvertible): number;

declare function BNNSFilterApplyTwoInputBatch(filter: interop.PointerConvertible, batch_size: number, inA: interop.PointerConvertible, inA_stride: number, inB: interop.PointerConvertible, inB_stride: number, out: interop.PointerConvertible, out_stride: number): number;

declare function BNNSNormalizationFilterApplyBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, out: interop.PointerConvertible, out_stride: number, training: boolean): number;

declare function BNNSFusedFilterApplyBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, out: interop.PointerConvertible, out_stride: number, training: boolean): number;

declare function BNNSFusedFilterApplyMultiInputBatch(filter: interop.PointerConvertible, batch_size: number, number_of_inputs: number, in: interop.PointerConvertible, in_stride: interop.PointerConvertible, out: interop.PointerConvertible, out_stride: number, training: boolean): number;

declare function BNNSArithmeticFilterApplyBatch(filter: interop.PointerConvertible, batch_size: number, number_of_inputs: number, in: interop.PointerConvertible, in_stride: interop.PointerConvertible, out: interop.PointerConvertible, out_stride: number): number;

declare function BNNSApplyMultiheadAttention(F: interop.PointerConvertible, batch_size: number, query: interop.PointerConvertible, query_stride: number, key: interop.PointerConvertible, key_stride: number, key_mask: interop.PointerConvertible, key_mask_stride: number, value: interop.PointerConvertible, value_stride: number, output: interop.PointerConvertible, output_stride: number, add_to_attention: interop.PointerConvertible, backprop_cache_size: interop.PointerConvertible, backprop_cache: interop.PointerConvertible, workspace_size: interop.PointerConvertible, workspace: interop.PointerConvertible): number;

declare function BNNSDirectApplyQuantizer(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible, batch_size: number, input_stride: number, output_stride: number): number;

declare function BNNSFilterDestroy(filter: interop.PointerConvertible): void;

declare function BNNSOptimizerStep(function$: interop.Enum<typeof BNNSOptimizerFunction>, OptimizerAlgFields: interop.PointerConvertible, number_of_parameters: number, parameters: interop.PointerConvertible, gradients: interop.PointerConvertible, accumulators: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSClipByValue(dest: interop.PointerConvertible, src: interop.PointerConvertible, min_val: number, max_val: number): number;

declare function BNNSClipByNorm(dest: interop.PointerConvertible, src: interop.PointerConvertible, max_norm: number, axis_flags: number): number;

declare function BNNSClipByGlobalNorm(dest: interop.PointerConvertible, src: interop.PointerConvertible, count: number, max_norm: number, use_norm: number): number;

declare function BNNSComputeNorm(dest: interop.PointerConvertible, src: interop.PointerConvertible, norm_type: interop.Enum<typeof BNNSNormType>, axis_flags: number): number;

declare function BNNSComputeNormBackward(in: interop.PointerConvertible, in_delta: interop.PointerConvertible, out: interop.PointerConvertible, out_delta: interop.PointerConvertible, norm_type: interop.Enum<typeof BNNSNormType>, axis_flags: number): number;

declare function BNNSFilterApplyBackwardBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, in_delta: interop.PointerConvertible, in_delta_stride: number, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number, weights_delta: interop.PointerConvertible, bias_delta: interop.PointerConvertible): number;

declare function BNNSPoolingFilterApplyBackwardBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, in_delta: interop.PointerConvertible, in_delta_stride: number, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number, bias_delta: interop.PointerConvertible, indices: interop.PointerConvertible, idx_stride: number): number;

declare function BNNSPoolingFilterApplyBackwardBatchEx(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, in_delta: interop.PointerConvertible, in_delta_stride: number, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number, bias_delta: interop.PointerConvertible, indices_data_type: interop.Enum<typeof BNNSDataType>, indices: interop.PointerConvertible, idx_stride: number): number;

declare function BNNSFilterApplyBackwardTwoInputBatch(filter: interop.PointerConvertible, batch_size: number, inA: interop.PointerConvertible, inA_stride: number, inA_delta: interop.PointerConvertible, inA_delta_stride: number, inB: interop.PointerConvertible, inB_stride: number, inB_delta: interop.PointerConvertible, inB_delta_stride: number, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number, weights_delta: interop.PointerConvertible, bias_delta: interop.PointerConvertible): number;

declare function BNNSNormalizationFilterApplyBackwardBatch(filter: interop.PointerConvertible, batch_size: number, in_delta: interop.PointerConvertible, in_delta_stride: number, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number, beta_delta: interop.PointerConvertible, gamma_delta: interop.PointerConvertible): number;

declare function BNNSFusedFilterApplyBackwardBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, in_delta: interop.PointerConvertible, in_delta_stride: number, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number, delta_parameters: interop.PointerConvertible): number;

declare function BNNSFusedFilterApplyBackwardMultiInputBatch(filter: interop.PointerConvertible, batch_size: number, number_of_inputs: number, in: interop.PointerConvertible, in_stride: interop.PointerConvertible, in_delta: interop.PointerConvertible, in_delta_stride: interop.PointerConvertible, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number, delta_parameters: interop.PointerConvertible): number;

declare function BNNSArithmeticFilterApplyBackwardBatch(filter: interop.PointerConvertible, batch_size: number, number_of_inputs: number, in: interop.PointerConvertible, in_stride: interop.PointerConvertible, in_delta: interop.PointerConvertible, in_delta_stride: interop.PointerConvertible, out: interop.PointerConvertible, out_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number): number;

declare function BNNSPermuteFilterApplyBackwardBatch(filter: interop.PointerConvertible, batch_size: number, in_delta: interop.PointerConvertible, in_delta_stride: number, out_delta: interop.PointerConvertible, out_delta_stride: number): number;

declare function BNNSLossFilterApplyBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, labels: interop.PointerConvertible, labels_stride: number, weights: interop.PointerConvertible, weights_size: number, out: interop.PointerConvertible, in_delta: interop.PointerConvertible, in_delta_stride: number): number;

declare function BNNSLossFilterApplyBackwardBatch(filter: interop.PointerConvertible, batch_size: number, in: interop.PointerConvertible, in_stride: number, in_delta: interop.PointerConvertible, in_delta_stride: number, labels: interop.PointerConvertible, labels_stride: number, weights: interop.PointerConvertible, weights_size: number, out_delta: interop.PointerConvertible, out_delta_stride: number): number;

declare function BNNSApplyMultiheadAttentionBackward(F: interop.PointerConvertible, batch_size: number, query: interop.PointerConvertible, query_stride: number, query_param_delta: interop.PointerConvertible, key: interop.PointerConvertible, key_stride: number, key_mask: interop.PointerConvertible, key_mask_stride: number, key_param_delta: interop.PointerConvertible, value: interop.PointerConvertible, value_stride: number, value_param_delta: interop.PointerConvertible, add_to_attention: interop.PointerConvertible, key_attn_bias_delta: interop.PointerConvertible, value_attn_bias_delta: interop.PointerConvertible, output: interop.PointerConvertible, output_stride: number, output_param_delta: interop.PointerConvertible, backprop_cache_size: number, backprop_cache: interop.PointerConvertible, workspace_size: interop.PointerConvertible, workspace: interop.PointerConvertible): number;

declare function BNNSComputeLSTMTrainingCacheCapacity(layer_params: interop.PointerConvertible): number;

declare function BNNSDirectApplyLSTMBatchTrainingCaching(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible, training_cache_ptr: interop.PointerConvertible, training_cache_capacity: number): number;

declare function BNNSDirectApplyActivationBatch(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible, batch_size: number, in_stride: number, out_stride: number): number;

declare function BNNSCopy(dest: interop.PointerConvertible, src: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSMatMulWorkspaceSize(transA: boolean, transB: boolean, alpha: number, inputA: interop.PointerConvertible, inputB: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSMatMul(transA: boolean, transB: boolean, alpha: number, inputA: interop.PointerConvertible, inputB: interop.PointerConvertible, output: interop.PointerConvertible, workspace: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSDirectApplyBroadcastMatMul(transA: boolean, transB: boolean, alpha: number, inputA: interop.PointerConvertible, inputB: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): void;

declare function BNNSTranspose(dest: interop.PointerConvertible, src: interop.PointerConvertible, axis0: number, axis1: number, filter_params: interop.PointerConvertible): number;

declare function BNNSDirectApplyReduction(layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSCompareTensor(in0: interop.PointerConvertible, in1: interop.PointerConvertible, op: interop.Enum<typeof BNNSRelationalOperator>, out: interop.PointerConvertible): number;

declare function BNNSTile(input: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSDirectApplyTopK(K: number, axis: number, batch_size: number, input: interop.PointerConvertible, input_batch_stride: number, best_values: interop.PointerConvertible, best_values_batch_stride: number, best_indices: interop.PointerConvertible, best_indices_batch_stride: number, filter_params: interop.PointerConvertible): number;

declare function BNNSDirectApplyInTopK(K: number, axis: number, batch_size: number, input: interop.PointerConvertible, input_batch_stride: number, test_indices: interop.PointerConvertible, test_indices_batch_stride: number, output: interop.PointerConvertible, output_batch_stride: number, filter_params: interop.PointerConvertible): number;

declare function BNNSGather(axis: number, input: interop.PointerConvertible, indices: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSScatter(axis: number, op: interop.Enum<typeof BNNSReduceFunction>, input: interop.PointerConvertible, indices: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSGatherND(input: interop.PointerConvertible, indices: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSScatterND(op: interop.Enum<typeof BNNSReduceFunction>, input: interop.PointerConvertible, indices: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSShuffle(type: interop.Enum<typeof BNNSShuffleType>, input: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSBandPart(num_lower: number, num_upper: number, input: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSCropResize(layer_params: interop.PointerConvertible, input: interop.PointerConvertible, roi: interop.PointerConvertible, output: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSDirectApplyLSTMBatchBackward(layer_params: interop.PointerConvertible, layer_delta_params: interop.PointerConvertible, filter_params: interop.PointerConvertible, training_cache_ptr: interop.PointerConvertible, training_cache_capacity: number): number;

declare function BNNSTileBackward(in_delta: interop.PointerConvertible, out_delta: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSCropResizeBackward(layer_params: interop.PointerConvertible, in_delta: interop.PointerConvertible, roi: interop.PointerConvertible, out_delta: interop.PointerConvertible, filter_params: interop.PointerConvertible): number;

declare function BNNSGetPointer(filter: interop.PointerConvertible, target: interop.Enum<typeof BNNSPointerSpecifier>): BNNSNDArrayDescriptor;

declare function BNNSNDArrayGetDataSize(array: interop.PointerConvertible): number;

declare function BNNSTensorGetAllocationSize(tensor: interop.PointerConvertible): number;

declare function BNNSDataLayoutGetRank(layout: interop.Enum<typeof BNNSDataLayout>): number;

declare function BNNSNDArrayFullyConnectedSparsifySparseCOO(in_dense_shape: interop.PointerConvertible, in_indices: interop.PointerConvertible, in_values: interop.PointerConvertible, out: interop.PointerConvertible, sparse_params: interop.PointerConvertible, batch_size: number, workspace: interop.PointerConvertible, workspace_size: number, filter_params: interop.PointerConvertible): number;

declare function BNNSNDArrayFullyConnectedSparsifySparseCSR(in_dense_shape: interop.PointerConvertible, in_column_indices: interop.PointerConvertible, in_row_starts: interop.PointerConvertible, in_values: interop.PointerConvertible, out: interop.PointerConvertible, sparse_params: interop.PointerConvertible, batch_size: number, workspace: interop.PointerConvertible, workspace_size: number, filter_params: interop.PointerConvertible): number;

declare function BNNSCreateRandomGenerator(method: interop.Enum<typeof BNNSRandomGeneratorMethod>, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSCreateRandomGeneratorWithSeed(method: interop.Enum<typeof BNNSRandomGeneratorMethod>, seed: number, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSDestroyRandomGenerator(generator: interop.PointerConvertible): void;

declare function BNNSRandomGeneratorStateSize(generator: interop.PointerConvertible): number;

declare function BNNSRandomGeneratorGetState(generator: interop.PointerConvertible, state_size: number, state: interop.PointerConvertible): number;

declare function BNNSRandomGeneratorSetState(generator: interop.PointerConvertible, state_size: number, state: interop.PointerConvertible): number;

declare function BNNSRandomFillUniformFloat(generator: interop.PointerConvertible, desc: interop.PointerConvertible, a: number, b: number): number;

declare function BNNSRandomFillUniformInt(generator: interop.PointerConvertible, desc: interop.PointerConvertible, a: number, b: number): number;

declare function BNNSRandomFillNormalFloat(generator: interop.PointerConvertible, desc: interop.PointerConvertible, mean: number, stddev: number): number;

declare function BNNSRandomFillCategoricalFloat(generator: interop.PointerConvertible, desc: interop.PointerConvertible, probabilities: interop.PointerConvertible, log_probabilities: boolean): number;

declare function BNNSCreateNearestNeighbors(max_n_samples: number, n_features: number, n_neighbors: number, data_type: interop.Enum<typeof BNNSDataType>, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSDestroyNearestNeighbors(knn: interop.PointerConvertible): void;

declare function BNNSNearestNeighborsLoad(knn: interop.PointerConvertible, n_new_samples: number, data_ptr: interop.PointerConvertible): number;

declare function BNNSNearestNeighborsGetInfo(knn: interop.PointerConvertible, sample_number: number, indices: interop.PointerConvertible, distances: interop.PointerConvertible): number;

declare function BNNSFilterCreateConvolutionLayer(in_desc: interop.PointerConvertible, out_desc: interop.PointerConvertible, layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateFullyConnectedLayer(in_desc: interop.PointerConvertible, out_desc: interop.PointerConvertible, layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreatePoolingLayer(in_desc: interop.PointerConvertible, out_desc: interop.PointerConvertible, layer_params: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function BNNSFilterCreateVectorActivationLayer(in_desc: interop.PointerConvertible, out_desc: interop.PointerConvertible, activation: interop.PointerConvertible, filter_params: interop.PointerConvertible): interop.Pointer;

declare function vvrecf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvrec(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvdivf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvdiv(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvsqrtf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvsqrt(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcbrtf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcbrt(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvrsqrtf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvrsqrt(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvexpf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvexp(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvexp2f(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvexp2(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvexpm1f(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvexpm1(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlogf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlog(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlog10f(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlog10(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlog1pf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlog1p(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlog2f(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlog2(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlogbf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvlogb(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvfabsf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvfabs(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvpowf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvpow(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvpowsf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvpows(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvsinf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvsin(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcosf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcos(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvtanf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvtan(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvasinf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvasin(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvacosf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvacos(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvatanf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvatan(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvatan2f(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvatan2(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvsincosf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvsincos(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvcosisinf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcosisin(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvsinhf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvsinh(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcoshf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcosh(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvtanhf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvtanh(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvasinhf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvasinh(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvacoshf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvacosh(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvatanhf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvatanh(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvintf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvint(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvnintf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvnint(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvceilf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvceil(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvfloorf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvfloor(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvfmodf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvfmod(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvremainderf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvremainder(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvcopysignf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvcopysign(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvnextafterf(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvnextafter(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible, p4: interop.PointerConvertible): void;

declare function vvsinpif(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvsinpi(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcospif(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvcospi(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvtanpif(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vvtanpi(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: interop.PointerConvertible): void;

declare function vImageAlphaBlend_Planar8(srcTop: interop.PointerConvertible, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, srcBottomAlpha: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageAlphaBlend_PlanarF(srcTop: interop.PointerConvertible, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, srcBottomAlpha: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageAlphaBlend_ARGB8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageAlphaBlend_ARGBFFFF(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlend_Planar8(srcTop: interop.PointerConvertible, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlend_PlanarF(srcTop: interop.PointerConvertible, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlend_ARGB8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlend_BGRA8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlend_ARGBFFFF(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlend_BGRAFFFF(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlendWithPermute_ARGB8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, makeDestAlphaOpaque: boolean, flags: number): number;

declare function vImagePremultipliedAlphaBlendWithPermute_RGBA8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, makeDestAlphaOpaque: boolean, flags: number): number;

declare function vImagePremultipliedAlphaBlendMultiply_RGBA8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlendScreen_RGBA8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlendDarken_RGBA8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedAlphaBlendLighten_RGBA8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_Planar8(src: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_PlanarF(src: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_RGBA8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_RGBAFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_RGBA16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_RGBA16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_ARGB16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultiplyData_RGBA16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_Planar8(src: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_PlanarF(src: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_RGBA8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_RGBAFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_RGBA16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_RGBA16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_ARGB16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageUnpremultiplyData_RGBA16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedConstAlphaBlend_Planar8(srcTop: interop.PointerConvertible, constAlpha: number, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedConstAlphaBlend_PlanarF(srcTop: interop.PointerConvertible, constAlpha: number, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedConstAlphaBlend_ARGB8888(srcTop: interop.PointerConvertible, constAlpha: number, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImagePremultipliedConstAlphaBlend_ARGBFFFF(srcTop: interop.PointerConvertible, constAlpha: number, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageAlphaBlend_NonpremultipliedToPremultiplied_Planar8(srcTop: interop.PointerConvertible, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageAlphaBlend_NonpremultipliedToPremultiplied_PlanarF(srcTop: interop.PointerConvertible, srcTopAlpha: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGB8888(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageAlphaBlend_NonpremultipliedToPremultiplied_ARGBFFFF(srcTop: interop.PointerConvertible, srcBottom: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageClipToAlpha_Planar8(src: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageClipToAlpha_PlanarF(src: interop.PointerConvertible, alpha: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageClipToAlpha_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageClipToAlpha_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageClipToAlpha_RGBA8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageClipToAlpha_RGBAFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvolve_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, divisor: number, backgroundColor: number, flags: number): number;

declare function vImageConvolve_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, backgroundColor: number, flags: number): number;

declare function vImageConvolve_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, backgroundColor: number, flags: number): number;

declare function vImageConvolve_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, divisor: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolve_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolve_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolveWithBias_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, divisor: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageConvolveWithBias_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageConvolveWithBias_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageConvolveWithBias_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, divisor: number, bias: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolveFloatKernel_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernelHeight: number, kernelWidth: number, bias: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolveWithBias_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, bias: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolveWithBias_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, bias: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolveMultiKernel_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernels: unknown /* const array */, kernel_height: number, kernel_width: number, divisors: unknown /* const array */, biases: unknown /* const array */, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvolveMultiKernel_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernels: unknown /* const array */, kernel_height: number, kernel_width: number, biases: unknown /* const array */, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageRichardsonLucyDeConvolve_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel2: interop.PointerConvertible, kernel_height: number, kernel_width: number, kernel_height2: number, kernel_width2: number, divisor: number, divisor2: number, backgroundColor: number, iterationCount: number, flags: number): number;

declare function vImageRichardsonLucyDeConvolve_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel2: interop.PointerConvertible, kernel_height: number, kernel_width: number, kernel_height2: number, kernel_width2: number, backgroundColor: number, iterationCount: number, flags: number): number;

declare function vImageRichardsonLucyDeConvolve_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel2: interop.PointerConvertible, kernel_height: number, kernel_width: number, kernel_height2: number, kernel_width2: number, divisor: number, divisor2: number, backgroundColor: unknown /* const array */, iterationCount: number, flags: number): number;

declare function vImageRichardsonLucyDeConvolve_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel2: interop.PointerConvertible, kernel_height: number, kernel_width: number, kernel_height2: number, kernel_width2: number, backgroundColor: unknown /* const array */, iterationCount: number, flags: number): number;

declare function vImageBoxConvolve_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, backgroundColor: number, flags: number): number;

declare function vImageBoxConvolve_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageTentConvolve_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, backgroundColor: number, flags: number): number;

declare function vImageTentConvolve_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageSepConvolve_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernelX: interop.PointerConvertible, kernelX_width: number, kernelY: interop.PointerConvertible, kernelY_width: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageSepConvolve_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernelX: interop.PointerConvertible, kernelX_width: number, kernelY: interop.PointerConvertible, kernelY_width: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageSepConvolve_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernelX: interop.PointerConvertible, kernelX_width: number, kernelY: interop.PointerConvertible, kernelY_width: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageSepConvolve_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernelX: interop.PointerConvertible, kernelX_width: number, kernelY: interop.PointerConvertible, kernelY_width: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageSepConvolve_Planar8to16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernelX: interop.PointerConvertible, kernelX_width: number, kernelY: interop.PointerConvertible, kernelY_width: number, scale: number, bias: number, backgroundColor: number, flags: number): number;

declare function vImageSepConvolve_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernelX: interop.PointerConvertible, kernelX_width: number, kernelY: interop.PointerConvertible, kernelY_width: number, bias: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageClip_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: number, minFloat: number, flags: number): number;

declare function vImageConvert_Planar8toPlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: number, minFloat: number, flags: number): number;

declare function vImageConvert_PlanarFtoPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: number, minFloat: number, flags: number): number;

declare function vImageConvert_PlanarFtoPlanar8_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: number, minFloat: number, dither: number, flags: number): number;

declare function vImageConvert_RGBFFFtoRGB888_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, dither: number, flags: number): number;

declare function vImageConvert_ARGBFFFFtoARGB8888_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, dither: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_Planar8toARGB8888(srcA: interop.PointerConvertible, srcR: interop.PointerConvertible, srcG: interop.PointerConvertible, srcB: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_PlanarFtoARGBFFFF(srcA: interop.PointerConvertible, srcR: interop.PointerConvertible, srcG: interop.PointerConvertible, srcB: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB8888toPlanar8(srcARGB: interop.PointerConvertible, destA: interop.PointerConvertible, destR: interop.PointerConvertible, destG: interop.PointerConvertible, destB: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGBFFFFtoPlanarF(srcARGB: interop.PointerConvertible, destA: interop.PointerConvertible, destR: interop.PointerConvertible, destG: interop.PointerConvertible, destB: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ChunkyToPlanar8(srcChannels: interop.Pointer, destPlanarBuffers: interop.Pointer, channelCount: number, srcStrideBytes: number, srcWidth: number, srcHeight: number, srcRowBytes: number, flags: number): number;

declare function vImageConvert_PlanarToChunky8(srcPlanarBuffers: interop.Pointer, destChannels: interop.Pointer, channelCount: number, destStrideBytes: number, destWidth: number, destHeight: number, destRowBytes: number, flags: number): number;

declare function vImageConvert_ChunkyToPlanarF(srcChannels: interop.Pointer, destPlanarBuffers: interop.Pointer, channelCount: number, srcStrideBytes: number, srcWidth: number, srcHeight: number, srcRowBytes: number, flags: number): number;

declare function vImageConvert_PlanarToChunkyF(srcPlanarBuffers: interop.Pointer, destChannels: interop.Pointer, channelCount: number, destStrideBytes: number, destWidth: number, destHeight: number, destRowBytes: number, flags: number): number;

declare function vImageConvert_16SToF(src: interop.PointerConvertible, dest: interop.PointerConvertible, offset: number, scale: number, flags: number): number;

declare function vImageConvert_16UToF(src: interop.PointerConvertible, dest: interop.PointerConvertible, offset: number, scale: number, flags: number): number;

declare function vImageConvert_FTo16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, offset: number, scale: number, flags: number): number;

declare function vImageConvert_FTo16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, offset: number, scale: number, flags: number): number;

declare function vImageConvert_16Uto16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16Fto16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_12UTo16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16UTo12U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageTableLookUp_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, alphaTable: unknown /* const array */, redTable: unknown /* const array */, greenTable: unknown /* const array */, blueTable: unknown /* const array */, flags: number): number;

declare function vImageTableLookUp_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageOverwriteChannels_ARGB8888(newSrc: interop.PointerConvertible, origSrc: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageOverwriteChannels_ARGBFFFF(newSrc: interop.PointerConvertible, origSrc: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageOverwriteChannelsWithScalar_Planar8(scalar: number, dest: interop.PointerConvertible, flags: number): number;

declare function vImageOverwriteChannelsWithScalar_PlanarF(scalar: number, dest: interop.PointerConvertible, flags: number): number;

declare function vImageOverwriteChannelsWithScalar_Planar16S(scalar: number, dest: interop.PointerConvertible, flags: number): number;

declare function vImageOverwriteChannelsWithScalar_Planar16U(scalar: number, dest: interop.PointerConvertible, flags: number): number;

declare function vImageOverwriteChannelsWithScalar_Planar16F(scalar: number, dest: interop.PointerConvertible, flags: number): number;

declare function vImageExtractChannel_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, channelIndex: number, flags: number): number;

declare function vImageExtractChannel_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, channelIndex: number, flags: number): number;

declare function vImageExtractChannel_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, channelIndex: number, flags: number): number;

declare function vImageBufferFill_ARGB8888(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageBufferFill_ARGB16U(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageBufferFill_ARGB16S(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageBufferFill_ARGBFFFF(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageBufferFill_ARGB16F(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageBufferFill_CbCr8(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageBufferFill_CbCr16U(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageBufferFill_CbCr16S(dest: interop.PointerConvertible, color: unknown /* const array */, flags: number): number;

declare function vImageOverwriteChannelsWithScalar_ARGB8888(scalar: number, src: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageOverwriteChannelsWithScalar_ARGBFFFF(scalar: number, src: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImagePermuteChannels_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImagePermuteChannels_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImagePermuteChannels_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImagePermuteChannels_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImagePermuteChannelsWithMaskedInsert_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, copyMask: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImagePermuteChannelsWithMaskedInsert_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, copyMask: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImagePermuteChannelsWithMaskedInsert_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, copyMask: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888toPlanarF(src: interop.PointerConvertible, alpha: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGBFFFFtoPlanar8(src: interop.PointerConvertible, alpha: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGBFFFFtoRGBFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBAFFFFtoRGBFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_BGRAFFFFtoRGBFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBFFFtoARGBFFFF(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible, p5: boolean, flags: number): number;

declare function vImageConvert_RGBFFFtoRGBAFFFF(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible, p5: boolean, flags: number): number;

declare function vImageConvert_RGBFFFtoBGRAFFFF(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible, p5: boolean, flags: number): number;

declare function vImageConvert_ARGB1555toPlanar8(src: interop.PointerConvertible, destA: interop.PointerConvertible, destR: interop.PointerConvertible, destG: interop.PointerConvertible, destB: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB1555toARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar8toARGB1555(srcA: interop.PointerConvertible, srcR: interop.PointerConvertible, srcG: interop.PointerConvertible, srcB: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB8888toARGB1555(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBA5551toRGBA8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBA8888toRGBA5551(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB8888toARGB1555_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_RGBA8888toRGBA5551_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_RGB565toARGB8888(alpha: number, src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB565toRGBA8888(alpha: number, src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB565toBGRA8888(alpha: number, src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB565toRGB888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB8888toRGB565(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBA8888toRGB565(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_BGRA8888toRGB565(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB888toRGB565_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_ARGB8888toRGB565_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_RGBA8888toRGB565_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_BGRA8888toRGB565_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_RGB565toPlanar8(src: interop.PointerConvertible, destR: interop.PointerConvertible, destG: interop.PointerConvertible, destB: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar8toRGB565(srcR: interop.PointerConvertible, srcG: interop.PointerConvertible, srcB: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBA5551toRGB565(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB1555toRGB565(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB565toRGBA5551(src: interop.PointerConvertible, dest: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_RGB565toARGB1555(src: interop.PointerConvertible, dest: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_Planar16FtoPlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_PlanarFtoPlanar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar8toPlanar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16FtoPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16UToPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar8To16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB888toARGB8888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible, p5: boolean, p6: number): number;

declare function vImageConvert_RGB888toRGBA8888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible, p5: boolean, p6: number): number;

declare function vImageConvert_RGB888toBGRA8888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible, p5: boolean, p6: number): number;

declare function vImageConvert_ARGB8888toRGB888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number): number;

declare function vImageConvert_RGBA8888toRGB888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number): number;

declare function vImageConvert_BGRA8888toRGB888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number): number;

declare function vImageFlatten_ARGB8888ToRGB888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: unknown /* const array */, p4: boolean, p5: number): number;

declare function vImageFlatten_ARGBFFFFToRGBFFF(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: unknown /* const array */, p4: boolean, p5: number): number;

declare function vImageFlatten_RGBA8888ToRGB888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: unknown /* const array */, p4: boolean, p5: number): number;

declare function vImageFlatten_RGBAFFFFToRGBFFF(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: unknown /* const array */, p4: boolean, p5: number): number;

declare function vImageFlatten_BGRA8888ToRGB888(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: unknown /* const array */, p4: boolean, p5: number): number;

declare function vImageFlatten_BGRAFFFFToRGBFFF(p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: unknown /* const array */, p4: boolean, p5: number): number;

declare function vImageConvert_Planar8toRGB888(planarRed: interop.PointerConvertible, planarGreen: interop.PointerConvertible, planarBlue: interop.PointerConvertible, rgbDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_PlanarFtoRGBFFF(planarRed: interop.PointerConvertible, planarGreen: interop.PointerConvertible, planarBlue: interop.PointerConvertible, rgbDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB888toPlanar8(rgbSrc: interop.PointerConvertible, redDest: interop.PointerConvertible, greenDest: interop.PointerConvertible, blueDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBFFFtoPlanarF(rgbSrc: interop.PointerConvertible, redDest: interop.PointerConvertible, greenDest: interop.PointerConvertible, blueDest: interop.PointerConvertible, flags: number): number;

declare function vImageSelectChannels_ARGB8888(newSrc: interop.PointerConvertible, origSrc: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageSelectChannels_ARGBFFFF(newSrc: interop.PointerConvertible, origSrc: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageOverwriteChannelsWithPixel_ARGB8888(the_pixel: unknown /* const array */, src: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageOverwriteChannelsWithPixel_ARGB16U(the_pixel: unknown /* const array */, src: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageOverwriteChannelsWithPixel_ARGBFFFF(the_pixel: unknown /* const array */, src: interop.PointerConvertible, dest: interop.PointerConvertible, copyMask: number, flags: number): number;

declare function vImageConvert_Planar8ToXRGB8888(alpha: number, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar8ToBGRX8888(blue: interop.PointerConvertible, green: interop.PointerConvertible, red: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_PlanarFToXRGBFFFF(alpha: number, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_PlanarFToBGRXFFFF(blue: interop.PointerConvertible, green: interop.PointerConvertible, red: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_XRGB8888ToPlanar8(src: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_BGRX8888ToPlanar8(src: interop.PointerConvertible, blue: interop.PointerConvertible, green: interop.PointerConvertible, red: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_XRGBFFFFToPlanarF(src: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_BGRXFFFFToPlanarF(src: interop.PointerConvertible, blue: interop.PointerConvertible, green: interop.PointerConvertible, red: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar8ToARGBFFFF(alpha: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_Planar8ToXRGBFFFF(alpha: number, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_Planar8ToBGRXFFFF(blue: interop.PointerConvertible, green: interop.PointerConvertible, red: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_PlanarFToARGB8888(alpha: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_PlanarFToXRGB8888(alpha: number, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_PlanarFToBGRX8888(blue: interop.PointerConvertible, green: interop.PointerConvertible, red: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, maxFloat: unknown /* const array */, minFloat: unknown /* const array */, flags: number): number;

declare function vImageConvert_RGB16UtoARGB16U(rgbSrc: interop.PointerConvertible, aSrc: interop.PointerConvertible, alpha: number, argbDest: interop.PointerConvertible, premultiply: boolean, flags: number): number;

declare function vImageConvert_RGB16UtoRGBA16U(rgbSrc: interop.PointerConvertible, aSrc: interop.PointerConvertible, alpha: number, rgbaDest: interop.PointerConvertible, premultiply: boolean, flags: number): number;

declare function vImageConvert_RGB16UtoBGRA16U(rgbSrc: interop.PointerConvertible, aSrc: interop.PointerConvertible, alpha: number, bgraDest: interop.PointerConvertible, premultiply: boolean, flags: number): number;

declare function vImageConvert_ARGB16UtoRGB16U(argbSrc: interop.PointerConvertible, rgbDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGBA16UtoRGB16U(rgbaSrc: interop.PointerConvertible, rgbDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_BGRA16UtoRGB16U(bgraSrc: interop.PointerConvertible, rgbDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16UtoARGB16U(aSrc: interop.PointerConvertible, rSrc: interop.PointerConvertible, gSrc: interop.PointerConvertible, bSrc: interop.PointerConvertible, argbDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB16UtoPlanar16U(argbSrc: interop.PointerConvertible, aDest: interop.PointerConvertible, rDest: interop.PointerConvertible, gDest: interop.PointerConvertible, bDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16UtoRGB16U(rSrc: interop.PointerConvertible, gSrc: interop.PointerConvertible, bSrc: interop.PointerConvertible, rgbDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB16UtoPlanar16U(rgbSrc: interop.PointerConvertible, rDest: interop.PointerConvertible, gDest: interop.PointerConvertible, bDest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16UtoPlanar8_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_RGB16UtoRGB888_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_ARGB16UtoARGB8888_dithered(src: interop.PointerConvertible, dest: interop.PointerConvertible, dither: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16UToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, copyMask: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888ToARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, copyMask: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvert_RGB16UToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, copyMask: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888ToRGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, copyMask: number, backgroundColor: unknown /* const array */, flags: number): number;

declare function vImageByteSwap_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageFlatten_ARGB8888(argbSrc: interop.PointerConvertible, argbDst: interop.PointerConvertible, argbBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageFlatten_RGBA8888(rgbaSrc: interop.PointerConvertible, rgbaDst: interop.PointerConvertible, rgbaBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageFlatten_ARGB16U(argbSrc: interop.PointerConvertible, argbDst: interop.PointerConvertible, argbBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageFlatten_RGBA16U(rgbaSrc: interop.PointerConvertible, rgbaDst: interop.PointerConvertible, rgbaBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageFlatten_ARGB16Q12(argbSrc: interop.PointerConvertible, argbDst: interop.PointerConvertible, argbBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageFlatten_RGBA16Q12(argbSrc: interop.PointerConvertible, argbDst: interop.PointerConvertible, argbBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageFlatten_ARGBFFFF(argbSrc: interop.PointerConvertible, argbDst: interop.PointerConvertible, argbBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageFlatten_RGBAFFFF(rgbaSrc: interop.PointerConvertible, rgbaDst: interop.PointerConvertible, rgbaBackgroundColorPtr: unknown /* const array */, isImagePremultiplied: boolean, flags: number): number;

declare function vImageConvert_Planar1toPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar2toPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar4toPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Indexed1toPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, colors: unknown /* const array */, flags: number): number;

declare function vImageConvert_Indexed2toPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, colors: unknown /* const array */, flags: number): number;

declare function vImageConvert_Indexed4toPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, colors: unknown /* const array */, flags: number): number;

declare function vImageConvert_Planar8toPlanar1(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_Planar8toPlanar2(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_Planar8toPlanar4(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, dither: number, flags: number): number;

declare function vImageConvert_Planar8toIndexed1(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, colors: unknown /* const array */, dither: number, flags: number): number;

declare function vImageConvert_Planar8toIndexed2(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, colors: unknown /* const array */, dither: number, flags: number): number;

declare function vImageConvert_Planar8toIndexed4(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, colors: unknown /* const array */, dither: number, flags: number): number;

declare function vImageConvert_8to16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_RGB888toPlanar16Q12(src: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_ARGB8888toPlanar16Q12(src: interop.PointerConvertible, alpha: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16Q12to8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16Q12toRGB888(red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16Q12toARGB8888(alpha: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16Q12to16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16Q12toRGB16F(red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Planar16Q12toARGB16F(alpha: interop.PointerConvertible, red: interop.PointerConvertible, green: interop.PointerConvertible, blue: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16Fto16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16Q12toF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_Fto16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16Q12to16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_16Uto16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageConvert_YpCbCrToARGB_GenerateConversion(matrix: interop.PointerConvertible, pixelRange: interop.PointerConvertible, outInfo: interop.PointerConvertible, inYpCbCrType: interop.Enum<typeof vImageYpCbCrType>, outARGBType: interop.Enum<typeof vImageARGBType>, flags: number): number;

declare function vImageConvert_ARGBToYpCbCr_GenerateConversion(matrix: interop.PointerConvertible, pixelRange: interop.PointerConvertible, outInfo: interop.PointerConvertible, inARGBType: interop.Enum<typeof vImageARGBType>, outYpCbCrType: interop.Enum<typeof vImageYpCbCrType>, flags: number): number;

declare function vImageConvert_422YpCbYpCr8ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To422YpCbYpCr8(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_422CbYpCrYp8ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To422CbYpCrYp8(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_422CbYpCrYp8_AA8ToARGB8888(src: interop.PointerConvertible, srcA: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888To422CbYpCrYp8_AA8(src: interop.PointerConvertible, dest: interop.PointerConvertible, destA: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_444AYpCbCr8ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888To444AYpCbCr8(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_444CbYpCrA8ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888To444CbYpCrA8(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_444CrYpCb8ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To444CrYpCb8(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_420Yp8_Cb8_Cr8ToARGB8888(srcYp: interop.PointerConvertible, srcCb: interop.PointerConvertible, srcCr: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To420Yp8_Cb8_Cr8(src: interop.PointerConvertible, destYp: interop.PointerConvertible, destCb: interop.PointerConvertible, destCr: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_420Yp8_CbCr8ToARGB8888(srcYp: interop.PointerConvertible, srcCbCr: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To420Yp8_CbCr8(src: interop.PointerConvertible, destYp: interop.PointerConvertible, destCbCr: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_444AYpCbCr16ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888To444AYpCbCr16(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_444AYpCbCr16ToARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16UTo444AYpCbCr16(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_444CrYpCb10ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To444CrYpCb10(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_444CrYpCb10ToARGB16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB16Q12To444CrYpCb10(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To422CrYpCbYpCbYpCbYpCrYpCrYp10(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_422CrYpCbYpCbYpCbYpCrYpCrYp10ToARGB16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB16Q12To422CrYpCbYpCbYpCbYpCrYpCrYp10(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_422CbYpCrYp16ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB8888To422CbYpCrYp16(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_422CbYpCrYp16ToARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, alpha: number, flags: number): number;

declare function vImageConvert_ARGB16UTo422CbYpCrYp16(src: interop.PointerConvertible, dest: interop.PointerConvertible, info: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_RGBA1010102ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888ToRGBA1010102(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_RGBA1010102ToARGB16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16Q12ToRGBA1010102(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, RGB101010Min: number, RGB101010Max: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_RGBA1010102ToARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16UToRGBA1010102(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImagePermuteChannels_RGB888(src: interop.PointerConvertible, dest: interop.PointerConvertible, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageCopyBuffer(src: interop.PointerConvertible, dest: interop.PointerConvertible, pixelSize: number, flags: number): number;

declare function vImageConvert_XRGB2101010ToARGB8888(src: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB2101010ToARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888ToXRGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB8888ToARGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_XRGB2101010ToARGB16Q12(src: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB2101010ToARGB16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16Q12ToXRGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, RGB101010Min: number, RGB101010Max: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16Q12ToARGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, RGB101010Min: number, RGB101010Max: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_XRGB2101010ToARGB16U(src: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB2101010ToARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16UToXRGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB16UToARGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_XRGB2101010ToARGBFFFF(src: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB2101010ToARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGBFFFFToXRGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGBFFFFToARGB2101010(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_XRGB2101010ToARGB16F(src: interop.PointerConvertible, alpha: number, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageConvert_ARGB2101010ToARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, RGB101010RangeMin: number, RGB101010RangeMax: number, permuteMap: unknown /* const array */, flags: number): number;

declare function vImageRotate_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: number, flags: number): number;

declare function vImageRotate_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: number, flags: number): number;

declare function vImageRotate_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: number, flags: number): number;

declare function vImageRotate_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, angleInRadians: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageScale_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_Planar16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_CbCr8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_CbCr16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageScale_XRGB2101010W(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageAffineWarp_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarp_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarp_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarp_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarp_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarp_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarp_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarp_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarp_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpD_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarpD_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarpD_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpD_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpD_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpD_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpD_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarpD_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpD_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpCG_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarpCG_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageAffineWarpCG_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpCG_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpCG_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageAffineWarpCG_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageGetPerspectiveWarp(srcPoints: unknown /* const array */, destPoints: unknown /* const array */, transform: interop.PointerConvertible, flags: number): number;

declare function vImagePerspectiveWarp_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, interpolation: number, backColor: number, flags: number): number;

declare function vImagePerspectiveWarp_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, interpolation: number, backColor: unknown /* const array */, flags: number): number;

declare function vImagePerspectiveWarp_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, interpolation: number, backColor: number, flags: number): number;

declare function vImagePerspectiveWarp_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, interpolation: number, backColor: unknown /* const array */, flags: number): number;

declare function vImagePerspectiveWarp_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, interpolation: number, backColor: number, flags: number): number;

declare function vImagePerspectiveWarp_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, transform: interop.PointerConvertible, interpolation: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalReflect_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageHorizontalReflect_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageVerticalReflect_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageRotate90_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: number, flags: number): number;

declare function vImageRotate90_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: number, flags: number): number;

declare function vImageRotate90_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: number, flags: number): number;

declare function vImageRotate90_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate90_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate90_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate90_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate90_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: number, flags: number): number;

declare function vImageRotate90_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageRotate90_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, rotationConstant: number, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShear_Planar16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShear_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShear_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShear_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShear_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShear_Planar16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShear_Planar16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShear_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShear_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShear_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShearD_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShearD_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageHorizontalShearD_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShearD_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShearD_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_ARGB16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_ARGB16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_Planar16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShearD_CbCr16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_ARGB16F(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_CbCr8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_CbCr16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_CbCr16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_CbCr16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShearD_CbCr16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_CbCr8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_CbCr16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_CbCr16U(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShear_CbCr16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageVerticalShearD_CbCr16S(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: unknown /* const array */, flags: number): number;

declare function vImageHorizontalShear_XRGB2101010W(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, xTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageVerticalShear_XRGB2101010W(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, yTranslate: number, shearSlope: number, filter: interop.PointerConvertible, backColor: number, flags: number): number;

declare function vImageNewResamplingFilter(scale: number, flags: number): interop.Pointer;

declare function vImageDestroyResamplingFilter(filter: interop.PointerConvertible): void;

declare function vImageNewResamplingFilterForFunctionUsingBuffer(filter: interop.PointerConvertible, scale: number, kernelFunc: (p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible) => void, kernelWidth: number, userData: interop.PointerConvertible, flags: number): number;

declare function vImageGetResamplingFilterSize(scale: number, kernelFunc: (p1: interop.PointerConvertible, p2: interop.PointerConvertible, p3: number, p4: interop.PointerConvertible) => void, kernelWidth: number, flags: number): number;

declare function vImageGetResamplingFilterExtent(filter: interop.PointerConvertible, flags: number): number;

declare function vImageHistogramCalculation_Planar8(src: interop.PointerConvertible, histogram: interop.PointerConvertible, flags: number): number;

declare function vImageHistogramCalculation_PlanarF(src: interop.PointerConvertible, histogram: interop.PointerConvertible, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageHistogramCalculation_ARGB8888(src: interop.PointerConvertible, histogram: unknown /* const array */, flags: number): number;

declare function vImageHistogramCalculation_ARGBFFFF(src: interop.PointerConvertible, histogram: unknown /* const array */, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageEqualization_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageEqualization_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageEqualization_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageEqualization_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageHistogramSpecification_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, desired_histogram: interop.PointerConvertible, flags: number): number;

declare function vImageHistogramSpecification_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, desired_histogram: interop.PointerConvertible, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageHistogramSpecification_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, desired_histogram: unknown /* const array */, flags: number): number;

declare function vImageHistogramSpecification_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, desired_histogram: unknown /* const array */, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageContrastStretch_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageContrastStretch_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageContrastStretch_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, flags: number): number;

declare function vImageContrastStretch_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageEndsInContrastStretch_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, percent_low: number, percent_high: number, flags: number): number;

declare function vImageEndsInContrastStretch_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, percent_low: number, percent_high: number, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageEndsInContrastStretch_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, percent_low: unknown /* const array */, percent_high: unknown /* const array */, flags: number): number;

declare function vImageEndsInContrastStretch_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, percent_low: unknown /* const array */, percent_high: unknown /* const array */, histogram_entries: number, minVal: number, maxVal: number, flags: number): number;

declare function vImageDilate_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageDilate_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageDilate_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageDilate_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageErode_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageErode_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageErode_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageErode_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel: interop.PointerConvertible, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMax_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMax_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMax_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMax_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMin_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMin_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMin_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImageMin_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, srcOffsetToROI_X: number, srcOffsetToROI_Y: number, kernel_height: number, kernel_width: number, flags: number): number;

declare function vImagePNGDecompressionFilter(buffer: interop.PointerConvertible, startScanline: number, scanlineCount: number, bitsPerPixel: number, filterMethodNumber: number, filterType: number, flags: number): number;

declare function vImageMatrixMultiply_Planar16S(srcs: interop.Pointer, dests: interop.Pointer, src_planes: number, dest_planes: number, matrix: interop.Pointer, divisor: number, pre_bias: interop.PointerConvertible, post_bias: interop.PointerConvertible, flags: number): number;

declare function vImageMatrixMultiply_Planar8(srcs: interop.Pointer, dests: interop.Pointer, src_planes: number, dest_planes: number, matrix: interop.Pointer, divisor: number, pre_bias: interop.PointerConvertible, post_bias: interop.PointerConvertible, flags: number): number;

declare function vImageMatrixMultiply_PlanarF(srcs: interop.Pointer, dests: interop.Pointer, src_planes: number, dest_planes: number, matrix: interop.Pointer, pre_bias: interop.PointerConvertible, post_bias: interop.PointerConvertible, flags: number): number;

declare function vImageMatrixMultiply_ARGB8888(src: interop.PointerConvertible, dest: interop.PointerConvertible, matrix: unknown /* const array */, divisor: number, pre_bias: interop.PointerConvertible, post_bias: interop.PointerConvertible, flags: number): number;

declare function vImageMatrixMultiply_ARGBFFFF(src: interop.PointerConvertible, dest: interop.PointerConvertible, matrix: unknown /* const array */, pre_bias: interop.PointerConvertible, post_bias: interop.PointerConvertible, flags: number): number;

declare function vImageMatrixMultiply_ARGB8888ToPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, matrix: unknown /* const array */, divisor: number, pre_bias: unknown /* const array */, post_bias: number, flags: number): number;

declare function vImageMatrixMultiply_ARGBFFFFToPlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, matrix: unknown /* const array */, pre_bias: unknown /* const array */, post_bias: number, flags: number): number;

declare function vImageCreateGammaFunction(gamma: number, gamma_type: number, flags: number): interop.Pointer;

declare function vImageDestroyGammaFunction(f: interop.PointerConvertible): void;

declare function vImageGamma_Planar8toPlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, gamma: interop.PointerConvertible, flags: number): number;

declare function vImageGamma_PlanarFtoPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, gamma: interop.PointerConvertible, flags: number): number;

declare function vImageGamma_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, gamma: interop.PointerConvertible, flags: number): number;

declare function vImagePiecewiseGamma_Planar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImagePiecewiseGamma_Planar8toPlanar16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImagePiecewiseGamma_Planar16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImagePiecewiseGamma_Planar16Q12toPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImagePiecewiseGamma_Planar8toPlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImagePiecewiseGamma_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImagePiecewiseGamma_PlanarFtoPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImageSymmetricPiecewiseGamma_Planar16Q12(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImageSymmetricPiecewiseGamma_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, exponentialCoeffs: unknown /* const array */, gamma: number, linearCoeffs: unknown /* const array */, boundary: number, flags: number): number;

declare function vImagePiecewisePolynomial_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, coefficients: interop.PointerConvertible, boundaries: interop.PointerConvertible, order: number, log2segments: number, flags: number): number;

declare function vImagePiecewisePolynomial_Planar8toPlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, coefficients: interop.PointerConvertible, boundaries: interop.PointerConvertible, order: number, log2segments: number, flags: number): number;

declare function vImagePiecewisePolynomial_PlanarFtoPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, coefficients: interop.PointerConvertible, boundaries: interop.PointerConvertible, order: number, log2segments: number, flags: number): number;

declare function vImageSymmetricPiecewisePolynomial_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, coefficients: interop.PointerConvertible, boundaries: interop.PointerConvertible, order: number, log2segments: number, flags: number): number;

declare function vImagePiecewiseRational_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, topCoefficients: interop.PointerConvertible, bottomCoefficients: interop.PointerConvertible, boundaries: interop.PointerConvertible, topOrder: number, bottomOrder: number, log2segments: number, flags: number): number;

declare function vImageLookupTable_Planar8toPlanar16(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_Planar8toPlanar24(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_Planar8toPlanar48(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_Planar8toPlanar96(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_Planar8toPlanar128(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_Planar8toPlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_PlanarFtoPlanar8(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_8to64U(src: interop.PointerConvertible, dest: interop.PointerConvertible, LUT: unknown /* const array */, flags: number): number;

declare function vImageLookupTable_Planar16(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: unknown /* const array */, flags: number): number;

declare function vImageInterpolatedLookupTable_PlanarF(src: interop.PointerConvertible, dest: interop.PointerConvertible, table: interop.PointerConvertible, tableEntries: number, maxFloat: number, minFloat: number, flags: number): number;

declare function vImageMultidimensionalTable_Create(tableData: interop.PointerConvertible, numSrcChannels: number, numDestChannels: number, table_entries_per_dimension: interop.Pointer, hint: interop.Enum<typeof vImageMDTableUsageHint>, flags: number, err: interop.PointerConvertible): interop.Pointer;

declare function vImageMultidimensionalTable_Retain(table: interop.PointerConvertible): number;

declare function vImageMultidimensionalTable_Release(table: interop.PointerConvertible): number;

declare function vImageMultiDimensionalInterpolatedLookupTable_PlanarF(srcs: interop.Pointer, dests: interop.Pointer, tempBuffer: interop.PointerConvertible, table: interop.PointerConvertible, method: interop.Enum<typeof vImage_InterpolationMethod>, flags: number): number;

declare function vImageMultiDimensionalInterpolatedLookupTable_Planar16Q12(srcs: interop.Pointer, dests: interop.Pointer, tempBuffer: interop.PointerConvertible, table: interop.PointerConvertible, method: interop.Enum<typeof vImage_InterpolationMethod>, flags: number): number;

declare function vImageFloodFill_Planar8(srcDest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, seedX: number, seedY: number, newValue: number, connectivity: number, flags: number): number;

declare function vImageFloodFill_Planar16U(srcDest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, seedX: number, seedY: number, newValue: number, connectivity: number, flags: number): number;

declare function vImageFloodFill_ARGB8888(srcDest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, seedX: number, seedY: number, newValue: unknown /* const array */, connectivity: number, flags: number): number;

declare function vImageFloodFill_ARGB16U(srcDest: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, seedX: number, seedY: number, newValue: unknown /* const array */, connectivity: number, flags: number): number;

declare function vImageBuffer_Init(buf: interop.PointerConvertible, height: number, width: number, pixelBits: number, flags: number): number;

declare function vImageBuffer_GetSize(buf: interop.PointerConvertible): CGSize;

declare function vImageCGImageFormat_GetComponentCount(format: interop.PointerConvertible): number;

declare function vImageCGImageFormat_IsEqual(f1: interop.PointerConvertible, f2: interop.PointerConvertible): number;

declare function vImageBuffer_InitWithCGImage(buf: interop.PointerConvertible, format: interop.PointerConvertible, backgroundColor: interop.PointerConvertible, image: interop.Object, flags: number): number;

declare function vImageCreateCGImageFromBuffer(buf: interop.PointerConvertible, format: interop.PointerConvertible, callback: (p1: interop.PointerConvertible, p2: interop.PointerConvertible) => void, userData: interop.PointerConvertible, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageConverter_Retain(converter: interop.Object): void;

declare function vImageConverter_Release(converter: interop.Object): void;

declare function vImageConverter_CreateWithCGImageFormat(srcFormat: interop.PointerConvertible, destFormat: interop.PointerConvertible, backgroundColor: interop.PointerConvertible, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageConverter_CreateWithColorSyncCodeFragment(codeFragment: interop.Object, srcFormat: interop.PointerConvertible, destFormat: interop.PointerConvertible, backgroundColor: interop.PointerConvertible, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageConverter_CreateWithCGColorConversionInfo(colorConversionInfoRef: interop.PointerConvertible, sFormat: interop.PointerConvertible, dFormat: interop.PointerConvertible, bg: interop.PointerConvertible, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageConverter_MustOperateOutOfPlace(converter: interop.PointerConvertible, srcs: interop.PointerConvertible, dests: interop.PointerConvertible, flags: number): number;

declare function vImageConverter_GetNumberOfSourceBuffers(converter: interop.PointerConvertible): number;

declare function vImageConverter_GetNumberOfDestinationBuffers(converter: interop.PointerConvertible): number;

declare function vImageConverter_GetSourceBufferOrder(converter: interop.Object): interop.Pointer;

declare function vImageConverter_GetDestinationBufferOrder(converter: interop.Object): interop.Pointer;

declare function vImageConvert_AnyToAny(converter: interop.PointerConvertible, srcs: interop.PointerConvertible, dests: interop.PointerConvertible, tempBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageBuffer_InitWithCVPixelBuffer(buffer: interop.PointerConvertible, desiredFormat: interop.PointerConvertible, cvPixelBuffer: interop.Object, cvImageFormat: interop.Object, backgroundColor: interop.PointerConvertible, flags: number): number;

declare function vImageBuffer_CopyToCVPixelBuffer(buffer: interop.PointerConvertible, bufferFormat: interop.PointerConvertible, cvPixelBuffer: interop.Object, cvImageFormat: interop.Object, backgroundColor: interop.PointerConvertible, flags: number): number;

declare function vImageCVImageFormat_CreateWithCVPixelBuffer(buffer: interop.Object): interop.Object;

declare function vImageCVImageFormat_Create(imageFormatType: number, matrix: interop.PointerConvertible, cvImageBufferChromaLocation: interop.Object, baseColorspace: interop.Object, alphaIsOneHint: number): interop.Object;

declare function vImageCVImageFormat_Copy(format: interop.Object): interop.Object;

declare function vImageCVImageFormat_Retain(fmt: interop.Object): void;

declare function vImageCVImageFormat_Release(fmt: interop.Object): void;

declare function vImageCVImageFormat_GetFormatCode(format: interop.Object): number;

declare function vImageCVImageFormat_GetChannelCount(format: interop.Object): number;

declare function vImageCVImageFormat_GetChannelNames(format: interop.Object): interop.Pointer;

declare function vImageCVImageFormat_GetColorSpace(format: interop.Object): interop.Object;

declare function vImageCVImageFormat_SetColorSpace(format: interop.Object, colorspace: interop.Object): number;

declare function vImageCVImageFormat_GetChromaSiting(format: interop.Object): interop.Object;

declare function vImageCVImageFormat_SetChromaSiting(format: interop.Object, siting: interop.Object): number;

declare function vImageCVImageFormat_GetConversionMatrix(format: interop.Object, outType: interop.PointerConvertible): interop.Pointer;

declare function vImageCVImageFormat_CopyConversionMatrix(format: interop.Object, matrix: interop.PointerConvertible, inType: number): number;

declare function vImageCVImageFormat_GetAlphaHint(format: interop.Object): number;

declare function vImageCVImageFormat_SetAlphaHint(format: interop.Object, alphaIsOne: number): number;

declare function vImageCVImageFormat_GetChannelDescription(format: interop.Object, type: number): interop.Pointer;

declare function vImageCVImageFormat_CopyChannelDescription(format: interop.Object, desc: interop.PointerConvertible, type: number): number;

declare function vImageCVImageFormat_GetUserData(format: interop.Object): interop.Pointer;

declare function vImageCVImageFormat_SetUserData(format: interop.Object, userData: interop.PointerConvertible, userDataReleaseCallback: (p1: interop.PointerConvertible, p2: interop.PointerConvertible) => void): number;

declare function vImageCreateRGBColorSpaceWithPrimariesAndTransferFunction(primaries: interop.PointerConvertible, tf: interop.PointerConvertible, intent: interop.Enum<typeof CGColorRenderingIntent>, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageCreateMonochromeColorSpaceWithWhitePointAndTransferFunction(whitePoint: interop.PointerConvertible, tf: interop.PointerConvertible, intent: interop.Enum<typeof CGColorRenderingIntent>, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageConverter_CreateForCGToCVImageFormat(srcFormat: interop.PointerConvertible, destFormat: interop.Object, backgroundColor: interop.PointerConvertible, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageConverter_CreateForCVToCGImageFormat(srcFormat: interop.Object, destFormat: interop.PointerConvertible, backgroundColor: interop.PointerConvertible, flags: number, error: interop.PointerConvertible): interop.Object;

declare function vImageBuffer_InitForCopyToCVPixelBuffer(buffers: interop.PointerConvertible, converter: interop.PointerConvertible, pixelBuffer: interop.PointerConvertible, flags: number): number;

declare function vImageBuffer_InitForCopyFromCVPixelBuffer(buffers: interop.PointerConvertible, converter: interop.PointerConvertible, pixelBuffer: interop.PointerConvertible, flags: number): number;

declare interface OS_la_object extends NSObjectProtocol {
}

declare class OS_la_object extends NativeObject implements OS_la_object {
}

